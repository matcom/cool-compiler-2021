from abc import ABC
from pyjapt import ShiftReduceParser
from cool.grammar import G


class CoolParser(ShiftReduceParser, ABC):
    def __init__(self, verbose=False):
        self.grammar = G
        self.verbose = verbose
        self.action = self.__action_table()
        self.goto = self.__goto_table()
        self._errors = []
        self.error_handler = (
            G.parsing_error_handler
            if G.parsing_error_handler is not None
            else self.error
        )

    @staticmethod
    def __action_table():
        return {
            (0, G["class"]): ("SHIFT", 1),
            (1, G["type"]): ("SHIFT", 2),
            (2, G["inherits"]): ("SHIFT", 149),
            (2, G["{"]): ("SHIFT", 3),
            (3, G["id"]): ("SHIFT", 4),
            (3, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (4, G[":"]): ("SHIFT", 133),
            (4, G["("]): ("SHIFT", 5),
            (5, G[")"]): ("SHIFT", 6),
            (5, G["id"]): ("SHIFT", 121),
            (6, G[":"]): ("SHIFT", 7),
            (7, G["type"]): ("SHIFT", 8),
            (8, G["{"]): ("SHIFT", 9),
            (9, G["while"]): ("SHIFT", 13),
            (9, G["false"]): ("SHIFT", 26),
            (9, G["id"]): ("SHIFT", 46),
            (9, G["case"]): ("SHIFT", 21),
            (9, G["not"]): ("SHIFT", 30),
            (9, G["string"]): ("SHIFT", 32),
            (9, G["{"]): ("SHIFT", 10),
            (9, G["isvoid"]): ("SHIFT", 24),
            (9, G["if"]): ("SHIFT", 12),
            (9, G["new"]): ("SHIFT", 22),
            (9, G["("]): ("SHIFT", 11),
            (9, G["~"]): ("SHIFT", 27),
            (9, G["let"]): ("SHIFT", 14),
            (9, G["int"]): ("SHIFT", 31),
            (9, G["true"]): ("SHIFT", 25),
            (10, G["false"]): ("SHIFT", 26),
            (10, G["id"]): ("SHIFT", 46),
            (10, G["while"]): ("SHIFT", 13),
            (10, G["isvoid"]): ("SHIFT", 24),
            (10, G["string"]): ("SHIFT", 32),
            (10, G["~"]): ("SHIFT", 27),
            (10, G["not"]): ("SHIFT", 30),
            (10, G["case"]): ("SHIFT", 21),
            (10, G["new"]): ("SHIFT", 22),
            (10, G["if"]): ("SHIFT", 12),
            (10, G["{"]): ("SHIFT", 10),
            (10, G["("]): ("SHIFT", 11),
            (10, G["let"]): ("SHIFT", 14),
            (10, G["true"]): ("SHIFT", 25),
            (10, G["int"]): ("SHIFT", 31),
            (11, G["{"]): ("SHIFT", 10),
            (11, G["string"]): ("SHIFT", 32),
            (11, G["id"]): ("SHIFT", 46),
            (11, G["if"]): ("SHIFT", 12),
            (11, G["new"]): ("SHIFT", 22),
            (11, G["("]): ("SHIFT", 11),
            (11, G["isvoid"]): ("SHIFT", 24),
            (11, G["let"]): ("SHIFT", 14),
            (11, G["~"]): ("SHIFT", 27),
            (11, G["int"]): ("SHIFT", 31),
            (11, G["true"]): ("SHIFT", 25),
            (11, G["while"]): ("SHIFT", 13),
            (11, G["false"]): ("SHIFT", 26),
            (11, G["case"]): ("SHIFT", 21),
            (11, G["not"]): ("SHIFT", 30),
            (12, G["case"]): ("SHIFT", 21),
            (12, G["not"]): ("SHIFT", 30),
            (12, G["if"]): ("SHIFT", 12),
            (12, G["{"]): ("SHIFT", 10),
            (12, G["new"]): ("SHIFT", 22),
            (12, G["("]): ("SHIFT", 11),
            (12, G["id"]): ("SHIFT", 46),
            (12, G["let"]): ("SHIFT", 14),
            (12, G["int"]): ("SHIFT", 31),
            (12, G["true"]): ("SHIFT", 25),
            (12, G["isvoid"]): ("SHIFT", 24),
            (12, G["false"]): ("SHIFT", 26),
            (12, G["~"]): ("SHIFT", 27),
            (12, G["while"]): ("SHIFT", 13),
            (12, G["string"]): ("SHIFT", 32),
            (13, G["int"]): ("SHIFT", 31),
            (13, G["{"]): ("SHIFT", 10),
            (13, G["true"]): ("SHIFT", 25),
            (13, G["false"]): ("SHIFT", 26),
            (13, G["id"]): ("SHIFT", 46),
            (13, G["let"]): ("SHIFT", 14),
            (13, G["string"]): ("SHIFT", 32),
            (13, G["isvoid"]): ("SHIFT", 24),
            (13, G["if"]): ("SHIFT", 12),
            (13, G["~"]): ("SHIFT", 27),
            (13, G["new"]): ("SHIFT", 22),
            (13, G["("]): ("SHIFT", 11),
            (13, G["while"]): ("SHIFT", 13),
            (13, G["case"]): ("SHIFT", 21),
            (13, G["not"]): ("SHIFT", 30),
            (14, G["id"]): ("SHIFT", 15),
            (15, G[":"]): ("SHIFT", 16),
            (16, G["type"]): ("SHIFT", 17),
            (17, G["<-"]): ("SHIFT", 20),
            (17, G[","]): ("SHIFT", 18),
            (17, G["in"]): ("REDUCE", G["declaration-list -> id : type"]),
            (18, G["id"]): ("SHIFT", 15),
            (19, G["in"]): (
                "REDUCE",
                G["declaration-list -> id : type , declaration-list"],
            ),
            (20, G["int"]): ("SHIFT", 31),
            (20, G["true"]): ("SHIFT", 25),
            (20, G["id"]): ("SHIFT", 46),
            (20, G["false"]): ("SHIFT", 26),
            (20, G["let"]): ("SHIFT", 14),
            (20, G["isvoid"]): ("SHIFT", 24),
            (20, G["string"]): ("SHIFT", 32),
            (20, G["~"]): ("SHIFT", 27),
            (20, G["while"]): ("SHIFT", 13),
            (20, G["if"]): ("SHIFT", 12),
            (20, G["new"]): ("SHIFT", 22),
            (20, G["("]): ("SHIFT", 11),
            (20, G["case"]): ("SHIFT", 21),
            (20, G["not"]): ("SHIFT", 30),
            (20, G["{"]): ("SHIFT", 10),
            (21, G["isvoid"]): ("SHIFT", 24),
            (21, G["~"]): ("SHIFT", 27),
            (21, G["id"]): ("SHIFT", 46),
            (21, G["while"]): ("SHIFT", 13),
            (21, G["true"]): ("SHIFT", 25),
            (21, G["int"]): ("SHIFT", 31),
            (21, G["false"]): ("SHIFT", 26),
            (21, G["not"]): ("SHIFT", 30),
            (21, G["case"]): ("SHIFT", 21),
            (21, G["{"]): ("SHIFT", 10),
            (21, G["string"]): ("SHIFT", 32),
            (21, G["if"]): ("SHIFT", 12),
            (21, G["new"]): ("SHIFT", 22),
            (21, G["("]): ("SHIFT", 11),
            (21, G["let"]): ("SHIFT", 14),
            (22, G["type"]): ("SHIFT", 23),
            (23, G["."]): ("REDUCE", G["atom -> new type"]),
            (23, G["else"]): ("REDUCE", G["atom -> new type"]),
            (23, G["="]): ("REDUCE", G["atom -> new type"]),
            (23, G[","]): ("REDUCE", G["atom -> new type"]),
            (23, G["fi"]): ("REDUCE", G["atom -> new type"]),
            (23, G[";"]): ("REDUCE", G["atom -> new type"]),
            (23, G["error"]): ("REDUCE", G["atom -> new type"]),
            (23, G["loop"]): ("REDUCE", G["atom -> new type"]),
            (23, G["@"]): ("REDUCE", G["atom -> new type"]),
            (23, G["pool"]): ("REDUCE", G["atom -> new type"]),
            (23, G["+"]): ("REDUCE", G["atom -> new type"]),
            (23, G["-"]): ("REDUCE", G["atom -> new type"]),
            (23, G["in"]): ("REDUCE", G["atom -> new type"]),
            (23, G["*"]): ("REDUCE", G["atom -> new type"]),
            (23, G["}"]): ("REDUCE", G["atom -> new type"]),
            (23, G["/"]): ("REDUCE", G["atom -> new type"]),
            (23, G["of"]): ("REDUCE", G["atom -> new type"]),
            (23, G["<="]): ("REDUCE", G["atom -> new type"]),
            (23, G["<"]): ("REDUCE", G["atom -> new type"]),
            (23, G[")"]): ("REDUCE", G["atom -> new type"]),
            (23, G["then"]): ("REDUCE", G["atom -> new type"]),
            (24, G["id"]): ("SHIFT", 28),
            (24, G["int"]): ("SHIFT", 31),
            (24, G["true"]): ("SHIFT", 25),
            (24, G["if"]): ("SHIFT", 12),
            (24, G["new"]): ("SHIFT", 22),
            (24, G["("]): ("SHIFT", 11),
            (24, G["false"]): ("SHIFT", 26),
            (24, G["isvoid"]): ("SHIFT", 24),
            (24, G["~"]): ("SHIFT", 27),
            (24, G["string"]): ("SHIFT", 32),
            (25, G["."]): ("REDUCE", G["atom -> true"]),
            (25, G["else"]): ("REDUCE", G["atom -> true"]),
            (25, G["="]): ("REDUCE", G["atom -> true"]),
            (25, G[","]): ("REDUCE", G["atom -> true"]),
            (25, G["fi"]): ("REDUCE", G["atom -> true"]),
            (25, G[";"]): ("REDUCE", G["atom -> true"]),
            (25, G["error"]): ("REDUCE", G["atom -> true"]),
            (25, G["loop"]): ("REDUCE", G["atom -> true"]),
            (25, G["@"]): ("REDUCE", G["atom -> true"]),
            (25, G["pool"]): ("REDUCE", G["atom -> true"]),
            (25, G["+"]): ("REDUCE", G["atom -> true"]),
            (25, G["-"]): ("REDUCE", G["atom -> true"]),
            (25, G["in"]): ("REDUCE", G["atom -> true"]),
            (25, G["*"]): ("REDUCE", G["atom -> true"]),
            (25, G["}"]): ("REDUCE", G["atom -> true"]),
            (25, G["/"]): ("REDUCE", G["atom -> true"]),
            (25, G["of"]): ("REDUCE", G["atom -> true"]),
            (25, G["<="]): ("REDUCE", G["atom -> true"]),
            (25, G["<"]): ("REDUCE", G["atom -> true"]),
            (25, G[")"]): ("REDUCE", G["atom -> true"]),
            (25, G["then"]): ("REDUCE", G["atom -> true"]),
            (26, G["."]): ("REDUCE", G["atom -> false"]),
            (26, G["else"]): ("REDUCE", G["atom -> false"]),
            (26, G["="]): ("REDUCE", G["atom -> false"]),
            (26, G[","]): ("REDUCE", G["atom -> false"]),
            (26, G["fi"]): ("REDUCE", G["atom -> false"]),
            (26, G[";"]): ("REDUCE", G["atom -> false"]),
            (26, G["error"]): ("REDUCE", G["atom -> false"]),
            (26, G["loop"]): ("REDUCE", G["atom -> false"]),
            (26, G["@"]): ("REDUCE", G["atom -> false"]),
            (26, G["pool"]): ("REDUCE", G["atom -> false"]),
            (26, G["+"]): ("REDUCE", G["atom -> false"]),
            (26, G["-"]): ("REDUCE", G["atom -> false"]),
            (26, G["in"]): ("REDUCE", G["atom -> false"]),
            (26, G["*"]): ("REDUCE", G["atom -> false"]),
            (26, G["}"]): ("REDUCE", G["atom -> false"]),
            (26, G["/"]): ("REDUCE", G["atom -> false"]),
            (26, G["of"]): ("REDUCE", G["atom -> false"]),
            (26, G["<="]): ("REDUCE", G["atom -> false"]),
            (26, G["<"]): ("REDUCE", G["atom -> false"]),
            (26, G[")"]): ("REDUCE", G["atom -> false"]),
            (26, G["then"]): ("REDUCE", G["atom -> false"]),
            (27, G["id"]): ("SHIFT", 28),
            (27, G["int"]): ("SHIFT", 31),
            (27, G["true"]): ("SHIFT", 25),
            (27, G["if"]): ("SHIFT", 12),
            (27, G["new"]): ("SHIFT", 22),
            (27, G["("]): ("SHIFT", 11),
            (27, G["false"]): ("SHIFT", 26),
            (27, G["isvoid"]): ("SHIFT", 24),
            (27, G["~"]): ("SHIFT", 27),
            (27, G["string"]): ("SHIFT", 32),
            (28, G["."]): ("REDUCE", G["atom -> id"]),
            (28, G["else"]): ("REDUCE", G["atom -> id"]),
            (28, G["="]): ("REDUCE", G["atom -> id"]),
            (28, G[","]): ("REDUCE", G["atom -> id"]),
            (28, G["fi"]): ("REDUCE", G["atom -> id"]),
            (28, G[";"]): ("REDUCE", G["atom -> id"]),
            (28, G["error"]): ("REDUCE", G["atom -> id"]),
            (28, G["loop"]): ("REDUCE", G["atom -> id"]),
            (28, G["@"]): ("REDUCE", G["atom -> id"]),
            (28, G["pool"]): ("REDUCE", G["atom -> id"]),
            (28, G["+"]): ("REDUCE", G["atom -> id"]),
            (28, G["-"]): ("REDUCE", G["atom -> id"]),
            (28, G["in"]): ("REDUCE", G["atom -> id"]),
            (28, G["*"]): ("REDUCE", G["atom -> id"]),
            (28, G["}"]): ("REDUCE", G["atom -> id"]),
            (28, G["/"]): ("REDUCE", G["atom -> id"]),
            (28, G["of"]): ("REDUCE", G["atom -> id"]),
            (28, G["<="]): ("REDUCE", G["atom -> id"]),
            (28, G["<"]): ("REDUCE", G["atom -> id"]),
            (28, G[")"]): ("REDUCE", G["atom -> id"]),
            (28, G["then"]): ("REDUCE", G["atom -> id"]),
            (28, G["("]): ("SHIFT", 29),
            (29, G["false"]): ("SHIFT", 26),
            (29, G["let"]): ("SHIFT", 14),
            (29, G["id"]): ("SHIFT", 46),
            (29, G["string"]): ("SHIFT", 32),
            (29, G[")"]): ("REDUCE", G["expr-list -> e"]),
            (29, G["isvoid"]): ("SHIFT", 24),
            (29, G["while"]): ("SHIFT", 13),
            (29, G["if"]): ("SHIFT", 12),
            (29, G["new"]): ("SHIFT", 22),
            (29, G["~"]): ("SHIFT", 27),
            (29, G["("]): ("SHIFT", 11),
            (29, G["case"]): ("SHIFT", 21),
            (29, G["not"]): ("SHIFT", 30),
            (29, G["{"]): ("SHIFT", 10),
            (29, G["int"]): ("SHIFT", 31),
            (29, G["true"]): ("SHIFT", 25),
            (30, G["id"]): ("SHIFT", 28),
            (30, G["int"]): ("SHIFT", 31),
            (30, G["true"]): ("SHIFT", 25),
            (30, G["if"]): ("SHIFT", 12),
            (30, G["new"]): ("SHIFT", 22),
            (30, G["("]): ("SHIFT", 11),
            (30, G["isvoid"]): ("SHIFT", 24),
            (30, G["false"]): ("SHIFT", 26),
            (30, G["~"]): ("SHIFT", 27),
            (30, G["string"]): ("SHIFT", 32),
            (31, G["."]): ("REDUCE", G["atom -> int"]),
            (31, G["else"]): ("REDUCE", G["atom -> int"]),
            (31, G["="]): ("REDUCE", G["atom -> int"]),
            (31, G[","]): ("REDUCE", G["atom -> int"]),
            (31, G["fi"]): ("REDUCE", G["atom -> int"]),
            (31, G[";"]): ("REDUCE", G["atom -> int"]),
            (31, G["error"]): ("REDUCE", G["atom -> int"]),
            (31, G["loop"]): ("REDUCE", G["atom -> int"]),
            (31, G["@"]): ("REDUCE", G["atom -> int"]),
            (31, G["pool"]): ("REDUCE", G["atom -> int"]),
            (31, G["+"]): ("REDUCE", G["atom -> int"]),
            (31, G["-"]): ("REDUCE", G["atom -> int"]),
            (31, G["in"]): ("REDUCE", G["atom -> int"]),
            (31, G["*"]): ("REDUCE", G["atom -> int"]),
            (31, G["}"]): ("REDUCE", G["atom -> int"]),
            (31, G["/"]): ("REDUCE", G["atom -> int"]),
            (31, G["of"]): ("REDUCE", G["atom -> int"]),
            (31, G["<="]): ("REDUCE", G["atom -> int"]),
            (31, G["<"]): ("REDUCE", G["atom -> int"]),
            (31, G[")"]): ("REDUCE", G["atom -> int"]),
            (31, G["then"]): ("REDUCE", G["atom -> int"]),
            (32, G["."]): ("REDUCE", G["atom -> string"]),
            (32, G["else"]): ("REDUCE", G["atom -> string"]),
            (32, G["="]): ("REDUCE", G["atom -> string"]),
            (32, G[","]): ("REDUCE", G["atom -> string"]),
            (32, G["fi"]): ("REDUCE", G["atom -> string"]),
            (32, G[";"]): ("REDUCE", G["atom -> string"]),
            (32, G["error"]): ("REDUCE", G["atom -> string"]),
            (32, G["loop"]): ("REDUCE", G["atom -> string"]),
            (32, G["@"]): ("REDUCE", G["atom -> string"]),
            (32, G["pool"]): ("REDUCE", G["atom -> string"]),
            (32, G["+"]): ("REDUCE", G["atom -> string"]),
            (32, G["-"]): ("REDUCE", G["atom -> string"]),
            (32, G["in"]): ("REDUCE", G["atom -> string"]),
            (32, G["*"]): ("REDUCE", G["atom -> string"]),
            (32, G["}"]): ("REDUCE", G["atom -> string"]),
            (32, G["/"]): ("REDUCE", G["atom -> string"]),
            (32, G["of"]): ("REDUCE", G["atom -> string"]),
            (32, G["<="]): ("REDUCE", G["atom -> string"]),
            (32, G["<"]): ("REDUCE", G["atom -> string"]),
            (32, G[")"]): ("REDUCE", G["atom -> string"]),
            (32, G["then"]): ("REDUCE", G["atom -> string"]),
            (33, G["."]): ("REDUCE", G["atom -> function-call"]),
            (33, G["else"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["="]): ("REDUCE", G["atom -> function-call"]),
            (33, G[","]): ("REDUCE", G["atom -> function-call"]),
            (33, G["fi"]): ("REDUCE", G["atom -> function-call"]),
            (33, G[";"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["error"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["loop"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["@"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["pool"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["+"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["-"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["in"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["*"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["}"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["/"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["of"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["<="]): ("REDUCE", G["atom -> function-call"]),
            (33, G["<"]): ("REDUCE", G["atom -> function-call"]),
            (33, G[")"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["then"]): ("REDUCE", G["atom -> function-call"]),
            (34, G["<"]): ("SHIFT", 35),
            (34, G["<="]): ("SHIFT", 51),
            (34, G["else"]): ("REDUCE", G["negable-comp -> not comp"]),
            (34, G[","]): ("REDUCE", G["negable-comp -> not comp"]),
            (34, G["in"]): ("REDUCE", G["negable-comp -> not comp"]),
            (34, G["fi"]): ("REDUCE", G["negable-comp -> not comp"]),
            (34, G["}"]): ("REDUCE", G["negable-comp -> not comp"]),
            (34, G["pool"]): ("REDUCE", G["negable-comp -> not comp"]),
            (34, G[";"]): ("REDUCE", G["negable-comp -> not comp"]),
            (34, G["error"]): ("REDUCE", G["negable-comp -> not comp"]),
            (34, G["loop"]): ("REDUCE", G["negable-comp -> not comp"]),
            (34, G["of"]): ("REDUCE", G["negable-comp -> not comp"]),
            (34, G[")"]): ("REDUCE", G["negable-comp -> not comp"]),
            (34, G["then"]): ("REDUCE", G["negable-comp -> not comp"]),
            (34, G["="]): ("SHIFT", 60),
            (35, G["id"]): ("SHIFT", 28),
            (35, G["int"]): ("SHIFT", 31),
            (35, G["true"]): ("SHIFT", 25),
            (35, G["if"]): ("SHIFT", 12),
            (35, G["new"]): ("SHIFT", 22),
            (35, G["("]): ("SHIFT", 11),
            (35, G["isvoid"]): ("SHIFT", 24),
            (35, G["false"]): ("SHIFT", 26),
            (35, G["~"]): ("SHIFT", 27),
            (35, G["not"]): ("SHIFT", 36),
            (35, G["string"]): ("SHIFT", 32),
            (36, G["id"]): ("SHIFT", 28),
            (36, G["int"]): ("SHIFT", 31),
            (36, G["true"]): ("SHIFT", 25),
            (36, G["if"]): ("SHIFT", 12),
            (36, G["new"]): ("SHIFT", 22),
            (36, G["("]): ("SHIFT", 11),
            (36, G["isvoid"]): ("SHIFT", 24),
            (36, G["false"]): ("SHIFT", 26),
            (36, G["~"]): ("SHIFT", 27),
            (36, G["string"]): ("SHIFT", 32),
            (37, G["-"]): ("SHIFT", 54),
            (37, G["else"]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G["="]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G[","]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G["in"]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G["fi"]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G[")"]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G["}"]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G[";"]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G["error"]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G["<"]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G["loop"]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G["of"]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G["<="]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G["pool"]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G["then"]): ("REDUCE", G["negable-arith -> not arith"]),
            (37, G["+"]): ("SHIFT", 38),
            (38, G["id"]): ("SHIFT", 28),
            (38, G["int"]): ("SHIFT", 31),
            (38, G["true"]): ("SHIFT", 25),
            (38, G["if"]): ("SHIFT", 12),
            (38, G["new"]): ("SHIFT", 22),
            (38, G["("]): ("SHIFT", 11),
            (38, G["isvoid"]): ("SHIFT", 24),
            (38, G["false"]): ("SHIFT", 26),
            (38, G["~"]): ("SHIFT", 27),
            (38, G["string"]): ("SHIFT", 32),
            (39, G["/"]): ("SHIFT", 56),
            (39, G["else"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["="]): ("REDUCE", G["arith -> arith + term"]),
            (39, G[","]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["fi"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G[";"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["error"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["loop"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["pool"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["+"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["-"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["in"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["}"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["of"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["<="]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["<"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G[")"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["then"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["*"]): ("SHIFT", 40),
            (40, G["id"]): ("SHIFT", 28),
            (40, G["int"]): ("SHIFT", 31),
            (40, G["true"]): ("SHIFT", 25),
            (40, G["if"]): ("SHIFT", 12),
            (40, G["new"]): ("SHIFT", 22),
            (40, G["("]): ("SHIFT", 11),
            (40, G["false"]): ("SHIFT", 26),
            (40, G["isvoid"]): ("SHIFT", 24),
            (40, G["~"]): ("SHIFT", 27),
            (40, G["string"]): ("SHIFT", 32),
            (41, G["else"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["="]): ("REDUCE", G["term -> term * factor"]),
            (41, G[","]): ("REDUCE", G["term -> term * factor"]),
            (41, G["fi"]): ("REDUCE", G["term -> term * factor"]),
            (41, G[";"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["error"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["loop"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["pool"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["+"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["-"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["in"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["*"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["}"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["/"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["of"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["<="]): ("REDUCE", G["term -> term * factor"]),
            (41, G["<"]): ("REDUCE", G["term -> term * factor"]),
            (41, G[")"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["then"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["else"]): ("REDUCE", G["factor -> atom"]),
            (42, G["="]): ("REDUCE", G["factor -> atom"]),
            (42, G[","]): ("REDUCE", G["factor -> atom"]),
            (42, G["fi"]): ("REDUCE", G["factor -> atom"]),
            (42, G[";"]): ("REDUCE", G["factor -> atom"]),
            (42, G["error"]): ("REDUCE", G["factor -> atom"]),
            (42, G["loop"]): ("REDUCE", G["factor -> atom"]),
            (42, G["pool"]): ("REDUCE", G["factor -> atom"]),
            (42, G["+"]): ("REDUCE", G["factor -> atom"]),
            (42, G["-"]): ("REDUCE", G["factor -> atom"]),
            (42, G["in"]): ("REDUCE", G["factor -> atom"]),
            (42, G["*"]): ("REDUCE", G["factor -> atom"]),
            (42, G["}"]): ("REDUCE", G["factor -> atom"]),
            (42, G["/"]): ("REDUCE", G["factor -> atom"]),
            (42, G["of"]): ("REDUCE", G["factor -> atom"]),
            (42, G["<="]): ("REDUCE", G["factor -> atom"]),
            (42, G["<"]): ("REDUCE", G["factor -> atom"]),
            (42, G[")"]): ("REDUCE", G["factor -> atom"]),
            (42, G["then"]): ("REDUCE", G["factor -> atom"]),
            (42, G["@"]): ("SHIFT", 69),
            (42, G["."]): ("SHIFT", 43),
            (43, G["id"]): ("SHIFT", 44),
            (44, G["("]): ("SHIFT", 45),
            (45, G["false"]): ("SHIFT", 26),
            (45, G["let"]): ("SHIFT", 14),
            (45, G["id"]): ("SHIFT", 46),
            (45, G["string"]): ("SHIFT", 32),
            (45, G[")"]): ("REDUCE", G["expr-list -> e"]),
            (45, G["isvoid"]): ("SHIFT", 24),
            (45, G["while"]): ("SHIFT", 13),
            (45, G["if"]): ("SHIFT", 12),
            (45, G["new"]): ("SHIFT", 22),
            (45, G["~"]): ("SHIFT", 27),
            (45, G["("]): ("SHIFT", 11),
            (45, G["case"]): ("SHIFT", 21),
            (45, G["not"]): ("SHIFT", 30),
            (45, G["{"]): ("SHIFT", 10),
            (45, G["int"]): ("SHIFT", 31),
            (45, G["true"]): ("SHIFT", 25),
            (46, G["."]): ("REDUCE", G["atom -> id"]),
            (46, G["else"]): ("REDUCE", G["atom -> id"]),
            (46, G["="]): ("REDUCE", G["atom -> id"]),
            (46, G[","]): ("REDUCE", G["atom -> id"]),
            (46, G["fi"]): ("REDUCE", G["atom -> id"]),
            (46, G[";"]): ("REDUCE", G["atom -> id"]),
            (46, G["error"]): ("REDUCE", G["atom -> id"]),
            (46, G["loop"]): ("REDUCE", G["atom -> id"]),
            (46, G["@"]): ("REDUCE", G["atom -> id"]),
            (46, G["pool"]): ("REDUCE", G["atom -> id"]),
            (46, G["+"]): ("REDUCE", G["atom -> id"]),
            (46, G["-"]): ("REDUCE", G["atom -> id"]),
            (46, G["in"]): ("REDUCE", G["atom -> id"]),
            (46, G["*"]): ("REDUCE", G["atom -> id"]),
            (46, G["}"]): ("REDUCE", G["atom -> id"]),
            (46, G["/"]): ("REDUCE", G["atom -> id"]),
            (46, G["of"]): ("REDUCE", G["atom -> id"]),
            (46, G["<="]): ("REDUCE", G["atom -> id"]),
            (46, G["<"]): ("REDUCE", G["atom -> id"]),
            (46, G[")"]): ("REDUCE", G["atom -> id"]),
            (46, G["then"]): ("REDUCE", G["atom -> id"]),
            (46, G["("]): ("SHIFT", 29),
            (46, G["<-"]): ("SHIFT", 47),
            (47, G["id"]): ("SHIFT", 46),
            (47, G["if"]): ("SHIFT", 12),
            (47, G["let"]): ("SHIFT", 14),
            (47, G["new"]): ("SHIFT", 22),
            (47, G["("]): ("SHIFT", 11),
            (47, G["isvoid"]): ("SHIFT", 24),
            (47, G["~"]): ("SHIFT", 27),
            (47, G["while"]): ("SHIFT", 13),
            (47, G["int"]): ("SHIFT", 31),
            (47, G["true"]): ("SHIFT", 25),
            (47, G["not"]): ("SHIFT", 30),
            (47, G["case"]): ("SHIFT", 21),
            (47, G["false"]): ("SHIFT", 26),
            (47, G["{"]): ("SHIFT", 10),
            (47, G["string"]): ("SHIFT", 32),
            (48, G["else"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["in"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G[","]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["fi"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G[")"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["}"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G[";"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["error"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["loop"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["of"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["pool"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["then"]): ("REDUCE", G["expr -> id <- expr"]),
            (49, G["else"]): ("REDUCE", G["expr -> negable-comp"]),
            (49, G["in"]): ("REDUCE", G["expr -> negable-comp"]),
            (49, G[","]): ("REDUCE", G["expr -> negable-comp"]),
            (49, G["fi"]): ("REDUCE", G["expr -> negable-comp"]),
            (49, G[")"]): ("REDUCE", G["expr -> negable-comp"]),
            (49, G["}"]): ("REDUCE", G["expr -> negable-comp"]),
            (49, G[";"]): ("REDUCE", G["expr -> negable-comp"]),
            (49, G["error"]): ("REDUCE", G["expr -> negable-comp"]),
            (49, G["loop"]): ("REDUCE", G["expr -> negable-comp"]),
            (49, G["of"]): ("REDUCE", G["expr -> negable-comp"]),
            (49, G["pool"]): ("REDUCE", G["expr -> negable-comp"]),
            (49, G["then"]): ("REDUCE", G["expr -> negable-comp"]),
            (50, G["="]): ("SHIFT", 60),
            (50, G["<="]): ("SHIFT", 51),
            (50, G["<"]): ("SHIFT", 35),
            (50, G["else"]): ("REDUCE", G["negable-comp -> comp"]),
            (50, G["in"]): ("REDUCE", G["negable-comp -> comp"]),
            (50, G[","]): ("REDUCE", G["negable-comp -> comp"]),
            (50, G["fi"]): ("REDUCE", G["negable-comp -> comp"]),
            (50, G[")"]): ("REDUCE", G["negable-comp -> comp"]),
            (50, G["}"]): ("REDUCE", G["negable-comp -> comp"]),
            (50, G[";"]): ("REDUCE", G["negable-comp -> comp"]),
            (50, G["error"]): ("REDUCE", G["negable-comp -> comp"]),
            (50, G["loop"]): ("REDUCE", G["negable-comp -> comp"]),
            (50, G["of"]): ("REDUCE", G["negable-comp -> comp"]),
            (50, G["pool"]): ("REDUCE", G["negable-comp -> comp"]),
            (50, G["then"]): ("REDUCE", G["negable-comp -> comp"]),
            (51, G["id"]): ("SHIFT", 28),
            (51, G["int"]): ("SHIFT", 31),
            (51, G["true"]): ("SHIFT", 25),
            (51, G["if"]): ("SHIFT", 12),
            (51, G["new"]): ("SHIFT", 22),
            (51, G["("]): ("SHIFT", 11),
            (51, G["isvoid"]): ("SHIFT", 24),
            (51, G["false"]): ("SHIFT", 26),
            (51, G["~"]): ("SHIFT", 27),
            (51, G["not"]): ("SHIFT", 36),
            (51, G["string"]): ("SHIFT", 32),
            (52, G["else"]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G["="]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G["in"]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G[","]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G["fi"]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G["}"]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G["pool"]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G[";"]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G["error"]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G["<"]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G["loop"]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G["of"]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G["<="]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G[")"]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (52, G["then"]): ("REDUCE", G["comp -> comp <= negable-arith"]),
            (53, G["-"]): ("SHIFT", 54),
            (53, G["+"]): ("SHIFT", 38),
            (53, G["else"]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G["="]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G["in"]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G[","]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G["fi"]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G["}"]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G["pool"]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G[";"]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G["error"]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G["<"]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G["loop"]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G["of"]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G["<="]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G[")"]): ("REDUCE", G["negable-arith -> arith"]),
            (53, G["then"]): ("REDUCE", G["negable-arith -> arith"]),
            (54, G["id"]): ("SHIFT", 28),
            (54, G["int"]): ("SHIFT", 31),
            (54, G["true"]): ("SHIFT", 25),
            (54, G["if"]): ("SHIFT", 12),
            (54, G["new"]): ("SHIFT", 22),
            (54, G["("]): ("SHIFT", 11),
            (54, G["isvoid"]): ("SHIFT", 24),
            (54, G["false"]): ("SHIFT", 26),
            (54, G["~"]): ("SHIFT", 27),
            (54, G["string"]): ("SHIFT", 32),
            (55, G["/"]): ("SHIFT", 56),
            (55, G["*"]): ("SHIFT", 40),
            (55, G["else"]): ("REDUCE", G["arith -> arith - term"]),
            (55, G["="]): ("REDUCE", G["arith -> arith - term"]),
            (55, G[","]): ("REDUCE", G["arith -> arith - term"]),
            (55, G["fi"]): ("REDUCE", G["arith -> arith - term"]),
            (55, G[";"]): ("REDUCE", G["arith -> arith - term"]),
            (55, G["error"]): ("REDUCE", G["arith -> arith - term"]),
            (55, G["loop"]): ("REDUCE", G["arith -> arith - term"]),
            (55, G["pool"]): ("REDUCE", G["arith -> arith - term"]),
            (55, G["+"]): ("REDUCE", G["arith -> arith - term"]),
            (55, G["-"]): ("REDUCE", G["arith -> arith - term"]),
            (55, G["in"]): ("REDUCE", G["arith -> arith - term"]),
            (55, G["}"]): ("REDUCE", G["arith -> arith - term"]),
            (55, G["of"]): ("REDUCE", G["arith -> arith - term"]),
            (55, G["<="]): ("REDUCE", G["arith -> arith - term"]),
            (55, G["<"]): ("REDUCE", G["arith -> arith - term"]),
            (55, G[")"]): ("REDUCE", G["arith -> arith - term"]),
            (55, G["then"]): ("REDUCE", G["arith -> arith - term"]),
            (56, G["id"]): ("SHIFT", 28),
            (56, G["int"]): ("SHIFT", 31),
            (56, G["true"]): ("SHIFT", 25),
            (56, G["if"]): ("SHIFT", 12),
            (56, G["new"]): ("SHIFT", 22),
            (56, G["("]): ("SHIFT", 11),
            (56, G["false"]): ("SHIFT", 26),
            (56, G["isvoid"]): ("SHIFT", 24),
            (56, G["~"]): ("SHIFT", 27),
            (56, G["string"]): ("SHIFT", 32),
            (57, G["else"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["="]): ("REDUCE", G["term -> term / factor"]),
            (57, G[","]): ("REDUCE", G["term -> term / factor"]),
            (57, G["fi"]): ("REDUCE", G["term -> term / factor"]),
            (57, G[";"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["error"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["loop"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["pool"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["+"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["-"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["in"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["*"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["}"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["/"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["of"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["<="]): ("REDUCE", G["term -> term / factor"]),
            (57, G["<"]): ("REDUCE", G["term -> term / factor"]),
            (57, G[")"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["then"]): ("REDUCE", G["term -> term / factor"]),
            (58, G["else"]): ("REDUCE", G["term -> factor"]),
            (58, G["="]): ("REDUCE", G["term -> factor"]),
            (58, G[","]): ("REDUCE", G["term -> factor"]),
            (58, G["fi"]): ("REDUCE", G["term -> factor"]),
            (58, G[";"]): ("REDUCE", G["term -> factor"]),
            (58, G["error"]): ("REDUCE", G["term -> factor"]),
            (58, G["loop"]): ("REDUCE", G["term -> factor"]),
            (58, G["pool"]): ("REDUCE", G["term -> factor"]),
            (58, G["+"]): ("REDUCE", G["term -> factor"]),
            (58, G["-"]): ("REDUCE", G["term -> factor"]),
            (58, G["in"]): ("REDUCE", G["term -> factor"]),
            (58, G["*"]): ("REDUCE", G["term -> factor"]),
            (58, G["}"]): ("REDUCE", G["term -> factor"]),
            (58, G["/"]): ("REDUCE", G["term -> factor"]),
            (58, G["of"]): ("REDUCE", G["term -> factor"]),
            (58, G["<="]): ("REDUCE", G["term -> factor"]),
            (58, G["<"]): ("REDUCE", G["term -> factor"]),
            (58, G[")"]): ("REDUCE", G["term -> factor"]),
            (58, G["then"]): ("REDUCE", G["term -> factor"]),
            (59, G["/"]): ("SHIFT", 56),
            (59, G["*"]): ("SHIFT", 40),
            (59, G["else"]): ("REDUCE", G["arith -> term"]),
            (59, G["="]): ("REDUCE", G["arith -> term"]),
            (59, G[","]): ("REDUCE", G["arith -> term"]),
            (59, G["fi"]): ("REDUCE", G["arith -> term"]),
            (59, G[";"]): ("REDUCE", G["arith -> term"]),
            (59, G["error"]): ("REDUCE", G["arith -> term"]),
            (59, G["loop"]): ("REDUCE", G["arith -> term"]),
            (59, G["pool"]): ("REDUCE", G["arith -> term"]),
            (59, G["+"]): ("REDUCE", G["arith -> term"]),
            (59, G["-"]): ("REDUCE", G["arith -> term"]),
            (59, G["in"]): ("REDUCE", G["arith -> term"]),
            (59, G["}"]): ("REDUCE", G["arith -> term"]),
            (59, G["of"]): ("REDUCE", G["arith -> term"]),
            (59, G["<="]): ("REDUCE", G["arith -> term"]),
            (59, G["<"]): ("REDUCE", G["arith -> term"]),
            (59, G[")"]): ("REDUCE", G["arith -> term"]),
            (59, G["then"]): ("REDUCE", G["arith -> term"]),
            (60, G["id"]): ("SHIFT", 28),
            (60, G["int"]): ("SHIFT", 31),
            (60, G["true"]): ("SHIFT", 25),
            (60, G["if"]): ("SHIFT", 12),
            (60, G["new"]): ("SHIFT", 22),
            (60, G["("]): ("SHIFT", 11),
            (60, G["isvoid"]): ("SHIFT", 24),
            (60, G["false"]): ("SHIFT", 26),
            (60, G["~"]): ("SHIFT", 27),
            (60, G["not"]): ("SHIFT", 36),
            (60, G["string"]): ("SHIFT", 32),
            (61, G["else"]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G["="]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G["in"]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G[","]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G["fi"]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G["}"]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G["pool"]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G[";"]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G["error"]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G["<"]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G["loop"]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G["of"]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G["<="]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G[")"]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (61, G["then"]): ("REDUCE", G["comp -> comp = negable-arith"]),
            (62, G["-"]): ("SHIFT", 54),
            (62, G["+"]): ("SHIFT", 38),
            (62, G["else"]): ("REDUCE", G["comp -> arith"]),
            (62, G["="]): ("REDUCE", G["comp -> arith"]),
            (62, G[","]): ("REDUCE", G["comp -> arith"]),
            (62, G["in"]): ("REDUCE", G["comp -> arith"]),
            (62, G["fi"]): ("REDUCE", G["comp -> arith"]),
            (62, G[")"]): ("REDUCE", G["comp -> arith"]),
            (62, G["}"]): ("REDUCE", G["comp -> arith"]),
            (62, G[";"]): ("REDUCE", G["comp -> arith"]),
            (62, G["error"]): ("REDUCE", G["comp -> arith"]),
            (62, G["loop"]): ("REDUCE", G["comp -> arith"]),
            (62, G["of"]): ("REDUCE", G["comp -> arith"]),
            (62, G["<="]): ("REDUCE", G["comp -> arith"]),
            (62, G["<"]): ("REDUCE", G["comp -> arith"]),
            (62, G["pool"]): ("REDUCE", G["comp -> arith"]),
            (62, G["then"]): ("REDUCE", G["comp -> arith"]),
            (63, G[")"]): ("SHIFT", 64),
            (64, G["."]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["else"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["="]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G[","]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["fi"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G[";"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["error"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["loop"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["@"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["pool"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["+"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["-"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["in"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["*"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["}"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["/"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["of"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["<="]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["<"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G[")"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (64, G["then"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (65, G[")"]): ("REDUCE", G["expr-list -> not-empty-expr-list"]),
            (66, G[")"]): ("REDUCE", G["not-empty-expr-list -> expr"]),
            (66, G[","]): ("SHIFT", 67),
            (67, G["false"]): ("SHIFT", 26),
            (67, G["let"]): ("SHIFT", 14),
            (67, G["id"]): ("SHIFT", 46),
            (67, G["string"]): ("SHIFT", 32),
            (67, G["isvoid"]): ("SHIFT", 24),
            (67, G["while"]): ("SHIFT", 13),
            (67, G["if"]): ("SHIFT", 12),
            (67, G["new"]): ("SHIFT", 22),
            (67, G["~"]): ("SHIFT", 27),
            (67, G["("]): ("SHIFT", 11),
            (67, G["case"]): ("SHIFT", 21),
            (67, G["not"]): ("SHIFT", 30),
            (67, G["{"]): ("SHIFT", 10),
            (67, G["int"]): ("SHIFT", 31),
            (67, G["true"]): ("SHIFT", 25),
            (68, G[")"]): (
                "REDUCE",
                G["not-empty-expr-list -> expr , not-empty-expr-list"],
            ),
            (69, G["type"]): ("SHIFT", 70),
            (70, G["."]): ("SHIFT", 71),
            (71, G["id"]): ("SHIFT", 72),
            (72, G["("]): ("SHIFT", 73),
            (73, G["false"]): ("SHIFT", 26),
            (73, G["let"]): ("SHIFT", 14),
            (73, G["id"]): ("SHIFT", 46),
            (73, G["string"]): ("SHIFT", 32),
            (73, G[")"]): ("REDUCE", G["expr-list -> e"]),
            (73, G["isvoid"]): ("SHIFT", 24),
            (73, G["while"]): ("SHIFT", 13),
            (73, G["if"]): ("SHIFT", 12),
            (73, G["new"]): ("SHIFT", 22),
            (73, G["~"]): ("SHIFT", 27),
            (73, G["("]): ("SHIFT", 11),
            (73, G["case"]): ("SHIFT", 21),
            (73, G["not"]): ("SHIFT", 30),
            (73, G["{"]): ("SHIFT", 10),
            (73, G["int"]): ("SHIFT", 31),
            (73, G["true"]): ("SHIFT", 25),
            (74, G[")"]): ("SHIFT", 75),
            (75, G["."]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["else"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["="]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G[","]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["fi"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G[";"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["error"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["loop"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["@"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["pool"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["+"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["-"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["in"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["*"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["}"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["/"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["of"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["<="]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["<"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G[")"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (75, G["then"]): (
                "REDUCE",
                G["function-call -> atom @ type . id ( expr-list )"],
            ),
            (76, G["else"]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G["="]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G["in"]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G[","]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G["fi"]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G["}"]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G["pool"]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G[";"]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G["error"]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G["<"]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G["loop"]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G["of"]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G["<="]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G[")"]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (76, G["then"]): ("REDUCE", G["comp -> comp < negable-arith"]),
            (77, G[")"]): ("SHIFT", 78),
            (78, G["."]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["else"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["="]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G[","]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["fi"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G[";"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["error"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["loop"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["@"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["pool"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["+"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["-"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["in"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["*"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["}"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["/"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["of"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["<="]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["<"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G[")"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (78, G["then"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (79, G["else"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["="]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G[","]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["fi"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G[";"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["error"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["loop"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["pool"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["+"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["-"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["in"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["*"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["}"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["/"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["of"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["<="]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["<"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G[")"]): ("REDUCE", G["factor -> ~ factor"]),
            (79, G["then"]): ("REDUCE", G["factor -> ~ factor"]),
            (80, G["else"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["="]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G[","]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["fi"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G[";"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["error"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["loop"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["pool"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["+"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["-"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["in"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["*"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["}"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["/"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["of"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["<="]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["<"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G[")"]): ("REDUCE", G["factor -> isvoid factor"]),
            (80, G["then"]): ("REDUCE", G["factor -> isvoid factor"]),
            (81, G["of"]): ("SHIFT", 82),
            (82, G["id"]): ("SHIFT", 83),
            (83, G[":"]): ("SHIFT", 84),
            (84, G["type"]): ("SHIFT", 85),
            (85, G["=>"]): ("SHIFT", 86),
            (86, G["false"]): ("SHIFT", 26),
            (86, G["id"]): ("SHIFT", 46),
            (86, G["while"]): ("SHIFT", 13),
            (86, G["isvoid"]): ("SHIFT", 24),
            (86, G["string"]): ("SHIFT", 32),
            (86, G["~"]): ("SHIFT", 27),
            (86, G["not"]): ("SHIFT", 30),
            (86, G["case"]): ("SHIFT", 21),
            (86, G["new"]): ("SHIFT", 22),
            (86, G["if"]): ("SHIFT", 12),
            (86, G["{"]): ("SHIFT", 10),
            (86, G["("]): ("SHIFT", 11),
            (86, G["let"]): ("SHIFT", 14),
            (86, G["true"]): ("SHIFT", 25),
            (86, G["int"]): ("SHIFT", 31),
            (87, G[";"]): ("SHIFT", 88),
            (87, G["error"]): ("SHIFT", 90),
            (88, G["id"]): ("SHIFT", 83),
            (88, G["esac"]): ("REDUCE", G["case-list -> id : type => expr ;"]),
            (89, G["esac"]): (
                "REDUCE",
                G["case-list -> id : type => expr ; case-list"],
            ),
            (90, G["id"]): ("SHIFT", 83),
            (90, G["esac"]): ("REDUCE", G["case-list -> id : type => expr error"]),
            (91, G["esac"]): (
                "REDUCE",
                G["case-list -> id : type => expr error case-list"],
            ),
            (92, G["esac"]): ("SHIFT", 93),
            (93, G["else"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (93, G["in"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (93, G[","]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (93, G["fi"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (93, G[")"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (93, G["}"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (93, G[";"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (93, G["error"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (93, G["loop"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (93, G["of"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (93, G["pool"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (93, G["then"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (94, G["in"]): ("REDUCE", G["declaration-list -> id : type <- expr"]),
            (94, G[","]): ("SHIFT", 95),
            (95, G["id"]): ("SHIFT", 15),
            (96, G["in"]): (
                "REDUCE",
                G["declaration-list -> id : type <- expr , declaration-list"],
            ),
            (97, G["in"]): ("SHIFT", 98),
            (98, G["id"]): ("SHIFT", 46),
            (98, G["if"]): ("SHIFT", 12),
            (98, G["let"]): ("SHIFT", 14),
            (98, G["new"]): ("SHIFT", 22),
            (98, G["("]): ("SHIFT", 11),
            (98, G["isvoid"]): ("SHIFT", 24),
            (98, G["~"]): ("SHIFT", 27),
            (98, G["while"]): ("SHIFT", 13),
            (98, G["int"]): ("SHIFT", 31),
            (98, G["true"]): ("SHIFT", 25),
            (98, G["not"]): ("SHIFT", 30),
            (98, G["case"]): ("SHIFT", 21),
            (98, G["false"]): ("SHIFT", 26),
            (98, G["{"]): ("SHIFT", 10),
            (98, G["string"]): ("SHIFT", 32),
            (99, G["else"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (99, G["in"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (99, G[","]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (99, G["fi"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (99, G["}"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (99, G["pool"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (99, G[";"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (99, G["error"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (99, G["loop"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (99, G["of"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (99, G[")"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (99, G["then"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (100, G["loop"]): ("SHIFT", 101),
            (101, G["id"]): ("SHIFT", 46),
            (101, G["let"]): ("SHIFT", 14),
            (101, G["isvoid"]): ("SHIFT", 24),
            (101, G["string"]): ("SHIFT", 32),
            (101, G["~"]): ("SHIFT", 27),
            (101, G["while"]): ("SHIFT", 13),
            (101, G["new"]): ("SHIFT", 22),
            (101, G["if"]): ("SHIFT", 12),
            (101, G["("]): ("SHIFT", 11),
            (101, G["case"]): ("SHIFT", 21),
            (101, G["not"]): ("SHIFT", 30),
            (101, G["{"]): ("SHIFT", 10),
            (101, G["true"]): ("SHIFT", 25),
            (101, G["int"]): ("SHIFT", 31),
            (101, G["false"]): ("SHIFT", 26),
            (102, G["pool"]): ("SHIFT", 103),
            (103, G["else"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (103, G["in"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (103, G[","]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (103, G["fi"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (103, G[")"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (103, G["}"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (103, G[";"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (103, G["error"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (103, G["loop"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (103, G["of"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (103, G["pool"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (103, G["then"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (104, G["then"]): ("SHIFT", 105),
            (105, G["id"]): ("SHIFT", 46),
            (105, G["true"]): ("SHIFT", 25),
            (105, G["false"]): ("SHIFT", 26),
            (105, G["isvoid"]): ("SHIFT", 24),
            (105, G["let"]): ("SHIFT", 14),
            (105, G["~"]): ("SHIFT", 27),
            (105, G["string"]): ("SHIFT", 32),
            (105, G["if"]): ("SHIFT", 12),
            (105, G["new"]): ("SHIFT", 22),
            (105, G["while"]): ("SHIFT", 13),
            (105, G["("]): ("SHIFT", 11),
            (105, G["case"]): ("SHIFT", 21),
            (105, G["not"]): ("SHIFT", 30),
            (105, G["{"]): ("SHIFT", 10),
            (105, G["int"]): ("SHIFT", 31),
            (106, G["else"]): ("SHIFT", 107),
            (107, G["false"]): ("SHIFT", 26),
            (107, G["~"]): ("SHIFT", 27),
            (107, G["id"]): ("SHIFT", 46),
            (107, G["string"]): ("SHIFT", 32),
            (107, G["{"]): ("SHIFT", 10),
            (107, G["let"]): ("SHIFT", 14),
            (107, G["if"]): ("SHIFT", 12),
            (107, G["new"]): ("SHIFT", 22),
            (107, G["("]): ("SHIFT", 11),
            (107, G["while"]): ("SHIFT", 13),
            (107, G["not"]): ("SHIFT", 30),
            (107, G["case"]): ("SHIFT", 21),
            (107, G["int"]): ("SHIFT", 31),
            (107, G["true"]): ("SHIFT", 25),
            (107, G["isvoid"]): ("SHIFT", 24),
            (108, G["fi"]): ("SHIFT", 109),
            (109, G["."]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["else"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["="]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G[","]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["fi"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G[";"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["error"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["loop"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["@"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["pool"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["+"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["-"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["in"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["*"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["}"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["/"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["of"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["<="]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["<"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G[")"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (109, G["then"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (110, G[")"]): ("SHIFT", 111),
            (111, G["."]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["else"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["="]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G[","]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["fi"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G[";"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["error"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["loop"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["@"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["pool"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["+"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["-"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["in"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["*"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["}"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["/"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["of"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["<="]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["<"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G[")"]): ("REDUCE", G["atom -> ( expr )"]),
            (111, G["then"]): ("REDUCE", G["atom -> ( expr )"]),
            (112, G["}"]): ("SHIFT", 113),
            (113, G["else"]): ("REDUCE", G["expr -> { block }"]),
            (113, G["in"]): ("REDUCE", G["expr -> { block }"]),
            (113, G[","]): ("REDUCE", G["expr -> { block }"]),
            (113, G["fi"]): ("REDUCE", G["expr -> { block }"]),
            (113, G[")"]): ("REDUCE", G["expr -> { block }"]),
            (113, G["}"]): ("REDUCE", G["expr -> { block }"]),
            (113, G[";"]): ("REDUCE", G["expr -> { block }"]),
            (113, G["error"]): ("REDUCE", G["expr -> { block }"]),
            (113, G["loop"]): ("REDUCE", G["expr -> { block }"]),
            (113, G["of"]): ("REDUCE", G["expr -> { block }"]),
            (113, G["pool"]): ("REDUCE", G["expr -> { block }"]),
            (113, G["then"]): ("REDUCE", G["expr -> { block }"]),
            (114, G[";"]): ("SHIFT", 115),
            (114, G["error"]): ("SHIFT", 117),
            (115, G["false"]): ("SHIFT", 26),
            (115, G["id"]): ("SHIFT", 46),
            (115, G["while"]): ("SHIFT", 13),
            (115, G["isvoid"]): ("SHIFT", 24),
            (115, G["string"]): ("SHIFT", 32),
            (115, G["~"]): ("SHIFT", 27),
            (115, G["not"]): ("SHIFT", 30),
            (115, G["case"]): ("SHIFT", 21),
            (115, G["new"]): ("SHIFT", 22),
            (115, G["if"]): ("SHIFT", 12),
            (115, G["{"]): ("SHIFT", 10),
            (115, G["("]): ("SHIFT", 11),
            (115, G["}"]): ("REDUCE", G["block -> expr ;"]),
            (115, G["let"]): ("SHIFT", 14),
            (115, G["true"]): ("SHIFT", 25),
            (115, G["int"]): ("SHIFT", 31),
            (116, G["}"]): ("REDUCE", G["block -> expr ; block"]),
            (117, G["}"]): ("REDUCE", G["block -> expr error"]),
            (117, G["false"]): ("SHIFT", 26),
            (117, G["id"]): ("SHIFT", 46),
            (117, G["while"]): ("SHIFT", 13),
            (117, G["isvoid"]): ("SHIFT", 24),
            (117, G["string"]): ("SHIFT", 32),
            (117, G["~"]): ("SHIFT", 27),
            (117, G["not"]): ("SHIFT", 30),
            (117, G["case"]): ("SHIFT", 21),
            (117, G["new"]): ("SHIFT", 22),
            (117, G["if"]): ("SHIFT", 12),
            (117, G["{"]): ("SHIFT", 10),
            (117, G["("]): ("SHIFT", 11),
            (117, G["let"]): ("SHIFT", 14),
            (117, G["true"]): ("SHIFT", 25),
            (117, G["int"]): ("SHIFT", 31),
            (118, G["}"]): ("REDUCE", G["block -> expr error block"]),
            (119, G["}"]): ("SHIFT", 120),
            (120, G[";"]): ("REDUCE", G["method -> id ( ) : type { expr }"]),
            (120, G["error"]): ("REDUCE", G["method -> id ( ) : type { expr }"]),
            (121, G[":"]): ("SHIFT", 122),
            (122, G["type"]): ("SHIFT", 123),
            (123, G[","]): ("SHIFT", 124),
            (123, G[")"]): ("REDUCE", G["param-list -> id : type"]),
            (124, G["id"]): ("SHIFT", 121),
            (125, G[")"]): ("REDUCE", G["param-list -> id : type , param-list"]),
            (126, G[")"]): ("SHIFT", 127),
            (127, G[":"]): ("SHIFT", 128),
            (128, G["type"]): ("SHIFT", 129),
            (129, G["{"]): ("SHIFT", 130),
            (130, G["while"]): ("SHIFT", 13),
            (130, G["false"]): ("SHIFT", 26),
            (130, G["id"]): ("SHIFT", 46),
            (130, G["case"]): ("SHIFT", 21),
            (130, G["not"]): ("SHIFT", 30),
            (130, G["string"]): ("SHIFT", 32),
            (130, G["{"]): ("SHIFT", 10),
            (130, G["isvoid"]): ("SHIFT", 24),
            (130, G["if"]): ("SHIFT", 12),
            (130, G["new"]): ("SHIFT", 22),
            (130, G["("]): ("SHIFT", 11),
            (130, G["~"]): ("SHIFT", 27),
            (130, G["let"]): ("SHIFT", 14),
            (130, G["int"]): ("SHIFT", 31),
            (130, G["true"]): ("SHIFT", 25),
            (131, G["}"]): ("SHIFT", 132),
            (132, G[";"]): ("REDUCE", G["method -> id ( param-list ) : type { expr }"]),
            (132, G["error"]): (
                "REDUCE",
                G["method -> id ( param-list ) : type { expr }"],
            ),
            (133, G["type"]): ("SHIFT", 134),
            (134, G[";"]): ("REDUCE", G["attribute -> id : type"]),
            (134, G["error"]): ("REDUCE", G["attribute -> id : type"]),
            (134, G["<-"]): ("SHIFT", 135),
            (135, G["false"]): ("SHIFT", 26),
            (135, G["id"]): ("SHIFT", 46),
            (135, G["while"]): ("SHIFT", 13),
            (135, G["isvoid"]): ("SHIFT", 24),
            (135, G["string"]): ("SHIFT", 32),
            (135, G["~"]): ("SHIFT", 27),
            (135, G["not"]): ("SHIFT", 30),
            (135, G["case"]): ("SHIFT", 21),
            (135, G["new"]): ("SHIFT", 22),
            (135, G["if"]): ("SHIFT", 12),
            (135, G["{"]): ("SHIFT", 10),
            (135, G["("]): ("SHIFT", 11),
            (135, G["let"]): ("SHIFT", 14),
            (135, G["true"]): ("SHIFT", 25),
            (135, G["int"]): ("SHIFT", 31),
            (136, G[";"]): ("REDUCE", G["attribute -> id : type <- expr"]),
            (136, G["error"]): ("REDUCE", G["attribute -> id : type <- expr"]),
            (137, G["}"]): ("SHIFT", 138),
            (138, G[";"]): ("REDUCE", G["class-def -> class type { feature-list }"]),
            (139, G["error"]): ("SHIFT", 147),
            (139, G[";"]): ("SHIFT", 140),
            (140, G["id"]): ("SHIFT", 4),
            (140, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (141, G["}"]): ("REDUCE", G["feature-list -> attribute ; feature-list"]),
            (142, G[";"]): ("SHIFT", 143),
            (142, G["error"]): ("SHIFT", 145),
            (143, G["id"]): ("SHIFT", 4),
            (143, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (144, G["}"]): ("REDUCE", G["feature-list -> method ; feature-list"]),
            (145, G["id"]): ("SHIFT", 4),
            (145, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (146, G["}"]): ("REDUCE", G["feature-list -> method error feature-list"]),
            (147, G["id"]): ("SHIFT", 4),
            (147, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (148, G["}"]): (
                "REDUCE",
                G["feature-list -> attribute error feature-list"],
            ),
            (149, G["type"]): ("SHIFT", 150),
            (150, G["{"]): ("SHIFT", 151),
            (151, G["id"]): ("SHIFT", 4),
            (151, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (152, G["}"]): ("SHIFT", 153),
            (153, G[";"]): (
                "REDUCE",
                G["class-def -> class type inherits type { feature-list }"],
            ),
            (154, G["$"]): ("OK", None),
            (155, G["$"]): ("REDUCE", G["program -> class-list"]),
            (156, G[";"]): ("SHIFT", 157),
            (157, G["class"]): ("SHIFT", 1),
            (157, G["$"]): ("REDUCE", G["class-list -> class-def ;"]),
            (158, G["$"]): ("REDUCE", G["class-list -> class-def ; class-list"]),
        }

    @staticmethod
    def __goto_table():
        return {
            (0, G["program"]): 154,
            (0, G["class-list"]): 155,
            (0, G["class-def"]): 156,
            (3, G["attribute"]): 139,
            (3, G["method"]): 142,
            (3, G["feature-list"]): 137,
            (5, G["param-list"]): 126,
            (9, G["comp"]): 50,
            (9, G["function-call"]): 33,
            (9, G["term"]): 59,
            (9, G["arith"]): 62,
            (9, G["negable-comp"]): 49,
            (9, G["atom"]): 42,
            (9, G["factor"]): 58,
            (9, G["expr"]): 119,
            (10, G["term"]): 59,
            (10, G["atom"]): 42,
            (10, G["expr"]): 114,
            (10, G["arith"]): 62,
            (10, G["comp"]): 50,
            (10, G["function-call"]): 33,
            (10, G["block"]): 112,
            (10, G["factor"]): 58,
            (10, G["negable-comp"]): 49,
            (11, G["comp"]): 50,
            (11, G["negable-comp"]): 49,
            (11, G["function-call"]): 33,
            (11, G["atom"]): 42,
            (11, G["term"]): 59,
            (11, G["arith"]): 62,
            (11, G["factor"]): 58,
            (11, G["expr"]): 110,
            (12, G["comp"]): 50,
            (12, G["function-call"]): 33,
            (12, G["term"]): 59,
            (12, G["arith"]): 62,
            (12, G["negable-comp"]): 49,
            (12, G["atom"]): 42,
            (12, G["expr"]): 104,
            (12, G["factor"]): 58,
            (13, G["comp"]): 50,
            (13, G["atom"]): 42,
            (13, G["negable-comp"]): 49,
            (13, G["expr"]): 100,
            (13, G["term"]): 59,
            (13, G["arith"]): 62,
            (13, G["function-call"]): 33,
            (13, G["factor"]): 58,
            (14, G["declaration-list"]): 97,
            (18, G["declaration-list"]): 19,
            (20, G["atom"]): 42,
            (20, G["term"]): 59,
            (20, G["comp"]): 50,
            (20, G["arith"]): 62,
            (20, G["function-call"]): 33,
            (20, G["expr"]): 94,
            (20, G["factor"]): 58,
            (20, G["negable-comp"]): 49,
            (21, G["arith"]): 62,
            (21, G["comp"]): 50,
            (21, G["atom"]): 42,
            (21, G["expr"]): 81,
            (21, G["term"]): 59,
            (21, G["factor"]): 58,
            (21, G["negable-comp"]): 49,
            (21, G["function-call"]): 33,
            (24, G["function-call"]): 33,
            (24, G["factor"]): 80,
            (24, G["atom"]): 42,
            (27, G["function-call"]): 33,
            (27, G["factor"]): 79,
            (27, G["atom"]): 42,
            (29, G["not-empty-expr-list"]): 65,
            (29, G["comp"]): 50,
            (29, G["expr"]): 66,
            (29, G["function-call"]): 33,
            (29, G["atom"]): 42,
            (29, G["term"]): 59,
            (29, G["factor"]): 58,
            (29, G["arith"]): 62,
            (29, G["negable-comp"]): 49,
            (29, G["expr-list"]): 77,
            (30, G["function-call"]): 33,
            (30, G["factor"]): 58,
            (30, G["comp"]): 34,
            (30, G["term"]): 59,
            (30, G["arith"]): 62,
            (30, G["atom"]): 42,
            (35, G["function-call"]): 33,
            (35, G["factor"]): 58,
            (35, G["term"]): 59,
            (35, G["arith"]): 53,
            (35, G["negable-arith"]): 76,
            (35, G["atom"]): 42,
            (36, G["function-call"]): 33,
            (36, G["factor"]): 58,
            (36, G["term"]): 59,
            (36, G["arith"]): 37,
            (36, G["atom"]): 42,
            (38, G["function-call"]): 33,
            (38, G["factor"]): 58,
            (38, G["term"]): 39,
            (38, G["atom"]): 42,
            (40, G["function-call"]): 33,
            (40, G["atom"]): 42,
            (40, G["factor"]): 41,
            (45, G["not-empty-expr-list"]): 65,
            (45, G["comp"]): 50,
            (45, G["expr"]): 66,
            (45, G["function-call"]): 33,
            (45, G["atom"]): 42,
            (45, G["expr-list"]): 63,
            (45, G["term"]): 59,
            (45, G["factor"]): 58,
            (45, G["arith"]): 62,
            (45, G["negable-comp"]): 49,
            (47, G["function-call"]): 33,
            (47, G["comp"]): 50,
            (47, G["arith"]): 62,
            (47, G["expr"]): 48,
            (47, G["atom"]): 42,
            (47, G["term"]): 59,
            (47, G["factor"]): 58,
            (47, G["negable-comp"]): 49,
            (51, G["function-call"]): 33,
            (51, G["factor"]): 58,
            (51, G["term"]): 59,
            (51, G["arith"]): 53,
            (51, G["atom"]): 42,
            (51, G["negable-arith"]): 52,
            (54, G["function-call"]): 33,
            (54, G["factor"]): 58,
            (54, G["term"]): 55,
            (54, G["atom"]): 42,
            (56, G["function-call"]): 33,
            (56, G["factor"]): 57,
            (56, G["atom"]): 42,
            (60, G["negable-arith"]): 61,
            (60, G["function-call"]): 33,
            (60, G["factor"]): 58,
            (60, G["term"]): 59,
            (60, G["arith"]): 53,
            (60, G["atom"]): 42,
            (67, G["comp"]): 50,
            (67, G["expr"]): 66,
            (67, G["function-call"]): 33,
            (67, G["atom"]): 42,
            (67, G["term"]): 59,
            (67, G["factor"]): 58,
            (67, G["arith"]): 62,
            (67, G["negable-comp"]): 49,
            (67, G["not-empty-expr-list"]): 68,
            (73, G["not-empty-expr-list"]): 65,
            (73, G["comp"]): 50,
            (73, G["expr-list"]): 74,
            (73, G["expr"]): 66,
            (73, G["function-call"]): 33,
            (73, G["atom"]): 42,
            (73, G["term"]): 59,
            (73, G["factor"]): 58,
            (73, G["arith"]): 62,
            (73, G["negable-comp"]): 49,
            (82, G["case-list"]): 92,
            (86, G["term"]): 59,
            (86, G["atom"]): 42,
            (86, G["arith"]): 62,
            (86, G["comp"]): 50,
            (86, G["function-call"]): 33,
            (86, G["expr"]): 87,
            (86, G["factor"]): 58,
            (86, G["negable-comp"]): 49,
            (88, G["case-list"]): 89,
            (90, G["case-list"]): 91,
            (95, G["declaration-list"]): 96,
            (98, G["function-call"]): 33,
            (98, G["comp"]): 50,
            (98, G["arith"]): 62,
            (98, G["atom"]): 42,
            (98, G["term"]): 59,
            (98, G["factor"]): 58,
            (98, G["negable-comp"]): 49,
            (98, G["expr"]): 99,
            (101, G["arith"]): 62,
            (101, G["comp"]): 50,
            (101, G["atom"]): 42,
            (101, G["term"]): 59,
            (101, G["function-call"]): 33,
            (101, G["expr"]): 102,
            (101, G["factor"]): 58,
            (101, G["negable-comp"]): 49,
            (105, G["expr"]): 106,
            (105, G["atom"]): 42,
            (105, G["arith"]): 62,
            (105, G["comp"]): 50,
            (105, G["term"]): 59,
            (105, G["factor"]): 58,
            (105, G["function-call"]): 33,
            (105, G["negable-comp"]): 49,
            (107, G["arith"]): 62,
            (107, G["comp"]): 50,
            (107, G["atom"]): 42,
            (107, G["term"]): 59,
            (107, G["factor"]): 58,
            (107, G["function-call"]): 33,
            (107, G["expr"]): 108,
            (107, G["negable-comp"]): 49,
            (115, G["term"]): 59,
            (115, G["atom"]): 42,
            (115, G["expr"]): 114,
            (115, G["arith"]): 62,
            (115, G["comp"]): 50,
            (115, G["block"]): 116,
            (115, G["function-call"]): 33,
            (115, G["factor"]): 58,
            (115, G["negable-comp"]): 49,
            (117, G["term"]): 59,
            (117, G["atom"]): 42,
            (117, G["expr"]): 114,
            (117, G["arith"]): 62,
            (117, G["comp"]): 50,
            (117, G["function-call"]): 33,
            (117, G["factor"]): 58,
            (117, G["negable-comp"]): 49,
            (117, G["block"]): 118,
            (124, G["param-list"]): 125,
            (130, G["comp"]): 50,
            (130, G["function-call"]): 33,
            (130, G["term"]): 59,
            (130, G["arith"]): 62,
            (130, G["negable-comp"]): 49,
            (130, G["atom"]): 42,
            (130, G["factor"]): 58,
            (130, G["expr"]): 131,
            (135, G["term"]): 59,
            (135, G["atom"]): 42,
            (135, G["arith"]): 62,
            (135, G["comp"]): 50,
            (135, G["expr"]): 136,
            (135, G["function-call"]): 33,
            (135, G["factor"]): 58,
            (135, G["negable-comp"]): 49,
            (140, G["feature-list"]): 141,
            (140, G["attribute"]): 139,
            (140, G["method"]): 142,
            (143, G["attribute"]): 139,
            (143, G["method"]): 142,
            (143, G["feature-list"]): 144,
            (145, G["attribute"]): 139,
            (145, G["method"]): 142,
            (145, G["feature-list"]): 146,
            (147, G["feature-list"]): 148,
            (147, G["attribute"]): 139,
            (147, G["method"]): 142,
            (151, G["feature-list"]): 152,
            (151, G["attribute"]): 139,
            (151, G["method"]): 142,
            (157, G["class-def"]): 156,
            (157, G["class-list"]): 158,
        }
