
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNrightNOTnonassocLEQLESSEQleftPLUSMINUSleftSTARDIVrightISVOIDrightCOMPleftATleftDOTARROW ASSIGN AT BOOL CASE CCUR CLASS COLON COMMA COMP CPAR DIV DOT ELSE EQ ESAC FI ID IF IN INHERITS INT ISVOID LEQ LESS LET LOOP MINUS NEW NOT OCUR OF OPAR PLUS POOL SEMI STAR STRING THEN TYPE WHILE\n    program : class_list\n    \n    class_list : class_def SEMI class_list\n               | class_def SEMI\n    \n    class_def : CLASS TYPE INHERITS TYPE OCUR feature_list CCUR\n              | CLASS TYPE OCUR feature_list CCUR\n    \n    feature_list : attr_def SEMI feature_list\n                 | func_def SEMI feature_list\n                 | empty\n    \n    attr_def : ID COLON TYPE ASSIGN expr\n             | ID COLON TYPE\n    \n    func_def : ID OPAR param_list CPAR COLON TYPE OCUR expr CCUR\n             | ID OPAR CPAR COLON TYPE OCUR expr CCUR\n    \n    param_list : ID COLON TYPE COMMA param_list\n               | ID COLON TYPE\n    \n    expr : ID ASSIGN expr\n    \n    expr_list : expr COMMA expr_list_not_empty\n              | expr\n    \n    expr_list : empty\n    \n    expr_list_not_empty : expr COMMA expr_list_not_empty\n                        | expr\n    \n    expr : ID OPAR expr_list CPAR\n         | expr DOT ID OPAR expr_list CPAR\n         | expr AT TYPE DOT ID OPAR expr_list CPAR\n    \n    expr : IF expr THEN expr ELSE expr FI\n    \n    expr : WHILE expr LOOP expr POOL\n    \n    block : expr SEMI block\n          | expr SEMI\n    \n    expr : OCUR block CCUR\n    \n    decl_list : ID COLON TYPE ASSIGN expr COMMA decl_list\n              | ID COLON TYPE COMMA decl_list\n              | ID COLON TYPE ASSIGN expr\n              | ID COLON TYPE\n    \n    expr : LET decl_list IN expr\n    \n    case_list : ID COLON TYPE ARROW expr SEMI case_list\n              | ID COLON TYPE ARROW expr SEMI\n    \n    expr : CASE expr OF case_list ESAC\n    \n    expr : NEW TYPE\n    \n    expr : ISVOID expr\n    \n    expr : expr PLUS expr\n         | expr MINUS expr\n         | expr STAR expr\n         | expr DIV expr\n         | expr LESS expr\n         | expr LEQ expr\n         | expr EQ expr\n    \n    expr : COMP expr\n    \n    expr : NOT expr\n    \n    expr : OPAR expr CPAR\n    \n    expr : ID\n    \n    expr : INT\n    \n    expr : STRING\n    \n    expr : BOOL\n    \n    empty :\n    '
    
_lr_action_items = {'CLASS':([0,5,],[4,4,]),'$end':([1,2,5,7,],[0,-1,-3,-2,]),'SEMI':([3,12,13,17,25,29,34,35,46,47,48,67,71,72,73,74,78,84,85,86,87,88,89,90,91,94,102,109,114,120,123,125,127,135,138,140,],[5,18,19,-5,-10,-4,-49,-9,-50,-51,-52,95,-37,-38,-46,-47,-15,-39,-40,-41,-42,-43,-44,-45,-48,-28,-21,-33,-12,-25,-36,-11,-22,-24,-23,141,]),'TYPE':([4,8,20,31,33,42,50,55,97,124,],[6,10,25,49,51,71,76,83,110,132,]),'INHERITS':([6,],[8,]),'OCUR':([6,10,30,36,37,38,39,41,43,44,45,51,52,53,56,57,58,59,60,61,62,76,77,92,93,95,96,100,103,104,119,121,126,128,137,],[9,16,39,39,39,39,39,39,39,39,39,77,39,39,39,39,39,39,39,39,39,100,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'ID':([9,16,18,19,21,30,36,37,38,39,40,41,43,44,45,52,53,54,56,57,58,59,60,61,62,75,77,92,93,95,96,98,100,103,104,105,119,121,122,126,128,136,137,141,],[15,15,15,15,26,34,34,34,34,34,69,34,34,34,34,34,34,82,34,34,34,34,34,34,34,26,34,34,34,34,34,112,34,34,34,118,34,34,69,34,34,69,34,112,]),'CCUR':([9,11,14,16,18,19,22,23,24,34,46,47,48,66,71,72,73,74,78,84,85,86,87,88,89,90,91,94,95,101,102,108,109,113,120,123,127,135,138,],[-53,17,-8,-53,-53,-53,29,-6,-7,-49,-50,-51,-52,94,-37,-38,-46,-47,-15,-39,-40,-41,-42,-43,-44,-45,-48,-28,-27,114,-21,-26,-33,125,-25,-36,-22,-24,-23,]),'COLON':([15,26,28,32,69,112,],[20,31,33,50,97,124,]),'OPAR':([15,30,34,36,37,38,39,41,43,44,45,52,53,56,57,58,59,60,61,62,77,82,92,93,95,96,100,103,104,118,119,121,126,128,137,],[21,36,53,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,104,36,36,36,36,36,36,36,128,36,36,36,36,36,]),'CPAR':([21,27,34,46,47,48,49,53,63,71,72,73,74,78,79,80,81,84,85,86,87,88,89,90,91,94,99,102,104,109,115,116,117,120,123,127,128,133,134,135,138,],[28,32,-49,-50,-51,-52,-14,-53,91,-37,-38,-46,-47,-15,102,-17,-18,-39,-40,-41,-42,-43,-44,-45,-48,-28,-13,-21,-53,-33,-20,-16,127,-25,-36,-22,-53,-19,138,-24,-23,]),'ASSIGN':([25,34,110,],[30,52,121,]),'IF':([30,36,37,38,39,41,43,44,45,52,53,56,57,58,59,60,61,62,77,92,93,95,96,100,103,104,119,121,126,128,137,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'WHILE':([30,36,37,38,39,41,43,44,45,52,53,56,57,58,59,60,61,62,77,92,93,95,96,100,103,104,119,121,126,128,137,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'LET':([30,36,37,38,39,41,43,44,45,52,53,56,57,58,59,60,61,62,77,92,93,95,96,100,103,104,119,121,126,128,137,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'CASE':([30,36,37,38,39,41,43,44,45,52,53,56,57,58,59,60,61,62,77,92,93,95,96,100,103,104,119,121,126,128,137,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'NEW':([30,36,37,38,39,41,43,44,45,52,53,56,57,58,59,60,61,62,77,92,93,95,96,100,103,104,119,121,126,128,137,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'ISVOID':([30,36,37,38,39,41,43,44,45,52,53,56,57,58,59,60,61,62,77,92,93,95,96,100,103,104,119,121,126,128,137,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'COMP':([30,36,37,38,39,41,43,44,45,52,53,56,57,58,59,60,61,62,77,92,93,95,96,100,103,104,119,121,126,128,137,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NOT':([30,36,37,38,39,41,43,44,45,52,53,56,57,58,59,60,61,62,77,92,93,95,96,100,103,104,119,121,126,128,137,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'INT':([30,36,37,38,39,41,43,44,45,52,53,56,57,58,59,60,61,62,77,92,93,95,96,100,103,104,119,121,126,128,137,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'STRING':([30,36,37,38,39,41,43,44,45,52,53,56,57,58,59,60,61,62,77,92,93,95,96,100,103,104,119,121,126,128,137,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'BOOL':([30,36,37,38,39,41,43,44,45,52,53,56,57,58,59,60,61,62,77,92,93,95,96,100,103,104,119,121,126,128,137,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'DOT':([34,35,46,47,48,63,64,65,67,70,71,72,73,74,78,80,83,84,85,86,87,88,89,90,91,94,101,102,106,107,109,113,115,120,123,127,129,130,135,138,140,],[-49,54,-50,-51,-52,54,54,54,54,54,-37,54,54,54,54,54,105,54,54,54,54,54,54,54,-48,-28,54,-21,54,54,54,54,54,-25,-36,-22,54,54,-24,-23,54,]),'AT':([34,35,46,47,48,63,64,65,67,70,71,72,73,74,78,80,84,85,86,87,88,89,90,91,94,101,102,106,107,109,113,115,120,123,127,129,130,135,138,140,],[-49,55,-50,-51,-52,55,55,55,55,55,-37,55,55,55,55,55,55,55,55,55,55,55,55,-48,-28,55,-21,55,55,55,55,55,-25,-36,-22,55,55,-24,-23,55,]),'PLUS':([34,35,46,47,48,63,64,65,67,70,71,72,73,74,78,80,84,85,86,87,88,89,90,91,94,101,102,106,107,109,113,115,120,123,127,129,130,135,138,140,],[-49,56,-50,-51,-52,56,56,56,56,56,-37,-38,-46,56,56,56,-39,-40,-41,-42,56,56,56,-48,-28,56,-21,56,56,56,56,56,-25,-36,-22,56,56,-24,-23,56,]),'MINUS':([34,35,46,47,48,63,64,65,67,70,71,72,73,74,78,80,84,85,86,87,88,89,90,91,94,101,102,106,107,109,113,115,120,123,127,129,130,135,138,140,],[-49,57,-50,-51,-52,57,57,57,57,57,-37,-38,-46,57,57,57,-39,-40,-41,-42,57,57,57,-48,-28,57,-21,57,57,57,57,57,-25,-36,-22,57,57,-24,-23,57,]),'STAR':([34,35,46,47,48,63,64,65,67,70,71,72,73,74,78,80,84,85,86,87,88,89,90,91,94,101,102,106,107,109,113,115,120,123,127,129,130,135,138,140,],[-49,58,-50,-51,-52,58,58,58,58,58,-37,-38,-46,58,58,58,58,58,-41,-42,58,58,58,-48,-28,58,-21,58,58,58,58,58,-25,-36,-22,58,58,-24,-23,58,]),'DIV':([34,35,46,47,48,63,64,65,67,70,71,72,73,74,78,80,84,85,86,87,88,89,90,91,94,101,102,106,107,109,113,115,120,123,127,129,130,135,138,140,],[-49,59,-50,-51,-52,59,59,59,59,59,-37,-38,-46,59,59,59,59,59,-41,-42,59,59,59,-48,-28,59,-21,59,59,59,59,59,-25,-36,-22,59,59,-24,-23,59,]),'LESS':([34,35,46,47,48,63,64,65,67,70,71,72,73,74,78,80,84,85,86,87,88,89,90,91,94,101,102,106,107,109,113,115,120,123,127,129,130,135,138,140,],[-49,60,-50,-51,-52,60,60,60,60,60,-37,-38,-46,60,60,60,-39,-40,-41,-42,None,None,None,-48,-28,60,-21,60,60,60,60,60,-25,-36,-22,60,60,-24,-23,60,]),'LEQ':([34,35,46,47,48,63,64,65,67,70,71,72,73,74,78,80,84,85,86,87,88,89,90,91,94,101,102,106,107,109,113,115,120,123,127,129,130,135,138,140,],[-49,61,-50,-51,-52,61,61,61,61,61,-37,-38,-46,61,61,61,-39,-40,-41,-42,None,None,None,-48,-28,61,-21,61,61,61,61,61,-25,-36,-22,61,61,-24,-23,61,]),'EQ':([34,35,46,47,48,63,64,65,67,70,71,72,73,74,78,80,84,85,86,87,88,89,90,91,94,101,102,106,107,109,113,115,120,123,127,129,130,135,138,140,],[-49,62,-50,-51,-52,62,62,62,62,62,-37,-38,-46,62,62,62,-39,-40,-41,-42,None,None,None,-48,-28,62,-21,62,62,62,62,62,-25,-36,-22,62,62,-24,-23,62,]),'THEN':([34,46,47,48,64,71,72,73,74,78,84,85,86,87,88,89,90,91,94,102,109,120,123,127,135,138,],[-49,-50,-51,-52,92,-37,-38,-46,-47,-15,-39,-40,-41,-42,-43,-44,-45,-48,-28,-21,-33,-25,-36,-22,-24,-23,]),'LOOP':([34,46,47,48,65,71,72,73,74,78,84,85,86,87,88,89,90,91,94,102,109,120,123,127,135,138,],[-49,-50,-51,-52,93,-37,-38,-46,-47,-15,-39,-40,-41,-42,-43,-44,-45,-48,-28,-21,-33,-25,-36,-22,-24,-23,]),'OF':([34,46,47,48,70,71,72,73,74,78,84,85,86,87,88,89,90,91,94,102,109,120,123,127,135,138,],[-49,-50,-51,-52,98,-37,-38,-46,-47,-15,-39,-40,-41,-42,-43,-44,-45,-48,-28,-21,-33,-25,-36,-22,-24,-23,]),'COMMA':([34,46,47,48,49,71,72,73,74,78,80,84,85,86,87,88,89,90,91,94,102,109,110,115,120,123,127,130,135,138,],[-49,-50,-51,-52,75,-37,-38,-46,-47,-15,103,-39,-40,-41,-42,-43,-44,-45,-48,-28,-21,-33,122,126,-25,-36,-22,136,-24,-23,]),'ELSE':([34,46,47,48,71,72,73,74,78,84,85,86,87,88,89,90,91,94,102,106,109,120,123,127,135,138,],[-49,-50,-51,-52,-37,-38,-46,-47,-15,-39,-40,-41,-42,-43,-44,-45,-48,-28,-21,119,-33,-25,-36,-22,-24,-23,]),'POOL':([34,46,47,48,71,72,73,74,78,84,85,86,87,88,89,90,91,94,102,107,109,120,123,127,135,138,],[-49,-50,-51,-52,-37,-38,-46,-47,-15,-39,-40,-41,-42,-43,-44,-45,-48,-28,-21,120,-33,-25,-36,-22,-24,-23,]),'FI':([34,46,47,48,71,72,73,74,78,84,85,86,87,88,89,90,91,94,102,109,120,123,127,129,135,138,],[-49,-50,-51,-52,-37,-38,-46,-47,-15,-39,-40,-41,-42,-43,-44,-45,-48,-28,-21,-33,-25,-36,-22,135,-24,-23,]),'IN':([34,46,47,48,68,71,72,73,74,78,84,85,86,87,88,89,90,91,94,102,109,110,120,123,127,130,131,135,138,139,],[-49,-50,-51,-52,96,-37,-38,-46,-47,-15,-39,-40,-41,-42,-43,-44,-45,-48,-28,-21,-33,-32,-25,-36,-22,-31,-30,-24,-23,-29,]),'ESAC':([111,141,142,],[123,-35,-34,]),'ARROW':([132,],[137,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'class_list':([0,5,],[2,7,]),'class_def':([0,5,],[3,3,]),'feature_list':([9,16,18,19,],[11,22,23,24,]),'attr_def':([9,16,18,19,],[12,12,12,12,]),'func_def':([9,16,18,19,],[13,13,13,13,]),'empty':([9,16,18,19,53,104,128,],[14,14,14,14,81,81,81,]),'param_list':([21,75,],[27,99,]),'expr':([30,36,37,38,39,41,43,44,45,52,53,56,57,58,59,60,61,62,77,92,93,95,96,100,103,104,119,121,126,128,137,],[35,63,64,65,67,70,72,73,74,78,80,84,85,86,87,88,89,90,101,106,107,67,109,113,115,80,129,130,115,80,140,]),'block':([39,95,],[66,108,]),'decl_list':([40,122,136,],[68,131,139,]),'expr_list':([53,104,128,],[79,117,134,]),'case_list':([98,141,],[111,142,]),'expr_list_not_empty':([103,126,],[116,133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class_list','program',1,'p_program','parser.py',26),
  ('class_list -> class_def SEMI class_list','class_list',3,'p_class_list','parser.py',33),
  ('class_list -> class_def SEMI','class_list',2,'p_class_list','parser.py',34),
  ('class_def -> CLASS TYPE INHERITS TYPE OCUR feature_list CCUR','class_def',7,'p_class_def','parser.py',44),
  ('class_def -> CLASS TYPE OCUR feature_list CCUR','class_def',5,'p_class_def','parser.py',45),
  ('feature_list -> attr_def SEMI feature_list','feature_list',3,'p_feature_list','parser.py',57),
  ('feature_list -> func_def SEMI feature_list','feature_list',3,'p_feature_list','parser.py',58),
  ('feature_list -> empty','feature_list',1,'p_feature_list','parser.py',59),
  ('attr_def -> ID COLON TYPE ASSIGN expr','attr_def',5,'p_attr_def','parser.py',69),
  ('attr_def -> ID COLON TYPE','attr_def',3,'p_attr_def','parser.py',70),
  ('func_def -> ID OPAR param_list CPAR COLON TYPE OCUR expr CCUR','func_def',9,'p_func_def','parser.py',84),
  ('func_def -> ID OPAR CPAR COLON TYPE OCUR expr CCUR','func_def',8,'p_func_def','parser.py',85),
  ('param_list -> ID COLON TYPE COMMA param_list','param_list',5,'p_param_list','parser.py',99),
  ('param_list -> ID COLON TYPE','param_list',3,'p_param_list','parser.py',100),
  ('expr -> ID ASSIGN expr','expr',3,'p_expr_assign','parser.py',115),
  ('expr_list -> expr COMMA expr_list_not_empty','expr_list',3,'p_expr_list','parser.py',124),
  ('expr_list -> expr','expr_list',1,'p_expr_list','parser.py',125),
  ('expr_list -> empty','expr_list',1,'p_expr_list_empty','parser.py',135),
  ('expr_list_not_empty -> expr COMMA expr_list_not_empty','expr_list_not_empty',3,'p_expr_list_not_empty','parser.py',142),
  ('expr_list_not_empty -> expr','expr_list_not_empty',1,'p_expr_list_not_empty','parser.py',143),
  ('expr -> ID OPAR expr_list CPAR','expr',4,'p_expr_func_call','parser.py',153),
  ('expr -> expr DOT ID OPAR expr_list CPAR','expr',6,'p_expr_func_call','parser.py',154),
  ('expr -> expr AT TYPE DOT ID OPAR expr_list CPAR','expr',8,'p_expr_func_call','parser.py',155),
  ('expr -> IF expr THEN expr ELSE expr FI','expr',7,'p_expr_if','parser.py',171),
  ('expr -> WHILE expr LOOP expr POOL','expr',5,'p_expr_while','parser.py',180),
  ('block -> expr SEMI block','block',3,'p_block','parser.py',189),
  ('block -> expr SEMI','block',2,'p_block','parser.py',190),
  ('expr -> OCUR block CCUR','expr',3,'p_expr_block','parser.py',200),
  ('decl_list -> ID COLON TYPE ASSIGN expr COMMA decl_list','decl_list',7,'p_decl_list','parser.py',209),
  ('decl_list -> ID COLON TYPE COMMA decl_list','decl_list',5,'p_decl_list','parser.py',210),
  ('decl_list -> ID COLON TYPE ASSIGN expr','decl_list',5,'p_decl_list','parser.py',211),
  ('decl_list -> ID COLON TYPE','decl_list',3,'p_decl_list','parser.py',212),
  ('expr -> LET decl_list IN expr','expr',4,'p_expr_let','parser.py',245),
  ('case_list -> ID COLON TYPE ARROW expr SEMI case_list','case_list',7,'p_case_list','parser.py',254),
  ('case_list -> ID COLON TYPE ARROW expr SEMI','case_list',6,'p_case_list','parser.py',255),
  ('expr -> CASE expr OF case_list ESAC','expr',5,'p_expr_case','parser.py',269),
  ('expr -> NEW TYPE','expr',2,'p_expr_new','parser.py',278),
  ('expr -> ISVOID expr','expr',2,'p_expr_isvoid','parser.py',287),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binary_op','parser.py',296),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binary_op','parser.py',297),
  ('expr -> expr STAR expr','expr',3,'p_expr_binary_op','parser.py',298),
  ('expr -> expr DIV expr','expr',3,'p_expr_binary_op','parser.py',299),
  ('expr -> expr LESS expr','expr',3,'p_expr_binary_op','parser.py',300),
  ('expr -> expr LEQ expr','expr',3,'p_expr_binary_op','parser.py',301),
  ('expr -> expr EQ expr','expr',3,'p_expr_binary_op','parser.py',302),
  ('expr -> COMP expr','expr',2,'p_expr_comp','parser.py',324),
  ('expr -> NOT expr','expr',2,'p_expr_not','parser.py',333),
  ('expr -> OPAR expr CPAR','expr',3,'p_expr_pars','parser.py',342),
  ('expr -> ID','expr',1,'p_expr_id','parser.py',349),
  ('expr -> INT','expr',1,'p_expr_int','parser.py',358),
  ('expr -> STRING','expr',1,'p_expr_string','parser.py',367),
  ('expr -> BOOL','expr',1,'p_expr_bool','parser.py',376),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',387),
]
