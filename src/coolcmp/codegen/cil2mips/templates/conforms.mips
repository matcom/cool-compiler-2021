# Template for conforms function:
# Check whether type $a0 conforms type $a1
# Parameters:
# a0: address to first type
# a1: address to second type
# Returns:
# v0: 1 if $a0 conforms $a0, 0 elsewhere
conforms:
    addiu $sp $sp -24
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)
    sw $a0 12($sp)
    sw $a1 16($sp)
    sw $ra 20($sp)

    li $v0, 0 # By default $v0 = 0

    move $t0, $a0
    move $t1, $a1
    la $t2, _NoParent # End condition

conforms_loop:
    beq $t0, $t1, conforms_equal	# if $t0 == $t1 then conforms_equal
    beq $t0, $t2, conforms_end    # if $t0 == $t2 then conforms_end (return false)

    # $t0 = $t0.parent
    addi $t0, $t0, 4			# $t0 = $t0 + 4
    lw $t0, 0($t0)

    j conforms_loop

conforms_equal:
    li $v0, 1 # return true


conforms_end:
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    lw $a0 12($sp)
    lw $a1 16($sp)
    lw $ra 20($sp)
    addiu $sp $sp 24
    jr $ra