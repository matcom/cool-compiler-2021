
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programarroba case ccur class colon comma cpar div dot else equal esac false fi id if in inherits isvoid larrow less lesseq let loop minus new not nox num ocur of opar plus pool rarrow semi star string then true type whileprogram : class_listclass_list : def_class class_list \n                      | def_classdef_class : class type ocur feature_list ccur semi \n                     | class type inherits type ocur feature_list ccur semifeature_list : \n                        | def_attr semi feature_list\n                        | def_func semi feature_listdef_attr : id colon type\n                    | id colon type larrow exprdef_func : id opar formals cpar colon type ocur expr ccurformals  : param_list\n                    | param_list_empty\n        param_list : param\n                      | param comma param_listparam_list_empty : param : id colon typelet_list : let_assign\n                    | let_assign comma let_listlet_assign : param larrow expr\n                      | paramcases_list : casep semi\n                      | casep semi cases_listcasep : id colon type rarrow exprexpr : id larrow expr\n                 | comp\n        comp : comp less op\n                | comp lesseq op\n                | comp equal op\n                | opop : op plus term\n              | op minus term\n              | termterm : term star base_call\n                | term div base_call\n                | base_callbase_call : factor arroba type dot func_call\n                     | factorfactor : atom\n                  | opar expr cparfactor : factor dot func_call\n                  | not expr\n                  | func_callfactor : isvoid base_call\n                  | nox base_call\n        factor : let let_list in exprfactor : case expr of cases_list esacfactor : if expr then expr else expr fifactor : while expr loop expr poolatom : numatom : idatom : new typeatom : ocur block ccuratom : true\n                | falseatom : stringblock : expr semi\n                 | expr semi blockfunc_call : id opar args cparargs : arg_list\n                | arg_list_empty\n        arg_list : expr  \n                    | expr comma arg_listarg_list_empty : '
    
_lr_action_items = {'class':([0,3,20,61,],[4,4,-4,-5,]),'$end':([1,2,3,5,20,61,],[0,-1,-3,-2,-4,-5,]),'type':([4,8,17,31,53,59,71,130,],[6,13,23,58,84,87,100,135,]),'ocur':([6,13,30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,87,104,106,108,109,111,112,114,131,137,],[7,19,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,112,54,54,54,54,54,54,54,54,54,]),'inherits':([6,],[8,]),'ccur':([7,9,15,16,19,21,22,29,35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,85,88,93,94,95,96,97,98,99,101,103,110,111,113,116,124,125,127,128,132,138,],[-6,14,-6,-6,-6,-7,-8,34,-51,-26,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,110,-25,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-57,-59,-46,-58,133,-37,-47,-49,-48,]),'id':([7,15,16,18,19,30,33,44,45,46,47,48,49,50,51,54,62,63,64,65,66,67,68,69,70,72,104,105,106,107,108,109,111,112,114,115,129,131,137,],[12,12,12,24,12,35,24,35,35,76,76,24,35,35,35,35,35,35,76,76,76,76,76,76,76,102,35,24,35,121,35,35,35,35,35,102,121,35,35,]),'semi':([10,11,14,23,34,35,36,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,86,88,93,94,95,96,97,98,99,101,103,110,113,116,120,127,128,132,133,138,139,],[15,16,20,-9,61,-51,-10,-26,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,111,-25,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,129,-37,-47,-49,-11,-48,-24,]),'colon':([12,24,32,121,],[17,31,59,130,]),'opar':([12,30,35,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,76,102,104,106,108,109,111,112,114,131,137,],[18,44,63,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,63,63,44,44,44,44,44,44,44,44,44,]),'cpar':([18,25,26,27,28,35,37,38,39,40,41,42,43,52,55,56,57,58,60,63,73,74,75,76,77,84,88,89,90,91,92,93,94,95,96,97,98,99,101,103,110,113,116,126,127,128,132,138,],[-16,32,-12,-13,-14,-51,-26,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-17,-15,-64,103,-42,-44,-51,-45,-52,-25,113,-60,-61,-62,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,-63,-37,-47,-49,-48,]),'larrow':([23,35,58,80,],[30,62,-17,106,]),'comma':([28,35,37,38,39,40,41,42,43,52,55,56,57,58,74,75,76,77,79,80,84,88,92,93,94,95,96,97,98,99,101,103,110,113,116,118,127,128,132,138,],[33,-51,-26,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-17,-42,-44,-51,-45,105,-21,-52,-25,114,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,-20,-37,-47,-49,-48,]),'not':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'isvoid':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'nox':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'let':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'case':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'if':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'while':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'num':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'new':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'true':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'false':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'string':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'arroba':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,88,93,94,95,96,97,98,99,101,103,110,113,116,127,128,132,138,],[-51,-26,-30,-33,-36,71,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,-25,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,-37,-47,-49,-48,]),'dot':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,88,93,94,95,96,97,98,99,100,101,103,110,113,116,127,128,132,138,],[-51,-26,-30,-33,-36,72,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,-25,-27,-28,-29,-31,-32,-34,-35,115,-41,-40,-53,-59,-46,-37,-47,-49,-48,]),'star':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,88,93,94,95,96,97,98,99,101,103,110,113,116,127,128,132,138,],[-51,-26,-30,69,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,-25,-27,-28,-29,69,69,-34,-35,-41,-40,-53,-59,-46,-37,-47,-49,-48,]),'div':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,88,93,94,95,96,97,98,99,101,103,110,113,116,127,128,132,138,],[-51,-26,-30,70,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,-25,-27,-28,-29,70,70,-34,-35,-41,-40,-53,-59,-46,-37,-47,-49,-48,]),'plus':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,88,93,94,95,96,97,98,99,101,103,110,113,116,127,128,132,138,],[-51,-26,67,-33,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,-25,67,67,67,-31,-32,-34,-35,-41,-40,-53,-59,-46,-37,-47,-49,-48,]),'minus':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,88,93,94,95,96,97,98,99,101,103,110,113,116,127,128,132,138,],[-51,-26,68,-33,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,-25,68,68,68,-31,-32,-34,-35,-41,-40,-53,-59,-46,-37,-47,-49,-48,]),'less':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,88,93,94,95,96,97,98,99,101,103,110,113,116,127,128,132,138,],[-51,64,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,-25,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,-37,-47,-49,-48,]),'lesseq':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,88,93,94,95,96,97,98,99,101,103,110,113,116,127,128,132,138,],[-51,65,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,-25,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,-37,-47,-49,-48,]),'equal':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,88,93,94,95,96,97,98,99,101,103,110,113,116,127,128,132,138,],[-51,66,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,-25,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,-37,-47,-49,-48,]),'of':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,81,84,88,93,94,95,96,97,98,99,101,103,110,113,116,127,128,132,138,],[-51,-26,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,107,-52,-25,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,-37,-47,-49,-48,]),'then':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,82,84,88,93,94,95,96,97,98,99,101,103,110,113,116,127,128,132,138,],[-51,-26,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,108,-52,-25,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,-37,-47,-49,-48,]),'loop':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,83,84,88,93,94,95,96,97,98,99,101,103,110,113,116,127,128,132,138,],[-51,-26,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,109,-52,-25,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,-37,-47,-49,-48,]),'in':([35,37,38,39,40,41,42,43,52,55,56,57,58,74,75,76,77,78,79,80,84,88,93,94,95,96,97,98,99,101,103,110,113,116,117,118,127,128,132,138,],[-51,-26,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-17,-42,-44,-51,-45,104,-18,-21,-52,-25,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,-19,-20,-37,-47,-49,-48,]),'else':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,88,93,94,95,96,97,98,99,101,103,110,113,116,122,127,128,132,138,],[-51,-26,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,-25,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,131,-37,-47,-49,-48,]),'pool':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,88,93,94,95,96,97,98,99,101,103,110,113,116,123,127,128,132,138,],[-51,-26,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,-25,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,132,-37,-47,-49,-48,]),'fi':([35,37,38,39,40,41,42,43,52,55,56,57,74,75,76,77,84,88,93,94,95,96,97,98,99,101,103,110,113,116,127,128,132,136,138,],[-51,-26,-30,-33,-36,-38,-43,-39,-50,-54,-55,-56,-42,-44,-51,-45,-52,-25,-27,-28,-29,-31,-32,-34,-35,-41,-40,-53,-59,-46,-37,-47,-49,138,-48,]),'esac':([119,129,134,],[128,-22,-23,]),'rarrow':([135,],[137,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'class_list':([0,3,],[2,5,]),'def_class':([0,3,],[3,3,]),'feature_list':([7,15,16,19,],[9,21,22,29,]),'def_attr':([7,15,16,19,],[10,10,10,10,]),'def_func':([7,15,16,19,],[11,11,11,11,]),'formals':([18,],[25,]),'param_list':([18,33,],[26,60,]),'param_list_empty':([18,],[27,]),'param':([18,33,48,105,],[28,28,80,80,]),'expr':([30,44,45,49,50,51,54,62,63,104,106,108,109,111,112,114,131,137,],[36,73,74,81,82,83,86,88,92,116,118,122,123,86,125,92,136,139,]),'comp':([30,44,45,49,50,51,54,62,63,104,106,108,109,111,112,114,131,137,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'op':([30,44,45,49,50,51,54,62,63,64,65,66,104,106,108,109,111,112,114,131,137,],[38,38,38,38,38,38,38,38,38,93,94,95,38,38,38,38,38,38,38,38,38,]),'term':([30,44,45,49,50,51,54,62,63,64,65,66,67,68,104,106,108,109,111,112,114,131,137,],[39,39,39,39,39,39,39,39,39,39,39,39,96,97,39,39,39,39,39,39,39,39,39,]),'base_call':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[40,40,40,75,77,40,40,40,40,40,40,40,40,40,40,40,98,99,40,40,40,40,40,40,40,40,40,]),'factor':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'func_call':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,72,104,106,108,109,111,112,114,115,131,137,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,101,42,42,42,42,42,42,42,127,42,42,]),'atom':([30,44,45,46,47,49,50,51,54,62,63,64,65,66,67,68,69,70,104,106,108,109,111,112,114,131,137,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'let_list':([48,105,],[78,117,]),'let_assign':([48,105,],[79,79,]),'block':([54,111,],[85,124,]),'args':([63,],[89,]),'arg_list':([63,114,],[90,126,]),'arg_list_empty':([63,],[91,]),'cases_list':([107,129,],[119,134,]),'casep':([107,129,],[120,120,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class_list','program',1,'p_program','parser.py',19),
  ('class_list -> def_class class_list','class_list',2,'p_class_list','parser.py',27),
  ('class_list -> def_class','class_list',1,'p_class_list','parser.py',28),
  ('def_class -> class type ocur feature_list ccur semi','def_class',6,'p_def_class','parser.py',32),
  ('def_class -> class type inherits type ocur feature_list ccur semi','def_class',8,'p_def_class','parser.py',33),
  ('feature_list -> <empty>','feature_list',0,'p_feature_list','parser.py',40),
  ('feature_list -> def_attr semi feature_list','feature_list',3,'p_feature_list','parser.py',41),
  ('feature_list -> def_func semi feature_list','feature_list',3,'p_feature_list','parser.py',42),
  ('def_attr -> id colon type','def_attr',3,'p_def_attr','parser.py',46),
  ('def_attr -> id colon type larrow expr','def_attr',5,'p_def_attr','parser.py',47),
  ('def_func -> id opar formals cpar colon type ocur expr ccur','def_func',9,'p_def_func','parser.py',54),
  ('formals -> param_list','formals',1,'p_formals','parser.py',58),
  ('formals -> param_list_empty','formals',1,'p_formals','parser.py',59),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',64),
  ('param_list -> param comma param_list','param_list',3,'p_param_list','parser.py',65),
  ('param_list_empty -> <empty>','param_list_empty',0,'p_param_list_empty','parser.py',69),
  ('param -> id colon type','param',3,'p_param','parser.py',73),
  ('let_list -> let_assign','let_list',1,'p_let_list','parser.py',78),
  ('let_list -> let_assign comma let_list','let_list',3,'p_let_list','parser.py',79),
  ('let_assign -> param larrow expr','let_assign',3,'p_let_assign','parser.py',83),
  ('let_assign -> param','let_assign',1,'p_let_assign','parser.py',84),
  ('cases_list -> casep semi','cases_list',2,'p_cases_list','parser.py',91),
  ('cases_list -> casep semi cases_list','cases_list',3,'p_cases_list','parser.py',92),
  ('casep -> id colon type rarrow expr','casep',5,'p_case','parser.py',96),
  ('expr -> id larrow expr','expr',3,'p_expr','parser.py',100),
  ('expr -> comp','expr',1,'p_expr','parser.py',101),
  ('comp -> comp less op','comp',3,'p_comp','parser.py',109),
  ('comp -> comp lesseq op','comp',3,'p_comp','parser.py',110),
  ('comp -> comp equal op','comp',3,'p_comp','parser.py',111),
  ('comp -> op','comp',1,'p_comp','parser.py',112),
  ('op -> op plus term','op',3,'p_op','parser.py',123),
  ('op -> op minus term','op',3,'p_op','parser.py',124),
  ('op -> term','op',1,'p_op','parser.py',125),
  ('term -> term star base_call','term',3,'p_term','parser.py',134),
  ('term -> term div base_call','term',3,'p_term','parser.py',135),
  ('term -> base_call','term',1,'p_term','parser.py',136),
  ('base_call -> factor arroba type dot func_call','base_call',5,'p_base_call','parser.py',145),
  ('base_call -> factor','base_call',1,'p_base_call','parser.py',146),
  ('factor -> atom','factor',1,'p_factor1','parser.py',153),
  ('factor -> opar expr cpar','factor',3,'p_factor1','parser.py',154),
  ('factor -> factor dot func_call','factor',3,'p_factor2','parser.py',158),
  ('factor -> not expr','factor',2,'p_factor2','parser.py',159),
  ('factor -> func_call','factor',1,'p_factor2','parser.py',160),
  ('factor -> isvoid base_call','factor',2,'p_factor3','parser.py',169),
  ('factor -> nox base_call','factor',2,'p_factor3','parser.py',170),
  ('factor -> let let_list in expr','factor',4,'p_expr_let','parser.py',178),
  ('factor -> case expr of cases_list esac','factor',5,'p_expr_case','parser.py',182),
  ('factor -> if expr then expr else expr fi','factor',7,'p_expr_if','parser.py',186),
  ('factor -> while expr loop expr pool','factor',5,'p_expr_while','parser.py',190),
  ('atom -> num','atom',1,'p_atom_num','parser.py',194),
  ('atom -> id','atom',1,'p_atom_id','parser.py',198),
  ('atom -> new type','atom',2,'p_atom_new','parser.py',202),
  ('atom -> ocur block ccur','atom',3,'p_atom_block','parser.py',206),
  ('atom -> true','atom',1,'p_atom_boolean','parser.py',210),
  ('atom -> false','atom',1,'p_atom_boolean','parser.py',211),
  ('atom -> string','atom',1,'p_atom_string','parser.py',215),
  ('block -> expr semi','block',2,'p_block','parser.py',219),
  ('block -> expr semi block','block',3,'p_block','parser.py',220),
  ('func_call -> id opar args cpar','func_call',4,'p_func_call','parser.py',224),
  ('args -> arg_list','args',1,'p_args','parser.py',228),
  ('args -> arg_list_empty','args',1,'p_args','parser.py',229),
  ('arg_list -> expr','arg_list',1,'p_arg_list','parser.py',234),
  ('arg_list -> expr comma arg_list','arg_list',3,'p_arg_list','parser.py',235),
  ('arg_list_empty -> <empty>','arg_list_empty',0,'p_arg_list_empty','parser.py',242),
]
