.TYPES
type Object {
	

	method abort: function_abort_at_Object
	method type_name: function_type_name_at_Object
	method copy: function_copy_at_Object
}
type String {
	

	method abort: function_abort_at_Object
	method type_name: function_type_name_at_Object
	method copy: function_copy_at_Object
	method length: function_length_at_String
	method concat: function_concat_at_String
	method substr: function_substr_at_String
}
type Bool {
	

	method abort: function_abort_at_Object
	method type_name: function_type_name_at_Object
	method copy: function_copy_at_Object
}
type Int {
	

	method abort: function_abort_at_Object
	method type_name: function_type_name_at_Object
	method copy: function_copy_at_Object
}
type IO {
	

	method abort: function_abort_at_Object
	method type_name: function_type_name_at_Object
	method copy: function_copy_at_Object
	method out_string: function_out_string_at_IO
	method out_int: function_out_int_at_IO
	method in_string: function_in_string_at_IO
	method in_int: function_in_int_at_IO
}
type Main {
	

	method abort: function_abort_at_Object
	method type_name: function_type_name_at_Object
	method copy: function_copy_at_Object
	method out_string: function_out_string_at_IO
	method out_int: function_out_int_at_IO
	method in_string: function_in_string_at_IO
	method in_int: function_in_int_at_IO
	method main: function_main_at_Main
}

.DATA
data_0 = "Hello"

.CODE
function entry {
	

	LOCAL local__internal_0
	LOCAL local__internal_1

	local__internal_0 = ALLOCATE Main
	ARG local__internal_0
	local__internal_1 = CALL function_main_at_Main
	RETURN 0
}
function function_abort_at_Object {
	PARAM self

	

	ABORT
	RETURN 0
}
function function_type_name_at_Object {
	PARAM self

	LOCAL local_type_name_at_Object_internal_0

	local_type_name_at_Object_internal_0 = TYPEOF self
	RETURN local_type_name_at_Object_internal_0
}
function function_copy_at_Object {
	PARAM self

	LOCAL local_copy_at_Object_internal_0

	local_copy_at_Object_internal_0 = COPY self
	RETURN local_copy_at_Object_internal_0
}
function function_length_at_String {
	PARAM self

	LOCAL local_length_at_String_internal_0

	local_length_at_String_internal_0 = LENGTH self
	RETURN local_length_at_String_internal_0
}
function function_concat_at_String {
	PARAM self
	PARAM s

	LOCAL local_concat_at_String_internal_0

	local_concat_at_String_internal_0 = CONCAT self s
	RETURN local_concat_at_String_internal_0
}
function function_substr_at_String {
	PARAM self
	PARAM i
	PARAM l

	LOCAL local_substr_at_String_internal_0

	local_substr_at_String_internal_0 = SUBSTRING self i l
	RETURN local_substr_at_String_internal_0
}
function function_out_string_at_IO {
	PARAM self
	PARAM x

	

	PRINT x
	RETURN 0
}
function function_out_int_at_IO {
	PARAM self
	PARAM x

	LOCAL local_out_int_at_IO_internal_0

	local_out_int_at_IO_internal_0 = TOSTR x
	PRINT local_out_int_at_IO_internal_0
	RETURN 0
}
function function_in_string_at_IO {
	PARAM self

	LOCAL local_in_string_at_IO_internal_0

	local_in_string_at_IO_internal_0 = READ
	RETURN local_in_string_at_IO_internal_0
}
function function_in_int_at_IO {
	PARAM self

	LOCAL local_in_int_at_IO_internal_0

	local_in_int_at_IO_internal_0 = READ
	RETURN local_in_int_at_IO_internal_0
}
function function_main_at_Main {
	PARAM self

	LOCAL local_main_at_Main_internal_0
	LOCAL local_main_at_Main_internal_1

	local_main_at_Main_internal_0 = LOAD data_0
	ARG self
	ARG local_main_at_Main_internal_0
	local_main_at_Main_internal_1 = VCALL Main out_string
	RETURN local_main_at_Main_internal_1
}