Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> class_list
Rule 2     class_list -> class SEMICOLON class_list
Rule 3     class_list -> class SEMICOLON
Rule 4     class -> CLASS TYPE LBRACE features_list_opt RBRACE
Rule 5     class -> CLASS TYPE INHERITS TYPE LBRACE features_list_opt RBRACE
Rule 6     features_list_opt -> features_list
Rule 7     features_list_opt -> empty
Rule 8     features_list -> feature SEMICOLON features_list
Rule 9     features_list -> empty
Rule 10    feature -> ID LPAREN formal_params_list RPAREN COLON TYPE LBRACE expression RBRACE
Rule 11    feature -> ID LPAREN RPAREN COLON TYPE LBRACE expression RBRACE
Rule 12    feature -> ID COLON TYPE ASSIGN expression
Rule 13    feature -> ID COLON TYPE
Rule 14    formal_params_list -> formal_param COMMA formal_params_list
Rule 15    formal_params_list -> formal_param
Rule 16    formal_param -> ID COLON TYPE
Rule 17    expression -> ID
Rule 18    expression -> INTEGER
Rule 19    expression -> BOOLEAN
Rule 20    expression -> STRING
Rule 21    expression -> LBRACE block_list RBRACE
Rule 22    block_list -> expression SEMICOLON block_list
Rule 23    block_list -> expression SEMICOLON
Rule 24    expression -> ID ASSIGN expression
Rule 25    expression -> expression DOT ID LPAREN arguments_list_opt RPAREN
Rule 26    arguments_list_opt -> arguments_list
Rule 27    arguments_list_opt -> empty
Rule 28    arguments_list -> expression COMMA arguments_list
Rule 29    arguments_list -> expression
Rule 30    expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
Rule 31    expression -> ID LPAREN arguments_list_opt RPAREN
Rule 32    expression -> expression PLUS expression
Rule 33    expression -> expression MINUS expression
Rule 34    expression -> expression MULTIPLY expression
Rule 35    expression -> expression DIVIDE expression
Rule 36    expression -> expression LT expression
Rule 37    expression -> expression LTEQ expression
Rule 38    expression -> expression EQ expression
Rule 39    expression -> LPAREN expression RPAREN
Rule 40    expression -> IF expression THEN expression ELSE expression FI
Rule 41    expression -> WHILE expression LOOP expression POOL
Rule 42    expression -> let_expression
Rule 43    let_expression -> LET formal_list IN expression
Rule 44    formal_list -> formal_list COMMA formal
Rule 45    formal_list -> formal
Rule 46    formal -> ID COLON TYPE
Rule 47    formal -> ID COLON TYPE ASSIGN expression
Rule 48    expression -> CASE expression OF actions_list ESAC
Rule 49    actions_list -> action actions_list
Rule 50    actions_list -> action
Rule 51    action -> ID COLON TYPE ARROW expression SEMICOLON
Rule 52    expression -> NEW TYPE
Rule 53    expression -> ISVOID expression
Rule 54    expression -> INT_COMP expression
Rule 55    expression -> NOT expression
Rule 56    empty -> <empty>

Terminals, with rules where they appear

ARROW                : 51
ASSIGN               : 12 24 47
AT                   : 30
BOOLEAN              : 19
CASE                 : 48
CLASS                : 4 5
COLON                : 10 11 12 13 16 46 47 51
COMMA                : 14 28 44
DIVIDE               : 35
DOT                  : 25 30
ELSE                 : 40
EQ                   : 38
ESAC                 : 48
FI                   : 40
ID                   : 10 11 12 13 16 17 24 25 30 31 46 47 51
IF                   : 40
IN                   : 43
INHERITS             : 5
INTEGER              : 18
INT_COMP             : 54
ISVOID               : 53
LBRACE               : 4 5 10 11 21
LET                  : 43
LOOP                 : 41
LPAREN               : 10 11 25 30 31 39
LT                   : 36
LTEQ                 : 37
MINUS                : 33
MULTIPLY             : 34
NEW                  : 52
NOT                  : 55
OF                   : 48
PLUS                 : 32
POOL                 : 41
RBRACE               : 4 5 10 11 21
RPAREN               : 10 11 25 30 31 39
SEMICOLON            : 2 3 8 22 23 51
STRING               : 20
THEN                 : 40
TYPE                 : 4 5 5 10 11 12 13 16 30 46 47 51 52
WHILE                : 41
error                : 

Nonterminals, with rules where they appear

action               : 49 50
actions_list         : 48 49
arguments_list       : 26 28
arguments_list_opt   : 25 30 31
block_list           : 21 22
class                : 2 3
class_list           : 1 2
empty                : 7 9 27
expression           : 10 11 12 22 23 24 25 28 29 30 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 40 40 40 41 41 43 47 48 51 53 54 55
feature              : 8
features_list        : 6 8
features_list_opt    : 4 5
formal               : 44 45
formal_list          : 43 44
formal_param         : 14 15
formal_params_list   : 10 14
let_expression       : 42
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . class_list
    (2) class_list -> . class SEMICOLON class_list
    (3) class_list -> . class SEMICOLON
    (4) class -> . CLASS TYPE LBRACE features_list_opt RBRACE
    (5) class -> . CLASS TYPE INHERITS TYPE LBRACE features_list_opt RBRACE

    CLASS           shift and go to state 4

    program                        shift and go to state 1
    class_list                     shift and go to state 2
    class                          shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> class_list .

    $end            reduce using rule 1 (program -> class_list .)


state 3

    (2) class_list -> class . SEMICOLON class_list
    (3) class_list -> class . SEMICOLON

    SEMICOLON       shift and go to state 5


state 4

    (4) class -> CLASS . TYPE LBRACE features_list_opt RBRACE
    (5) class -> CLASS . TYPE INHERITS TYPE LBRACE features_list_opt RBRACE

    TYPE            shift and go to state 6


state 5

    (2) class_list -> class SEMICOLON . class_list
    (3) class_list -> class SEMICOLON .
    (2) class_list -> . class SEMICOLON class_list
    (3) class_list -> . class SEMICOLON
    (4) class -> . CLASS TYPE LBRACE features_list_opt RBRACE
    (5) class -> . CLASS TYPE INHERITS TYPE LBRACE features_list_opt RBRACE

    $end            reduce using rule 3 (class_list -> class SEMICOLON .)
    CLASS           shift and go to state 4

    class                          shift and go to state 3
    class_list                     shift and go to state 7

state 6

    (4) class -> CLASS TYPE . LBRACE features_list_opt RBRACE
    (5) class -> CLASS TYPE . INHERITS TYPE LBRACE features_list_opt RBRACE

    LBRACE          shift and go to state 8
    INHERITS        shift and go to state 9


state 7

    (2) class_list -> class SEMICOLON class_list .

    $end            reduce using rule 2 (class_list -> class SEMICOLON class_list .)


state 8

    (4) class -> CLASS TYPE LBRACE . features_list_opt RBRACE
    (6) features_list_opt -> . features_list
    (7) features_list_opt -> . empty
    (8) features_list -> . feature SEMICOLON features_list
    (9) features_list -> . empty
    (56) empty -> .
    (10) feature -> . ID LPAREN formal_params_list RPAREN COLON TYPE LBRACE expression RBRACE
    (11) feature -> . ID LPAREN RPAREN COLON TYPE LBRACE expression RBRACE
    (12) feature -> . ID COLON TYPE ASSIGN expression
    (13) feature -> . ID COLON TYPE

    RBRACE          reduce using rule 56 (empty -> .)
    ID              shift and go to state 14

    features_list_opt              shift and go to state 10
    features_list                  shift and go to state 11
    empty                          shift and go to state 12
    feature                        shift and go to state 13

state 9

    (5) class -> CLASS TYPE INHERITS . TYPE LBRACE features_list_opt RBRACE

    TYPE            shift and go to state 15


state 10

    (4) class -> CLASS TYPE LBRACE features_list_opt . RBRACE

    RBRACE          shift and go to state 16


state 11

    (6) features_list_opt -> features_list .

    RBRACE          reduce using rule 6 (features_list_opt -> features_list .)


state 12

    (7) features_list_opt -> empty .
    (9) features_list -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 7 (features_list_opt -> empty .)
    RBRACE          reduce using rule 7 (features_list_opt -> empty .)

  ! RBRACE          [ reduce using rule 9 (features_list -> empty .) ]


state 13

    (8) features_list -> feature . SEMICOLON features_list

    SEMICOLON       shift and go to state 17


state 14

    (10) feature -> ID . LPAREN formal_params_list RPAREN COLON TYPE LBRACE expression RBRACE
    (11) feature -> ID . LPAREN RPAREN COLON TYPE LBRACE expression RBRACE
    (12) feature -> ID . COLON TYPE ASSIGN expression
    (13) feature -> ID . COLON TYPE

    LPAREN          shift and go to state 18
    COLON           shift and go to state 19


state 15

    (5) class -> CLASS TYPE INHERITS TYPE . LBRACE features_list_opt RBRACE

    LBRACE          shift and go to state 20


state 16

    (4) class -> CLASS TYPE LBRACE features_list_opt RBRACE .

    SEMICOLON       reduce using rule 4 (class -> CLASS TYPE LBRACE features_list_opt RBRACE .)


state 17

    (8) features_list -> feature SEMICOLON . features_list
    (8) features_list -> . feature SEMICOLON features_list
    (9) features_list -> . empty
    (10) feature -> . ID LPAREN formal_params_list RPAREN COLON TYPE LBRACE expression RBRACE
    (11) feature -> . ID LPAREN RPAREN COLON TYPE LBRACE expression RBRACE
    (12) feature -> . ID COLON TYPE ASSIGN expression
    (13) feature -> . ID COLON TYPE
    (56) empty -> .

    ID              shift and go to state 14
    RBRACE          reduce using rule 56 (empty -> .)

    feature                        shift and go to state 13
    features_list                  shift and go to state 21
    empty                          shift and go to state 22

state 18

    (10) feature -> ID LPAREN . formal_params_list RPAREN COLON TYPE LBRACE expression RBRACE
    (11) feature -> ID LPAREN . RPAREN COLON TYPE LBRACE expression RBRACE
    (14) formal_params_list -> . formal_param COMMA formal_params_list
    (15) formal_params_list -> . formal_param
    (16) formal_param -> . ID COLON TYPE

    RPAREN          shift and go to state 25
    ID              shift and go to state 23

    formal_params_list             shift and go to state 24
    formal_param                   shift and go to state 26

state 19

    (12) feature -> ID COLON . TYPE ASSIGN expression
    (13) feature -> ID COLON . TYPE

    TYPE            shift and go to state 27


state 20

    (5) class -> CLASS TYPE INHERITS TYPE LBRACE . features_list_opt RBRACE
    (6) features_list_opt -> . features_list
    (7) features_list_opt -> . empty
    (8) features_list -> . feature SEMICOLON features_list
    (9) features_list -> . empty
    (56) empty -> .
    (10) feature -> . ID LPAREN formal_params_list RPAREN COLON TYPE LBRACE expression RBRACE
    (11) feature -> . ID LPAREN RPAREN COLON TYPE LBRACE expression RBRACE
    (12) feature -> . ID COLON TYPE ASSIGN expression
    (13) feature -> . ID COLON TYPE

    RBRACE          reduce using rule 56 (empty -> .)
    ID              shift and go to state 14

    features_list_opt              shift and go to state 28
    features_list                  shift and go to state 11
    empty                          shift and go to state 12
    feature                        shift and go to state 13

state 21

    (8) features_list -> feature SEMICOLON features_list .

    RBRACE          reduce using rule 8 (features_list -> feature SEMICOLON features_list .)


state 22

    (9) features_list -> empty .

    RBRACE          reduce using rule 9 (features_list -> empty .)


state 23

    (16) formal_param -> ID . COLON TYPE

    COLON           shift and go to state 29


state 24

    (10) feature -> ID LPAREN formal_params_list . RPAREN COLON TYPE LBRACE expression RBRACE

    RPAREN          shift and go to state 30


state 25

    (11) feature -> ID LPAREN RPAREN . COLON TYPE LBRACE expression RBRACE

    COLON           shift and go to state 31


state 26

    (14) formal_params_list -> formal_param . COMMA formal_params_list
    (15) formal_params_list -> formal_param .

    COMMA           shift and go to state 32
    RPAREN          reduce using rule 15 (formal_params_list -> formal_param .)


state 27

    (12) feature -> ID COLON TYPE . ASSIGN expression
    (13) feature -> ID COLON TYPE .

    ASSIGN          shift and go to state 33
    SEMICOLON       reduce using rule 13 (feature -> ID COLON TYPE .)


state 28

    (5) class -> CLASS TYPE INHERITS TYPE LBRACE features_list_opt . RBRACE

    RBRACE          shift and go to state 34


state 29

    (16) formal_param -> ID COLON . TYPE

    TYPE            shift and go to state 35


state 30

    (10) feature -> ID LPAREN formal_params_list RPAREN . COLON TYPE LBRACE expression RBRACE

    COLON           shift and go to state 36


state 31

    (11) feature -> ID LPAREN RPAREN COLON . TYPE LBRACE expression RBRACE

    TYPE            shift and go to state 37


state 32

    (14) formal_params_list -> formal_param COMMA . formal_params_list
    (14) formal_params_list -> . formal_param COMMA formal_params_list
    (15) formal_params_list -> . formal_param
    (16) formal_param -> . ID COLON TYPE

    ID              shift and go to state 23

    formal_param                   shift and go to state 26
    formal_params_list             shift and go to state 38

state 33

    (12) feature -> ID COLON TYPE ASSIGN . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 40
    let_expression                 shift and go to state 48

state 34

    (5) class -> CLASS TYPE INHERITS TYPE LBRACE features_list_opt RBRACE .

    SEMICOLON       reduce using rule 5 (class -> CLASS TYPE INHERITS TYPE LBRACE features_list_opt RBRACE .)


state 35

    (16) formal_param -> ID COLON TYPE .

    COMMA           reduce using rule 16 (formal_param -> ID COLON TYPE .)
    RPAREN          reduce using rule 16 (formal_param -> ID COLON TYPE .)


state 36

    (10) feature -> ID LPAREN formal_params_list RPAREN COLON . TYPE LBRACE expression RBRACE

    TYPE            shift and go to state 55


state 37

    (11) feature -> ID LPAREN RPAREN COLON TYPE . LBRACE expression RBRACE

    LBRACE          shift and go to state 56


state 38

    (14) formal_params_list -> formal_param COMMA formal_params_list .

    RPAREN          reduce using rule 14 (formal_params_list -> formal_param COMMA formal_params_list .)


state 39

    (17) expression -> ID .
    (24) expression -> ID . ASSIGN expression
    (31) expression -> ID . LPAREN arguments_list_opt RPAREN

    DOT             reduce using rule 17 (expression -> ID .)
    AT              reduce using rule 17 (expression -> ID .)
    PLUS            reduce using rule 17 (expression -> ID .)
    MINUS           reduce using rule 17 (expression -> ID .)
    MULTIPLY        reduce using rule 17 (expression -> ID .)
    DIVIDE          reduce using rule 17 (expression -> ID .)
    LT              reduce using rule 17 (expression -> ID .)
    LTEQ            reduce using rule 17 (expression -> ID .)
    EQ              reduce using rule 17 (expression -> ID .)
    SEMICOLON       reduce using rule 17 (expression -> ID .)
    RPAREN          reduce using rule 17 (expression -> ID .)
    THEN            reduce using rule 17 (expression -> ID .)
    LOOP            reduce using rule 17 (expression -> ID .)
    OF              reduce using rule 17 (expression -> ID .)
    RBRACE          reduce using rule 17 (expression -> ID .)
    COMMA           reduce using rule 17 (expression -> ID .)
    ELSE            reduce using rule 17 (expression -> ID .)
    POOL            reduce using rule 17 (expression -> ID .)
    FI              reduce using rule 17 (expression -> ID .)
    IN              reduce using rule 17 (expression -> ID .)
    ASSIGN          shift and go to state 57
    LPAREN          shift and go to state 58


state 40

    (12) feature -> ID COLON TYPE ASSIGN expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    SEMICOLON       reduce using rule 12 (feature -> ID COLON TYPE ASSIGN expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 41

    (18) expression -> INTEGER .

    DOT             reduce using rule 18 (expression -> INTEGER .)
    AT              reduce using rule 18 (expression -> INTEGER .)
    PLUS            reduce using rule 18 (expression -> INTEGER .)
    MINUS           reduce using rule 18 (expression -> INTEGER .)
    MULTIPLY        reduce using rule 18 (expression -> INTEGER .)
    DIVIDE          reduce using rule 18 (expression -> INTEGER .)
    LT              reduce using rule 18 (expression -> INTEGER .)
    LTEQ            reduce using rule 18 (expression -> INTEGER .)
    EQ              reduce using rule 18 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 18 (expression -> INTEGER .)
    RPAREN          reduce using rule 18 (expression -> INTEGER .)
    THEN            reduce using rule 18 (expression -> INTEGER .)
    LOOP            reduce using rule 18 (expression -> INTEGER .)
    OF              reduce using rule 18 (expression -> INTEGER .)
    RBRACE          reduce using rule 18 (expression -> INTEGER .)
    COMMA           reduce using rule 18 (expression -> INTEGER .)
    ELSE            reduce using rule 18 (expression -> INTEGER .)
    POOL            reduce using rule 18 (expression -> INTEGER .)
    FI              reduce using rule 18 (expression -> INTEGER .)
    IN              reduce using rule 18 (expression -> INTEGER .)


state 42

    (19) expression -> BOOLEAN .

    DOT             reduce using rule 19 (expression -> BOOLEAN .)
    AT              reduce using rule 19 (expression -> BOOLEAN .)
    PLUS            reduce using rule 19 (expression -> BOOLEAN .)
    MINUS           reduce using rule 19 (expression -> BOOLEAN .)
    MULTIPLY        reduce using rule 19 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 19 (expression -> BOOLEAN .)
    LT              reduce using rule 19 (expression -> BOOLEAN .)
    LTEQ            reduce using rule 19 (expression -> BOOLEAN .)
    EQ              reduce using rule 19 (expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 19 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 19 (expression -> BOOLEAN .)
    THEN            reduce using rule 19 (expression -> BOOLEAN .)
    LOOP            reduce using rule 19 (expression -> BOOLEAN .)
    OF              reduce using rule 19 (expression -> BOOLEAN .)
    RBRACE          reduce using rule 19 (expression -> BOOLEAN .)
    COMMA           reduce using rule 19 (expression -> BOOLEAN .)
    ELSE            reduce using rule 19 (expression -> BOOLEAN .)
    POOL            reduce using rule 19 (expression -> BOOLEAN .)
    FI              reduce using rule 19 (expression -> BOOLEAN .)
    IN              reduce using rule 19 (expression -> BOOLEAN .)


state 43

    (20) expression -> STRING .

    DOT             reduce using rule 20 (expression -> STRING .)
    AT              reduce using rule 20 (expression -> STRING .)
    PLUS            reduce using rule 20 (expression -> STRING .)
    MINUS           reduce using rule 20 (expression -> STRING .)
    MULTIPLY        reduce using rule 20 (expression -> STRING .)
    DIVIDE          reduce using rule 20 (expression -> STRING .)
    LT              reduce using rule 20 (expression -> STRING .)
    LTEQ            reduce using rule 20 (expression -> STRING .)
    EQ              reduce using rule 20 (expression -> STRING .)
    SEMICOLON       reduce using rule 20 (expression -> STRING .)
    RPAREN          reduce using rule 20 (expression -> STRING .)
    THEN            reduce using rule 20 (expression -> STRING .)
    LOOP            reduce using rule 20 (expression -> STRING .)
    OF              reduce using rule 20 (expression -> STRING .)
    RBRACE          reduce using rule 20 (expression -> STRING .)
    COMMA           reduce using rule 20 (expression -> STRING .)
    ELSE            reduce using rule 20 (expression -> STRING .)
    POOL            reduce using rule 20 (expression -> STRING .)
    FI              reduce using rule 20 (expression -> STRING .)
    IN              reduce using rule 20 (expression -> STRING .)


state 44

    (21) expression -> LBRACE . block_list RBRACE
    (22) block_list -> . expression SEMICOLON block_list
    (23) block_list -> . expression SEMICOLON
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    block_list                     shift and go to state 68
    expression                     shift and go to state 69
    let_expression                 shift and go to state 48

state 45

    (39) expression -> LPAREN . expression RPAREN
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 70
    let_expression                 shift and go to state 48

state 46

    (40) expression -> IF . expression THEN expression ELSE expression FI
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 71
    let_expression                 shift and go to state 48

state 47

    (41) expression -> WHILE . expression LOOP expression POOL
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 72
    let_expression                 shift and go to state 48

state 48

    (42) expression -> let_expression .

    DOT             reduce using rule 42 (expression -> let_expression .)
    AT              reduce using rule 42 (expression -> let_expression .)
    PLUS            reduce using rule 42 (expression -> let_expression .)
    MINUS           reduce using rule 42 (expression -> let_expression .)
    MULTIPLY        reduce using rule 42 (expression -> let_expression .)
    DIVIDE          reduce using rule 42 (expression -> let_expression .)
    LT              reduce using rule 42 (expression -> let_expression .)
    LTEQ            reduce using rule 42 (expression -> let_expression .)
    EQ              reduce using rule 42 (expression -> let_expression .)
    SEMICOLON       reduce using rule 42 (expression -> let_expression .)
    RPAREN          reduce using rule 42 (expression -> let_expression .)
    THEN            reduce using rule 42 (expression -> let_expression .)
    LOOP            reduce using rule 42 (expression -> let_expression .)
    OF              reduce using rule 42 (expression -> let_expression .)
    RBRACE          reduce using rule 42 (expression -> let_expression .)
    COMMA           reduce using rule 42 (expression -> let_expression .)
    ELSE            reduce using rule 42 (expression -> let_expression .)
    POOL            reduce using rule 42 (expression -> let_expression .)
    FI              reduce using rule 42 (expression -> let_expression .)
    IN              reduce using rule 42 (expression -> let_expression .)


state 49

    (48) expression -> CASE . expression OF actions_list ESAC
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 73
    let_expression                 shift and go to state 48

state 50

    (52) expression -> NEW . TYPE

    TYPE            shift and go to state 74


state 51

    (53) expression -> ISVOID . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 75
    let_expression                 shift and go to state 48

state 52

    (54) expression -> INT_COMP . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 76
    let_expression                 shift and go to state 48

state 53

    (55) expression -> NOT . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 77
    let_expression                 shift and go to state 48

state 54

    (43) let_expression -> LET . formal_list IN expression
    (44) formal_list -> . formal_list COMMA formal
    (45) formal_list -> . formal
    (46) formal -> . ID COLON TYPE
    (47) formal -> . ID COLON TYPE ASSIGN expression

    ID              shift and go to state 80

    formal_list                    shift and go to state 78
    formal                         shift and go to state 79

state 55

    (10) feature -> ID LPAREN formal_params_list RPAREN COLON TYPE . LBRACE expression RBRACE

    LBRACE          shift and go to state 81


state 56

    (11) feature -> ID LPAREN RPAREN COLON TYPE LBRACE . expression RBRACE
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 82
    let_expression                 shift and go to state 48

state 57

    (24) expression -> ID ASSIGN . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 83
    let_expression                 shift and go to state 48

state 58

    (31) expression -> ID LPAREN . arguments_list_opt RPAREN
    (26) arguments_list_opt -> . arguments_list
    (27) arguments_list_opt -> . empty
    (28) arguments_list -> . expression COMMA arguments_list
    (29) arguments_list -> . expression
    (56) empty -> .
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    RPAREN          reduce using rule 56 (empty -> .)
    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    arguments_list_opt             shift and go to state 84
    arguments_list                 shift and go to state 85
    empty                          shift and go to state 86
    expression                     shift and go to state 87
    let_expression                 shift and go to state 48

state 59

    (25) expression -> expression DOT . ID LPAREN arguments_list_opt RPAREN

    ID              shift and go to state 88


state 60

    (30) expression -> expression AT . TYPE DOT ID LPAREN arguments_list_opt RPAREN

    TYPE            shift and go to state 89


state 61

    (32) expression -> expression PLUS . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 90
    let_expression                 shift and go to state 48

state 62

    (33) expression -> expression MINUS . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 91
    let_expression                 shift and go to state 48

state 63

    (34) expression -> expression MULTIPLY . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 92
    let_expression                 shift and go to state 48

state 64

    (35) expression -> expression DIVIDE . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 93
    let_expression                 shift and go to state 48

state 65

    (36) expression -> expression LT . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 94
    let_expression                 shift and go to state 48

state 66

    (37) expression -> expression LTEQ . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 95
    let_expression                 shift and go to state 48

state 67

    (38) expression -> expression EQ . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 96
    let_expression                 shift and go to state 48

state 68

    (21) expression -> LBRACE block_list . RBRACE

    RBRACE          shift and go to state 97


state 69

    (22) block_list -> expression . SEMICOLON block_list
    (23) block_list -> expression . SEMICOLON
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    SEMICOLON       shift and go to state 98
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 70

    (39) expression -> LPAREN expression . RPAREN
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    RPAREN          shift and go to state 99
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 71

    (40) expression -> IF expression . THEN expression ELSE expression FI
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    THEN            shift and go to state 100
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 72

    (41) expression -> WHILE expression . LOOP expression POOL
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    LOOP            shift and go to state 101
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 73

    (48) expression -> CASE expression . OF actions_list ESAC
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    OF              shift and go to state 102
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 74

    (52) expression -> NEW TYPE .

    DOT             reduce using rule 52 (expression -> NEW TYPE .)
    AT              reduce using rule 52 (expression -> NEW TYPE .)
    PLUS            reduce using rule 52 (expression -> NEW TYPE .)
    MINUS           reduce using rule 52 (expression -> NEW TYPE .)
    MULTIPLY        reduce using rule 52 (expression -> NEW TYPE .)
    DIVIDE          reduce using rule 52 (expression -> NEW TYPE .)
    LT              reduce using rule 52 (expression -> NEW TYPE .)
    LTEQ            reduce using rule 52 (expression -> NEW TYPE .)
    EQ              reduce using rule 52 (expression -> NEW TYPE .)
    SEMICOLON       reduce using rule 52 (expression -> NEW TYPE .)
    RPAREN          reduce using rule 52 (expression -> NEW TYPE .)
    THEN            reduce using rule 52 (expression -> NEW TYPE .)
    LOOP            reduce using rule 52 (expression -> NEW TYPE .)
    OF              reduce using rule 52 (expression -> NEW TYPE .)
    RBRACE          reduce using rule 52 (expression -> NEW TYPE .)
    COMMA           reduce using rule 52 (expression -> NEW TYPE .)
    ELSE            reduce using rule 52 (expression -> NEW TYPE .)
    POOL            reduce using rule 52 (expression -> NEW TYPE .)
    FI              reduce using rule 52 (expression -> NEW TYPE .)
    IN              reduce using rule 52 (expression -> NEW TYPE .)


state 75

    (53) expression -> ISVOID expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    PLUS            reduce using rule 53 (expression -> ISVOID expression .)
    MINUS           reduce using rule 53 (expression -> ISVOID expression .)
    MULTIPLY        reduce using rule 53 (expression -> ISVOID expression .)
    DIVIDE          reduce using rule 53 (expression -> ISVOID expression .)
    LT              reduce using rule 53 (expression -> ISVOID expression .)
    LTEQ            reduce using rule 53 (expression -> ISVOID expression .)
    EQ              reduce using rule 53 (expression -> ISVOID expression .)
    SEMICOLON       reduce using rule 53 (expression -> ISVOID expression .)
    RPAREN          reduce using rule 53 (expression -> ISVOID expression .)
    THEN            reduce using rule 53 (expression -> ISVOID expression .)
    LOOP            reduce using rule 53 (expression -> ISVOID expression .)
    OF              reduce using rule 53 (expression -> ISVOID expression .)
    RBRACE          reduce using rule 53 (expression -> ISVOID expression .)
    COMMA           reduce using rule 53 (expression -> ISVOID expression .)
    ELSE            reduce using rule 53 (expression -> ISVOID expression .)
    POOL            reduce using rule 53 (expression -> ISVOID expression .)
    FI              reduce using rule 53 (expression -> ISVOID expression .)
    IN              reduce using rule 53 (expression -> ISVOID expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60

  ! DOT             [ reduce using rule 53 (expression -> ISVOID expression .) ]
  ! AT              [ reduce using rule 53 (expression -> ISVOID expression .) ]
  ! PLUS            [ shift and go to state 61 ]
  ! MINUS           [ shift and go to state 62 ]
  ! MULTIPLY        [ shift and go to state 63 ]
  ! DIVIDE          [ shift and go to state 64 ]
  ! LT              [ shift and go to state 65 ]
  ! LTEQ            [ shift and go to state 66 ]
  ! EQ              [ shift and go to state 67 ]


state 76

    (54) expression -> INT_COMP expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    PLUS            reduce using rule 54 (expression -> INT_COMP expression .)
    MINUS           reduce using rule 54 (expression -> INT_COMP expression .)
    MULTIPLY        reduce using rule 54 (expression -> INT_COMP expression .)
    DIVIDE          reduce using rule 54 (expression -> INT_COMP expression .)
    LT              reduce using rule 54 (expression -> INT_COMP expression .)
    LTEQ            reduce using rule 54 (expression -> INT_COMP expression .)
    EQ              reduce using rule 54 (expression -> INT_COMP expression .)
    SEMICOLON       reduce using rule 54 (expression -> INT_COMP expression .)
    RPAREN          reduce using rule 54 (expression -> INT_COMP expression .)
    THEN            reduce using rule 54 (expression -> INT_COMP expression .)
    LOOP            reduce using rule 54 (expression -> INT_COMP expression .)
    OF              reduce using rule 54 (expression -> INT_COMP expression .)
    RBRACE          reduce using rule 54 (expression -> INT_COMP expression .)
    COMMA           reduce using rule 54 (expression -> INT_COMP expression .)
    ELSE            reduce using rule 54 (expression -> INT_COMP expression .)
    POOL            reduce using rule 54 (expression -> INT_COMP expression .)
    FI              reduce using rule 54 (expression -> INT_COMP expression .)
    IN              reduce using rule 54 (expression -> INT_COMP expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60

  ! DOT             [ reduce using rule 54 (expression -> INT_COMP expression .) ]
  ! AT              [ reduce using rule 54 (expression -> INT_COMP expression .) ]
  ! PLUS            [ shift and go to state 61 ]
  ! MINUS           [ shift and go to state 62 ]
  ! MULTIPLY        [ shift and go to state 63 ]
  ! DIVIDE          [ shift and go to state 64 ]
  ! LT              [ shift and go to state 65 ]
  ! LTEQ            [ shift and go to state 66 ]
  ! EQ              [ shift and go to state 67 ]


state 77

    (55) expression -> NOT expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    SEMICOLON       reduce using rule 55 (expression -> NOT expression .)
    RPAREN          reduce using rule 55 (expression -> NOT expression .)
    THEN            reduce using rule 55 (expression -> NOT expression .)
    LOOP            reduce using rule 55 (expression -> NOT expression .)
    OF              reduce using rule 55 (expression -> NOT expression .)
    RBRACE          reduce using rule 55 (expression -> NOT expression .)
    COMMA           reduce using rule 55 (expression -> NOT expression .)
    ELSE            reduce using rule 55 (expression -> NOT expression .)
    POOL            reduce using rule 55 (expression -> NOT expression .)
    FI              reduce using rule 55 (expression -> NOT expression .)
    IN              reduce using rule 55 (expression -> NOT expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67

  ! DOT             [ reduce using rule 55 (expression -> NOT expression .) ]
  ! AT              [ reduce using rule 55 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 55 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> NOT expression .) ]
  ! MULTIPLY        [ reduce using rule 55 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 55 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 55 (expression -> NOT expression .) ]
  ! LTEQ            [ reduce using rule 55 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 55 (expression -> NOT expression .) ]


state 78

    (43) let_expression -> LET formal_list . IN expression
    (44) formal_list -> formal_list . COMMA formal

    IN              shift and go to state 103
    COMMA           shift and go to state 104


state 79

    (45) formal_list -> formal .

    IN              reduce using rule 45 (formal_list -> formal .)
    COMMA           reduce using rule 45 (formal_list -> formal .)


state 80

    (46) formal -> ID . COLON TYPE
    (47) formal -> ID . COLON TYPE ASSIGN expression

    COLON           shift and go to state 105


state 81

    (10) feature -> ID LPAREN formal_params_list RPAREN COLON TYPE LBRACE . expression RBRACE
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 106
    let_expression                 shift and go to state 48

state 82

    (11) feature -> ID LPAREN RPAREN COLON TYPE LBRACE expression . RBRACE
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    RBRACE          shift and go to state 107
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 83

    (24) expression -> ID ASSIGN expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    SEMICOLON       reduce using rule 24 (expression -> ID ASSIGN expression .)
    RPAREN          reduce using rule 24 (expression -> ID ASSIGN expression .)
    THEN            reduce using rule 24 (expression -> ID ASSIGN expression .)
    LOOP            reduce using rule 24 (expression -> ID ASSIGN expression .)
    OF              reduce using rule 24 (expression -> ID ASSIGN expression .)
    RBRACE          reduce using rule 24 (expression -> ID ASSIGN expression .)
    COMMA           reduce using rule 24 (expression -> ID ASSIGN expression .)
    ELSE            reduce using rule 24 (expression -> ID ASSIGN expression .)
    POOL            reduce using rule 24 (expression -> ID ASSIGN expression .)
    FI              reduce using rule 24 (expression -> ID ASSIGN expression .)
    IN              reduce using rule 24 (expression -> ID ASSIGN expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67

  ! DOT             [ reduce using rule 24 (expression -> ID ASSIGN expression .) ]
  ! AT              [ reduce using rule 24 (expression -> ID ASSIGN expression .) ]
  ! PLUS            [ reduce using rule 24 (expression -> ID ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> ID ASSIGN expression .) ]
  ! MULTIPLY        [ reduce using rule 24 (expression -> ID ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> ID ASSIGN expression .) ]
  ! LT              [ reduce using rule 24 (expression -> ID ASSIGN expression .) ]
  ! LTEQ            [ reduce using rule 24 (expression -> ID ASSIGN expression .) ]
  ! EQ              [ reduce using rule 24 (expression -> ID ASSIGN expression .) ]


state 84

    (31) expression -> ID LPAREN arguments_list_opt . RPAREN

    RPAREN          shift and go to state 108


state 85

    (26) arguments_list_opt -> arguments_list .

    RPAREN          reduce using rule 26 (arguments_list_opt -> arguments_list .)


state 86

    (27) arguments_list_opt -> empty .

    RPAREN          reduce using rule 27 (arguments_list_opt -> empty .)


state 87

    (28) arguments_list -> expression . COMMA arguments_list
    (29) arguments_list -> expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    COMMA           shift and go to state 109
    RPAREN          reduce using rule 29 (arguments_list -> expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 88

    (25) expression -> expression DOT ID . LPAREN arguments_list_opt RPAREN

    LPAREN          shift and go to state 110


state 89

    (30) expression -> expression AT TYPE . DOT ID LPAREN arguments_list_opt RPAREN

    DOT             shift and go to state 111


state 90

    (32) expression -> expression PLUS expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    PLUS            reduce using rule 32 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 32 (expression -> expression PLUS expression .)
    LT              reduce using rule 32 (expression -> expression PLUS expression .)
    LTEQ            reduce using rule 32 (expression -> expression PLUS expression .)
    EQ              reduce using rule 32 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 32 (expression -> expression PLUS expression .)
    THEN            reduce using rule 32 (expression -> expression PLUS expression .)
    LOOP            reduce using rule 32 (expression -> expression PLUS expression .)
    OF              reduce using rule 32 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 32 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 32 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 32 (expression -> expression PLUS expression .)
    POOL            reduce using rule 32 (expression -> expression PLUS expression .)
    FI              reduce using rule 32 (expression -> expression PLUS expression .)
    IN              reduce using rule 32 (expression -> expression PLUS expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64

  ! DOT             [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! AT              [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! MULTIPLY        [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 61 ]
  ! MINUS           [ shift and go to state 62 ]
  ! LT              [ shift and go to state 65 ]
  ! LTEQ            [ shift and go to state 66 ]
  ! EQ              [ shift and go to state 67 ]


state 91

    (33) expression -> expression MINUS expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    PLUS            reduce using rule 33 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 33 (expression -> expression MINUS expression .)
    LT              reduce using rule 33 (expression -> expression MINUS expression .)
    LTEQ            reduce using rule 33 (expression -> expression MINUS expression .)
    EQ              reduce using rule 33 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 33 (expression -> expression MINUS expression .)
    THEN            reduce using rule 33 (expression -> expression MINUS expression .)
    LOOP            reduce using rule 33 (expression -> expression MINUS expression .)
    OF              reduce using rule 33 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 33 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 33 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 33 (expression -> expression MINUS expression .)
    POOL            reduce using rule 33 (expression -> expression MINUS expression .)
    FI              reduce using rule 33 (expression -> expression MINUS expression .)
    IN              reduce using rule 33 (expression -> expression MINUS expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64

  ! DOT             [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! AT              [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 61 ]
  ! MINUS           [ shift and go to state 62 ]
  ! LT              [ shift and go to state 65 ]
  ! LTEQ            [ shift and go to state 66 ]
  ! EQ              [ shift and go to state 67 ]


state 92

    (34) expression -> expression MULTIPLY expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    PLUS            reduce using rule 34 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 34 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 34 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 34 (expression -> expression MULTIPLY expression .)
    LT              reduce using rule 34 (expression -> expression MULTIPLY expression .)
    LTEQ            reduce using rule 34 (expression -> expression MULTIPLY expression .)
    EQ              reduce using rule 34 (expression -> expression MULTIPLY expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 34 (expression -> expression MULTIPLY expression .)
    THEN            reduce using rule 34 (expression -> expression MULTIPLY expression .)
    LOOP            reduce using rule 34 (expression -> expression MULTIPLY expression .)
    OF              reduce using rule 34 (expression -> expression MULTIPLY expression .)
    RBRACE          reduce using rule 34 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 34 (expression -> expression MULTIPLY expression .)
    ELSE            reduce using rule 34 (expression -> expression MULTIPLY expression .)
    POOL            reduce using rule 34 (expression -> expression MULTIPLY expression .)
    FI              reduce using rule 34 (expression -> expression MULTIPLY expression .)
    IN              reduce using rule 34 (expression -> expression MULTIPLY expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60

  ! DOT             [ reduce using rule 34 (expression -> expression MULTIPLY expression .) ]
  ! AT              [ reduce using rule 34 (expression -> expression MULTIPLY expression .) ]
  ! PLUS            [ shift and go to state 61 ]
  ! MINUS           [ shift and go to state 62 ]
  ! MULTIPLY        [ shift and go to state 63 ]
  ! DIVIDE          [ shift and go to state 64 ]
  ! LT              [ shift and go to state 65 ]
  ! LTEQ            [ shift and go to state 66 ]
  ! EQ              [ shift and go to state 67 ]


state 93

    (35) expression -> expression DIVIDE expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    PLUS            reduce using rule 35 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 35 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 35 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 35 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 35 (expression -> expression DIVIDE expression .)
    LTEQ            reduce using rule 35 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 35 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 35 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 35 (expression -> expression DIVIDE expression .)
    LOOP            reduce using rule 35 (expression -> expression DIVIDE expression .)
    OF              reduce using rule 35 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 35 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 35 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 35 (expression -> expression DIVIDE expression .)
    POOL            reduce using rule 35 (expression -> expression DIVIDE expression .)
    FI              reduce using rule 35 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 35 (expression -> expression DIVIDE expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60

  ! DOT             [ reduce using rule 35 (expression -> expression DIVIDE expression .) ]
  ! AT              [ reduce using rule 35 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 61 ]
  ! MINUS           [ shift and go to state 62 ]
  ! MULTIPLY        [ shift and go to state 63 ]
  ! DIVIDE          [ shift and go to state 64 ]
  ! LT              [ shift and go to state 65 ]
  ! LTEQ            [ shift and go to state 66 ]
  ! EQ              [ shift and go to state 67 ]


state 94

    (36) expression -> expression LT expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    LT              reduce using rule 36 (expression -> expression LT expression .)
    LTEQ            reduce using rule 36 (expression -> expression LT expression .)
    EQ              reduce using rule 36 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression LT expression .)
    RPAREN          reduce using rule 36 (expression -> expression LT expression .)
    THEN            reduce using rule 36 (expression -> expression LT expression .)
    LOOP            reduce using rule 36 (expression -> expression LT expression .)
    OF              reduce using rule 36 (expression -> expression LT expression .)
    RBRACE          reduce using rule 36 (expression -> expression LT expression .)
    COMMA           reduce using rule 36 (expression -> expression LT expression .)
    ELSE            reduce using rule 36 (expression -> expression LT expression .)
    POOL            reduce using rule 36 (expression -> expression LT expression .)
    FI              reduce using rule 36 (expression -> expression LT expression .)
    IN              reduce using rule 36 (expression -> expression LT expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64

  ! DOT             [ reduce using rule 36 (expression -> expression LT expression .) ]
  ! AT              [ reduce using rule 36 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression LT expression .) ]
  ! MULTIPLY        [ reduce using rule 36 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 65 ]
  ! LTEQ            [ shift and go to state 66 ]
  ! EQ              [ shift and go to state 67 ]


state 95

    (37) expression -> expression LTEQ expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    LT              reduce using rule 37 (expression -> expression LTEQ expression .)
    LTEQ            reduce using rule 37 (expression -> expression LTEQ expression .)
    EQ              reduce using rule 37 (expression -> expression LTEQ expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression LTEQ expression .)
    RPAREN          reduce using rule 37 (expression -> expression LTEQ expression .)
    THEN            reduce using rule 37 (expression -> expression LTEQ expression .)
    LOOP            reduce using rule 37 (expression -> expression LTEQ expression .)
    OF              reduce using rule 37 (expression -> expression LTEQ expression .)
    RBRACE          reduce using rule 37 (expression -> expression LTEQ expression .)
    COMMA           reduce using rule 37 (expression -> expression LTEQ expression .)
    ELSE            reduce using rule 37 (expression -> expression LTEQ expression .)
    POOL            reduce using rule 37 (expression -> expression LTEQ expression .)
    FI              reduce using rule 37 (expression -> expression LTEQ expression .)
    IN              reduce using rule 37 (expression -> expression LTEQ expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64

  ! DOT             [ reduce using rule 37 (expression -> expression LTEQ expression .) ]
  ! AT              [ reduce using rule 37 (expression -> expression LTEQ expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression LTEQ expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression LTEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 37 (expression -> expression LTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression LTEQ expression .) ]
  ! LT              [ shift and go to state 65 ]
  ! LTEQ            [ shift and go to state 66 ]
  ! EQ              [ shift and go to state 67 ]


state 96

    (38) expression -> expression EQ expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    LT              reduce using rule 38 (expression -> expression EQ expression .)
    LTEQ            reduce using rule 38 (expression -> expression EQ expression .)
    EQ              reduce using rule 38 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 38 (expression -> expression EQ expression .)
    THEN            reduce using rule 38 (expression -> expression EQ expression .)
    LOOP            reduce using rule 38 (expression -> expression EQ expression .)
    OF              reduce using rule 38 (expression -> expression EQ expression .)
    RBRACE          reduce using rule 38 (expression -> expression EQ expression .)
    COMMA           reduce using rule 38 (expression -> expression EQ expression .)
    ELSE            reduce using rule 38 (expression -> expression EQ expression .)
    POOL            reduce using rule 38 (expression -> expression EQ expression .)
    FI              reduce using rule 38 (expression -> expression EQ expression .)
    IN              reduce using rule 38 (expression -> expression EQ expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64

  ! DOT             [ reduce using rule 38 (expression -> expression EQ expression .) ]
  ! AT              [ reduce using rule 38 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 38 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression EQ expression .) ]
  ! LT              [ shift and go to state 65 ]
  ! LTEQ            [ shift and go to state 66 ]
  ! EQ              [ shift and go to state 67 ]


state 97

    (21) expression -> LBRACE block_list RBRACE .

    DOT             reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    AT              reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    PLUS            reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    MINUS           reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    MULTIPLY        reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    DIVIDE          reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    LT              reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    LTEQ            reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    EQ              reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    SEMICOLON       reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    RPAREN          reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    THEN            reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    LOOP            reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    OF              reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    RBRACE          reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    COMMA           reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    ELSE            reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    POOL            reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    FI              reduce using rule 21 (expression -> LBRACE block_list RBRACE .)
    IN              reduce using rule 21 (expression -> LBRACE block_list RBRACE .)


state 98

    (22) block_list -> expression SEMICOLON . block_list
    (23) block_list -> expression SEMICOLON .
    (22) block_list -> . expression SEMICOLON block_list
    (23) block_list -> . expression SEMICOLON
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    RBRACE          reduce using rule 23 (block_list -> expression SEMICOLON .)
    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 69
    block_list                     shift and go to state 112
    let_expression                 shift and go to state 48

state 99

    (39) expression -> LPAREN expression RPAREN .

    DOT             reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    AT              reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    LTEQ            reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    LOOP            reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    OF              reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    POOL            reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    FI              reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 39 (expression -> LPAREN expression RPAREN .)


state 100

    (40) expression -> IF expression THEN . expression ELSE expression FI
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 113
    let_expression                 shift and go to state 48

state 101

    (41) expression -> WHILE expression LOOP . expression POOL
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 114
    let_expression                 shift and go to state 48

state 102

    (48) expression -> CASE expression OF . actions_list ESAC
    (49) actions_list -> . action actions_list
    (50) actions_list -> . action
    (51) action -> . ID COLON TYPE ARROW expression SEMICOLON

    ID              shift and go to state 117

    actions_list                   shift and go to state 115
    action                         shift and go to state 116

state 103

    (43) let_expression -> LET formal_list IN . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 118
    let_expression                 shift and go to state 48

state 104

    (44) formal_list -> formal_list COMMA . formal
    (46) formal -> . ID COLON TYPE
    (47) formal -> . ID COLON TYPE ASSIGN expression

    ID              shift and go to state 80

    formal                         shift and go to state 119

state 105

    (46) formal -> ID COLON . TYPE
    (47) formal -> ID COLON . TYPE ASSIGN expression

    TYPE            shift and go to state 120


state 106

    (10) feature -> ID LPAREN formal_params_list RPAREN COLON TYPE LBRACE expression . RBRACE
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    RBRACE          shift and go to state 121
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 107

    (11) feature -> ID LPAREN RPAREN COLON TYPE LBRACE expression RBRACE .

    SEMICOLON       reduce using rule 11 (feature -> ID LPAREN RPAREN COLON TYPE LBRACE expression RBRACE .)


state 108

    (31) expression -> ID LPAREN arguments_list_opt RPAREN .

    DOT             reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    AT              reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    PLUS            reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    MINUS           reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    MULTIPLY        reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    DIVIDE          reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    LT              reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    LTEQ            reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    EQ              reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    SEMICOLON       reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    RPAREN          reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    THEN            reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    LOOP            reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    OF              reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    RBRACE          reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    COMMA           reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    ELSE            reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    POOL            reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    FI              reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)
    IN              reduce using rule 31 (expression -> ID LPAREN arguments_list_opt RPAREN .)


state 109

    (28) arguments_list -> expression COMMA . arguments_list
    (28) arguments_list -> . expression COMMA arguments_list
    (29) arguments_list -> . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 87
    arguments_list                 shift and go to state 122
    let_expression                 shift and go to state 48

state 110

    (25) expression -> expression DOT ID LPAREN . arguments_list_opt RPAREN
    (26) arguments_list_opt -> . arguments_list
    (27) arguments_list_opt -> . empty
    (28) arguments_list -> . expression COMMA arguments_list
    (29) arguments_list -> . expression
    (56) empty -> .
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    RPAREN          reduce using rule 56 (empty -> .)
    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 87
    arguments_list_opt             shift and go to state 123
    arguments_list                 shift and go to state 85
    empty                          shift and go to state 86
    let_expression                 shift and go to state 48

state 111

    (30) expression -> expression AT TYPE DOT . ID LPAREN arguments_list_opt RPAREN

    ID              shift and go to state 124


state 112

    (22) block_list -> expression SEMICOLON block_list .

    RBRACE          reduce using rule 22 (block_list -> expression SEMICOLON block_list .)


state 113

    (40) expression -> IF expression THEN expression . ELSE expression FI
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    ELSE            shift and go to state 125
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 114

    (41) expression -> WHILE expression LOOP expression . POOL
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    POOL            shift and go to state 126
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 115

    (48) expression -> CASE expression OF actions_list . ESAC

    ESAC            shift and go to state 127


state 116

    (49) actions_list -> action . actions_list
    (50) actions_list -> action .
    (49) actions_list -> . action actions_list
    (50) actions_list -> . action
    (51) action -> . ID COLON TYPE ARROW expression SEMICOLON

    ESAC            reduce using rule 50 (actions_list -> action .)
    ID              shift and go to state 117

    action                         shift and go to state 116
    actions_list                   shift and go to state 128

state 117

    (51) action -> ID . COLON TYPE ARROW expression SEMICOLON

    COLON           shift and go to state 129


state 118

    (43) let_expression -> LET formal_list IN expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
    SEMICOLON       reduce using rule 43 (let_expression -> LET formal_list IN expression .)
    RPAREN          reduce using rule 43 (let_expression -> LET formal_list IN expression .)
    THEN            reduce using rule 43 (let_expression -> LET formal_list IN expression .)
    LOOP            reduce using rule 43 (let_expression -> LET formal_list IN expression .)
    OF              reduce using rule 43 (let_expression -> LET formal_list IN expression .)
    RBRACE          reduce using rule 43 (let_expression -> LET formal_list IN expression .)
    COMMA           reduce using rule 43 (let_expression -> LET formal_list IN expression .)
    ELSE            reduce using rule 43 (let_expression -> LET formal_list IN expression .)
    POOL            reduce using rule 43 (let_expression -> LET formal_list IN expression .)
    FI              reduce using rule 43 (let_expression -> LET formal_list IN expression .)
    IN              reduce using rule 43 (let_expression -> LET formal_list IN expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67

  ! DOT             [ reduce using rule 43 (let_expression -> LET formal_list IN expression .) ]
  ! AT              [ reduce using rule 43 (let_expression -> LET formal_list IN expression .) ]
  ! PLUS            [ reduce using rule 43 (let_expression -> LET formal_list IN expression .) ]
  ! MINUS           [ reduce using rule 43 (let_expression -> LET formal_list IN expression .) ]
  ! MULTIPLY        [ reduce using rule 43 (let_expression -> LET formal_list IN expression .) ]
  ! DIVIDE          [ reduce using rule 43 (let_expression -> LET formal_list IN expression .) ]
  ! LT              [ reduce using rule 43 (let_expression -> LET formal_list IN expression .) ]
  ! LTEQ            [ reduce using rule 43 (let_expression -> LET formal_list IN expression .) ]
  ! EQ              [ reduce using rule 43 (let_expression -> LET formal_list IN expression .) ]


state 119

    (44) formal_list -> formal_list COMMA formal .

    IN              reduce using rule 44 (formal_list -> formal_list COMMA formal .)
    COMMA           reduce using rule 44 (formal_list -> formal_list COMMA formal .)


state 120

    (46) formal -> ID COLON TYPE .
    (47) formal -> ID COLON TYPE . ASSIGN expression

    IN              reduce using rule 46 (formal -> ID COLON TYPE .)
    COMMA           reduce using rule 46 (formal -> ID COLON TYPE .)
    ASSIGN          shift and go to state 130


state 121

    (10) feature -> ID LPAREN formal_params_list RPAREN COLON TYPE LBRACE expression RBRACE .

    SEMICOLON       reduce using rule 10 (feature -> ID LPAREN formal_params_list RPAREN COLON TYPE LBRACE expression RBRACE .)


state 122

    (28) arguments_list -> expression COMMA arguments_list .

    RPAREN          reduce using rule 28 (arguments_list -> expression COMMA arguments_list .)


state 123

    (25) expression -> expression DOT ID LPAREN arguments_list_opt . RPAREN

    RPAREN          shift and go to state 131


state 124

    (30) expression -> expression AT TYPE DOT ID . LPAREN arguments_list_opt RPAREN

    LPAREN          shift and go to state 132


state 125

    (40) expression -> IF expression THEN expression ELSE . expression FI
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 133
    let_expression                 shift and go to state 48

state 126

    (41) expression -> WHILE expression LOOP expression POOL .

    DOT             reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    AT              reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    PLUS            reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    MINUS           reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    MULTIPLY        reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    DIVIDE          reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    LT              reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    LTEQ            reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    EQ              reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    SEMICOLON       reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    RPAREN          reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    THEN            reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    LOOP            reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    OF              reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    RBRACE          reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    COMMA           reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    ELSE            reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    POOL            reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    FI              reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)
    IN              reduce using rule 41 (expression -> WHILE expression LOOP expression POOL .)


state 127

    (48) expression -> CASE expression OF actions_list ESAC .

    DOT             reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    AT              reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    PLUS            reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    MINUS           reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    MULTIPLY        reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    DIVIDE          reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    LT              reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    LTEQ            reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    EQ              reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    SEMICOLON       reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    RPAREN          reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    THEN            reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    LOOP            reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    OF              reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    RBRACE          reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    COMMA           reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    ELSE            reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    POOL            reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    FI              reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)
    IN              reduce using rule 48 (expression -> CASE expression OF actions_list ESAC .)


state 128

    (49) actions_list -> action actions_list .

    ESAC            reduce using rule 49 (actions_list -> action actions_list .)


state 129

    (51) action -> ID COLON . TYPE ARROW expression SEMICOLON

    TYPE            shift and go to state 134


state 130

    (47) formal -> ID COLON TYPE ASSIGN . expression
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 135
    let_expression                 shift and go to state 48

state 131

    (25) expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .

    DOT             reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    AT              reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    PLUS            reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    MINUS           reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    MULTIPLY        reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    DIVIDE          reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    LT              reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    LTEQ            reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    EQ              reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    SEMICOLON       reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    RPAREN          reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    THEN            reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    LOOP            reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    OF              reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    RBRACE          reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    COMMA           reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    ELSE            reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    POOL            reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    FI              reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)
    IN              reduce using rule 25 (expression -> expression DOT ID LPAREN arguments_list_opt RPAREN .)


state 132

    (30) expression -> expression AT TYPE DOT ID LPAREN . arguments_list_opt RPAREN
    (26) arguments_list_opt -> . arguments_list
    (27) arguments_list_opt -> . empty
    (28) arguments_list -> . expression COMMA arguments_list
    (29) arguments_list -> . expression
    (56) empty -> .
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    RPAREN          reduce using rule 56 (empty -> .)
    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 87
    arguments_list_opt             shift and go to state 136
    arguments_list                 shift and go to state 85
    empty                          shift and go to state 86
    let_expression                 shift and go to state 48

state 133

    (40) expression -> IF expression THEN expression ELSE expression . FI
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    FI              shift and go to state 137
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 134

    (51) action -> ID COLON TYPE . ARROW expression SEMICOLON

    ARROW           shift and go to state 138


state 135

    (47) formal -> ID COLON TYPE ASSIGN expression .
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    IN              reduce using rule 47 (formal -> ID COLON TYPE ASSIGN expression .)
    COMMA           reduce using rule 47 (formal -> ID COLON TYPE ASSIGN expression .)
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 136

    (30) expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt . RPAREN

    RPAREN          shift and go to state 139


state 137

    (40) expression -> IF expression THEN expression ELSE expression FI .

    DOT             reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    AT              reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    PLUS            reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    MINUS           reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    MULTIPLY        reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    DIVIDE          reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    LT              reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    LTEQ            reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    EQ              reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    SEMICOLON       reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    RPAREN          reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    THEN            reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    LOOP            reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    OF              reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    RBRACE          reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    COMMA           reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    ELSE            reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    POOL            reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    FI              reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)
    IN              reduce using rule 40 (expression -> IF expression THEN expression ELSE expression FI .)


state 138

    (51) action -> ID COLON TYPE ARROW . expression SEMICOLON
    (17) expression -> . ID
    (18) expression -> . INTEGER
    (19) expression -> . BOOLEAN
    (20) expression -> . STRING
    (21) expression -> . LBRACE block_list RBRACE
    (24) expression -> . ID ASSIGN expression
    (25) expression -> . expression DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> . expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (31) expression -> . ID LPAREN arguments_list_opt RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression MULTIPLY expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression LT expression
    (37) expression -> . expression LTEQ expression
    (38) expression -> . expression EQ expression
    (39) expression -> . LPAREN expression RPAREN
    (40) expression -> . IF expression THEN expression ELSE expression FI
    (41) expression -> . WHILE expression LOOP expression POOL
    (42) expression -> . let_expression
    (48) expression -> . CASE expression OF actions_list ESAC
    (52) expression -> . NEW TYPE
    (53) expression -> . ISVOID expression
    (54) expression -> . INT_COMP expression
    (55) expression -> . NOT expression
    (43) let_expression -> . LET formal_list IN expression

    ID              shift and go to state 39
    INTEGER         shift and go to state 41
    BOOLEAN         shift and go to state 42
    STRING          shift and go to state 43
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 45
    IF              shift and go to state 46
    WHILE           shift and go to state 47
    CASE            shift and go to state 49
    NEW             shift and go to state 50
    ISVOID          shift and go to state 51
    INT_COMP        shift and go to state 52
    NOT             shift and go to state 53
    LET             shift and go to state 54

    expression                     shift and go to state 140
    let_expression                 shift and go to state 48

state 139

    (30) expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .

    DOT             reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    AT              reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    PLUS            reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    MINUS           reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    MULTIPLY        reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    DIVIDE          reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    LT              reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    LTEQ            reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    EQ              reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    SEMICOLON       reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    RPAREN          reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    THEN            reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    LOOP            reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    OF              reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    RBRACE          reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    COMMA           reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    ELSE            reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    POOL            reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    FI              reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)
    IN              reduce using rule 30 (expression -> expression AT TYPE DOT ID LPAREN arguments_list_opt RPAREN .)


state 140

    (51) action -> ID COLON TYPE ARROW expression . SEMICOLON
    (25) expression -> expression . DOT ID LPAREN arguments_list_opt RPAREN
    (30) expression -> expression . AT TYPE DOT ID LPAREN arguments_list_opt RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . MULTIPLY expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . LT expression
    (37) expression -> expression . LTEQ expression
    (38) expression -> expression . EQ expression

    SEMICOLON       shift and go to state 141
    DOT             shift and go to state 59
    AT              shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    MULTIPLY        shift and go to state 63
    DIVIDE          shift and go to state 64
    LT              shift and go to state 65
    LTEQ            shift and go to state 66
    EQ              shift and go to state 67


state 141

    (51) action -> ID COLON TYPE ARROW expression SEMICOLON .

    ID              reduce using rule 51 (action -> ID COLON TYPE ARROW expression SEMICOLON .)
    ESAC            reduce using rule 51 (action -> ID COLON TYPE ARROW expression SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOT in state 118 resolved as shift
WARNING: shift/reduce conflict for AT in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 118 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 118 resolved as shift
WARNING: shift/reduce conflict for LT in state 118 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 118 resolved as shift
WARNING: shift/reduce conflict for EQ in state 118 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (features_list_opt -> empty)
WARNING: rejected rule (features_list -> empty) in state 12
