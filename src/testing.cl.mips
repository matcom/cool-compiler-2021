# Genereted MIPS
.text
__get_ra:
move $v0, $ra
addi $v0, $v0, 8
jr $ra
__copy:
move $t0, $a0
lw $t1, 0($t0)
lw $a0, 4($t1)
li $v0, 9
syscall
move $t1, $a0
move $t3, $v0
__start_copy_loop:
ble $t1, $zero, __end_copy_loop
lw $t2, 0($t0)
sw $t2, 0($t3)
addi $t0, $t0, 4
addi $t3, $t3, 4
addi $t1, $t1, -1
j __start_copy_loop
__end_copy_loop:
jr $ra
main:
addi $sp, $sp, -12
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
la $a0, Main
lw $a0, 4($a0)
li $v0, 9
syscall
sw $v0, 8($fp)
lw $t0, 8($fp)
addi $sp, $sp, -4
sw $t0, 0($sp)
jal __init_Main_type
sw $v0, 8($fp)
lw $t0, 8($fp)
addi $sp, $sp, -4
sw $t0, 0($sp)
jal function_main_at_Main
sw $v0, 4($fp)
li $v0, 0
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 12
jr $ra
type_distance:
addi $sp, $sp, -16
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
sw $zero, 12($fp)
li $t0, 0
sw $t0, 0($fp)
distance_label_0:
lw $t0, 20($fp)
lw $t1, 16($fp)
seq $t2, $t0, $t1
sw $t2, 4($fp)
lw $t0, 4($fp)
bne $t0, $zero, distance_label_1
lw $t0, 20($fp)
lw $t0, 0($t0)
sw $t0, 20($fp)
lw $t0, 20($fp)
lw $t1, 12($fp)
seq $t2, $t0, $t1
sw $t2, 8($fp)
lw $t0, 8($fp)
bne $t0, $zero, distance_label_2
lw $t0, 0($fp)
li $t1, 1
add $t2, $t0, $t1
sw $t2, 0($fp)
j distance_label_0
distance_label_2:
li $t0, -1
sw $t0, 0($fp)
distance_label_1:
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 24
jr $ra
__init_Object_type:
addi $sp, $sp, 0
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $t0, 0($fp)
sw $zero, 0($t0)
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 4
jr $ra
function_abort_at_Object:
addi $sp, $sp, 0
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
addi $v0, $zero, 10
syscall
li $v0, 0
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 4
jr $ra
function_type_name_at_Object:
addi $sp, $sp, -4
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $t0, 4($fp)
lw $t0, 0($t0)
sw $t0, 0($fp)
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 8
jr $ra
function_copy_at_Object:
addi $sp, $sp, -4
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $a0, 4($fp)
jal __copy
sw $v0, 0($fp)
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 8
jr $ra
__init_String_type:
addi $sp, $sp, 0
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $t0, 0($fp)
la $t1, Object
sw $t1, 0($t0)
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 4
jr $ra
function_length_at_String:
addi $sp, $sp, -4
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 8
jr $ra
function_concat_at_String:
addi $sp, $sp, -4
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 12
jr $ra
function_substr_at_String:
addi $sp, $sp, -4
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 16
jr $ra
__init_Bool_type:
addi $sp, $sp, 0
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $t0, 0($fp)
la $t1, Object
sw $t1, 0($t0)
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 4
jr $ra
__init_Int_type:
addi $sp, $sp, 0
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $t0, 0($fp)
la $t1, Object
sw $t1, 0($t0)
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 4
jr $ra
__init_IO_type:
addi $sp, $sp, 0
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $t0, 0($fp)
la $t1, Object
sw $t1, 0($t0)
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 4
jr $ra
function_out_string_at_IO:
addi $sp, $sp, 0
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $a0, 0($fp)
addi $v0, $zero, 4
syscall
li $v0, 0
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 8
jr $ra
function_out_int_at_IO:
addi $sp, $sp, 0
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $a0, 0($fp)
addi $v0, $zero, 1
syscall
li $v0, 0
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 8
jr $ra
function_in_string_at_IO:
addi $sp, $sp, -4
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
li $a1, 1024
move $a0, $a1
li $v0, 9
syscall
# HERE
move $a0, $v0
addi $v0, $zero, 8
syscall
sw $a0, 0($fp)
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 8
jr $ra
function_in_int_at_IO:
addi $sp, $sp, -4
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
addi $v0, $zero, 5
syscall
sw $v0, 0($fp)
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 8
jr $ra
__init_A_type:
addi $sp, $sp, 0
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $t0, 0($fp)
la $t1, Object
sw $t1, 0($t0)
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 4
jr $ra
__init_B_type:
addi $sp, $sp, 0
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $t0, 0($fp)
la $t1, A
sw $t1, 0($t0)
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 4
jr $ra
__init_Main_type:
addi $sp, $sp, 0
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
lw $t0, 0($fp)
la $t1, IO
sw $t1, 0($t0)
lw $v0, 0($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 4
jr $ra
function_main_at_Main:
addi $sp, $sp, -52
move $t0, $sp
addi $sp, $sp, -8
sw $ra, 0($sp)
sw $fp, 4($sp)
move $fp, $t0
la $a0, B
lw $a0, 4($a0)
li $v0, 9
syscall
sw $v0, 0($fp)
lw $t0, 0($fp)
addi $sp, $sp, -4
sw $t0, 0($sp)
jal __init_B_type
sw $v0, 0($fp)
lw $t0, 0($fp)
lw $t0, 0($t0)
sw $t0, 4($fp)
li $a0, 8
li $v0, 9
syscall
sw $v0, 8($fp)
li $t2, 0
la $t3, A
lw $t1, 8($fp)
add $t1, $t1, $t2
sw $t3, 0($t1)
li $t2, 4
la $t3, B
lw $t1, 8($fp)
add $t1, $t1, $t2
sw $t3, 0($t1)
li $t0, -1
sw $t0, 12($fp)
li $t0, -2
sw $t0, 20($fp)
main_at_Main_label_0:
lw $t0, 12($fp)
li $t1, 1
add $t2, $t0, $t1
sw $t2, 12($fp)
lw $t0, 12($fp)
li $t1, 2
seq $t2, $t0, $t1
sw $t2, 32($fp)
lw $t0, 32($fp)
bne $t0, $zero, main_at_Main_label_2
lw $t0, 12($fp)
li $t2, 4
mul $t2, $t2, $t0
lw $t1, 8($fp)
add $t1, $t1, $t2
lw $t2, 0($t1)
sw $t2, 28($fp)
lw $t0, 4($fp)
addi $sp, $sp, -4
sw $t0, 0($sp)
lw $t0, 28($fp)
addi $sp, $sp, -4
sw $t0, 0($sp)
jal type_distance
sw $v0, 24($fp)
lw $t0, 24($fp)
li $t1, -1
seq $t2, $t0, $t1
sw $t2, 36($fp)
lw $t0, 36($fp)
bne $t0, $zero, main_at_Main_label_0
lw $t0, 20($fp)
li $t1, -2
seq $t2, $t0, $t1
sw $t2, 40($fp)
lw $t0, 40($fp)
bne $t0, $zero, main_at_Main_label_1
lw $t0, 20($fp)
lw $t1, 24($fp)
sgt $t2, $t0, $t1
sw $t2, 40($fp)
lw $t0, 40($fp)
bne $t0, $zero, main_at_Main_label_1
j main_at_Main_label_0
main_at_Main_label_1:
lw $t0, 24($fp)
sw $t0, 20($fp)
lw $t0, 12($fp)
sw $t0, 16($fp)
j main_at_Main_label_0
main_at_Main_label_2:
lw $t0, 20($fp)
li $t1, -2
seq $t2, $t0, $t1
sw $t2, 40($fp)
lw $t0, 40($fp)
bne $t0, $zero, main_at_Main_label_3
lw $t0, 16($fp)
li $t2, 4
mul $t2, $t2, $t0
lw $t1, 8($fp)
add $t1, $t1, $t2
lw $t2, 0($t1)
sw $t2, 28($fp)
la $t0, A
lw $t1, 28($fp)
seq $t2, $t0, $t1
sw $t2, 44($fp)
lw $t0, 44($fp)
nor $t0, $t0, $t0
sw $t0, 44($fp)
lw $t0, 44($fp)
bne $t0, $zero, main_at_Main_label_5
li $t0, 1
sw $t0, 0($fp)
j main_at_Main_label_4
main_at_Main_label_5:
la $t0, B
lw $t1, 28($fp)
seq $t2, $t0, $t1
sw $t2, 44($fp)
lw $t0, 44($fp)
nor $t0, $t0, $t0
sw $t0, 44($fp)
lw $t0, 44($fp)
bne $t0, $zero, main_at_Main_label_6
li $t0, 2
sw $t0, 0($fp)
j main_at_Main_label_4
main_at_Main_label_6:
main_at_Main_label_3:
addi $v0, $zero, 10
syscall
main_at_Main_label_4:
lw $t0, 52($fp)
addi $sp, $sp, -4
sw $t0, 0($sp)
lw $t0, 0($fp)
addi $sp, $sp, -4
sw $t0, 0($sp)
jal function_out_int_at_IO
sw $v0, 48($fp)
lw $v0, 48($fp)
lw $ra, 0($sp)
lw $fp, 4($sp)
addi $sp, $sp, 8
addi $sp, $sp, 56
jr $ra
.data
Object: .word 0, 4, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object, __init_Object_type, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object
String: .word <cmp.cil.TypeNode object at 0x00000184832415F8>, 4, function_length_at_String, function_concat_at_String, function_substr_at_String, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object, __init_String_type, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object, function_length_at_String, function_concat_at_String, function_substr_at_String
Bool: .word <cmp.cil.TypeNode object at 0x00000184832415F8>, 4, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object, __init_Bool_type, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object
Int: .word <cmp.cil.TypeNode object at 0x00000184832415F8>, 4, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object, __init_Int_type, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object
IO: .word <cmp.cil.TypeNode object at 0x00000184832415F8>, 4, function_out_string_at_IO, function_out_int_at_IO, function_in_string_at_IO, function_in_int_at_IO, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object, __init_IO_type, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object, function_out_string_at_IO, function_out_int_at_IO, function_in_string_at_IO, function_in_int_at_IO
A: .word <cmp.cil.TypeNode object at 0x00000184832415F8>, 4, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object, __init_A_type, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object
B: .word <cmp.cil.TypeNode object at 0x0000018483241668>, 4, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object, __init_B_type, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object
Main: .word <cmp.cil.TypeNode object at 0x0000018483241630>, 4, function_main_at_Main, function_out_string_at_IO, function_out_int_at_IO, function_in_string_at_IO, function_in_int_at_IO, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object, __init_Main_type, function_abort_at_Object, function_type_name_at_Object, function_copy_at_Object, function_out_string_at_IO, function_out_int_at_IO, function_in_string_at_IO, function_in_int_at_IO, function_main_at_Main