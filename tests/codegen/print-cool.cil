.types

  type Object {
    method Object_abort;
    method Object_type_name;
    method Object_copy;
  }
  type Int {
    method Object_abort;
    method Int_type_name;
    method Int_copy;
  }
  type Bool {
    method Object_abort;
    method Bool_type_name;
    method Bool_copy;
  }
  type String {
    method Object_abort;
    method String_type_name;
    method String_copy;
    method String_length;
    method String_concat;
    method String_substr;
  }
  type IO {
    method Object_abort;
    method IO_type_name;
    method IO_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
  }
  type Main {
    method Object_abort;
    method Main_type_name;
    method Main_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
    method Main_main;
  }

.data

  data_0_abort_msg = "Program Halted!";
  data_1_type_name_Object = "Object";
  data_2_type_name_Int = "Int";
  data_3_type_name_Bool = "Bool";
  data_4_type_name_String = "String";
  data_5_type_name_IO = "IO";
  data_6_type_name_Main = "Main";
  data_7_sep_cat = " ++ ";
  data_8_eol = "\n";
  data_9_under = "_";
  data_10_meth = "type_name";
  data_11_meth = "substr";
  data_12_meth = "out_string";

.code

  function Void___init {

    LOCAL local_self;

    local_self = ALLOCATE Void;
    RETURN local_self;
  }

  function main {

    LOCAL local_0;
    LOCAL local_1;

    local_0 = CALL Main___init;
    ARG local_0;
    local_1 = CALL Main_main;
  }

  function Object_abort {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_0_abort_msg;
    ARG local_0;
    local_1 = CALL String___init;
    print(str, local_1)
  }

  function Object_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_1_type_name_Object;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Object_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Object;
    RETURN local_copy;
  }

  function Int_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_2_type_name_Int;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Int_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Int;
    RETURN local_copy;
  }

  function Bool_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_3_type_name_Bool;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Bool_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Bool;
    RETURN local_copy;
  }

  function String_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_4_type_name_String;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function String_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE String;
    RETURN local_copy;
  }

  function IO_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_5_type_name_IO;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function IO_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE IO;
    RETURN local_copy;
  }

  function Main_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_6_type_name_Main;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Main_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Main;
    RETURN local_copy;
  }

  function IO_out_string {
    PARAM param_self;
    PARAM param_str;


    print(str, param_str)
    RETURN param_self;
  }

  function IO_out_int {
    PARAM param_int;
    PARAM param_self;


    print(int, param_int)
    RETURN param_self;
  }

  function IO_in_string {
    PARAM param_self;

    LOCAL local_str;

    local_str = read(str)
    RETURN local_str;
  }

  function IO_in_int {
    PARAM param_self;

    LOCAL local_int;

    local_int = read(int)
    RETURN local_int;
  }

  function String_length {
    PARAM param_self;

    LOCAL local_str_attr;
    LOCAL local_length;
    LOCAL local_2;

    local_str_attr = GETATTR param_self 0;
    local_str_attr = length(local_length)
    ARG local_length;
    local_2 = CALL Int___init;
    RETURN local_2;
  }

  function String_concat {
    PARAM param_self;
    PARAM param_other;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_self_str_attr;
    LOCAL local_other_str_attr;
    LOCAL local_concat;
    LOCAL local_self_len;
    LOCAL local_other_len;
    LOCAL local_concat_len;
    LOCAL local_8;

    local_0 = LOAD data_7_sep_cat;
    ARG local_0;
    local_1 = CALL String___init;
    print(str, param_self)
    print(str, local_1)
    print(str, param_other)
    local_self_str_attr = GETATTR param_self 0;
    local_other_str_attr = GETATTR param_other 0;
    local_self_len = length(local_self_str_attr)
    local_other_len = length(local_other_str_attr)
    local_concat_len = local_self_len + local_other_len
    local_concat = concat(local_self_str_attr, local_other_str_attr, local_concat_len)
    ARG local_concat;
    local_8 = CALL String___init;
    RETURN local_8;
  }

  function String_substr {
    PARAM param_self;
    PARAM param_i;
    PARAM param_l;

    LOCAL local_self_str_local;
    LOCAL local_i_local;
    LOCAL local_l_local;
    LOCAL local_substr;
    LOCAL local_4;

    local_self_str_local = GETATTR param_self 0;
    local_i_local = GETATTR param_i 0;
    local_l_local = GETATTR param_l 0;
    local_substr = substr(local_self_str_local, local_i_local, local_l_local)
    ARG local_substr;
    local_4 = CALL String___init;
    RETURN local_4;
  }

  function Object___init {

    LOCAL local_self;

    local_self = ALLOCATE Object;
    RETURN local_self;
  }

  function Int___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE Int;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function Bool___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE Bool;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function String___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE String;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function Main___init {

    LOCAL local_self;

    local_self = ALLOCATE Main;
    RETURN local_self;
  }

  function Main_main {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_tname_local;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_11;
    LOCAL local_12;
    LOCAL local_13;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_tname_local;
    LOCAL local_19;
    LOCAL local_20;
    LOCAL local_21;
    LOCAL local_22;
    LOCAL local_23;
    LOCAL local_24;
    LOCAL local_25;
    LOCAL local_tname_local;
    LOCAL local_27;
    LOCAL local_28;
    LOCAL local_29;
    LOCAL local_30;
    LOCAL local_31;
    LOCAL local_32;
    LOCAL local_33;
    LOCAL local_34;
    LOCAL local_35;
    LOCAL local_36;
    LOCAL local_37;
    LOCAL local_tname_local;
    LOCAL local_39;
    LOCAL local_40;
    LOCAL local_41;
    LOCAL local_42;
    LOCAL local_43;
    LOCAL local_44;
    LOCAL local_45;
    LOCAL local_46;
    LOCAL local_47;
    LOCAL local_48;
    LOCAL local_49;
    LOCAL local_tname_local;
    LOCAL local_51;
    LOCAL local_52;
    LOCAL local_53;
    LOCAL local_54;
    LOCAL local_55;
    LOCAL local_56;
    LOCAL local_57;
    LOCAL local_tname_local;
    LOCAL local_59;
    LOCAL local_60;
    LOCAL local_61;
    LOCAL local_62;
    LOCAL local_63;
    LOCAL local_64;
    LOCAL local_65;
    LOCAL local_66;
    LOCAL local_67;
    LOCAL local_68;
    LOCAL local_tname_local;
    LOCAL local_70;
    LOCAL local_71;
    LOCAL local_72;
    LOCAL local_73;
    LOCAL local_74;
    LOCAL local_75;

    local_4 = CALL Object___init;
    local_5 = TYPEOF local_4;
    local_7 = LOAD data_8_eol;
    ARG local_7;
    local_8 = CALL String___init;
    local_9 = LOAD data_9_under;
    ARG local_9;
    local_10 = CALL String___init;
    local_11 = LOAD data_10_meth;
    ARG local_11;
    local_12 = CALL String___init;
    local_tname_local = VCALL local_5 1;
    print(str, local_tname_local)
    print(str, local_10)
    print(str, local_12)
    print(str, local_8)
    ARG local_4;
    local_3 = VCALL local_5 1;
    local_13 = LOAD 4;
    ARG local_13;
    local_14 = CALL Int___init;
    local_15 = LOAD 1;
    ARG local_15;
    local_16 = CALL Int___init;
    local_17 = TYPEOF local_3;
    local_19 = LOAD data_8_eol;
    ARG local_19;
    local_20 = CALL String___init;
    local_21 = LOAD data_9_under;
    ARG local_21;
    local_22 = CALL String___init;
    local_23 = LOAD data_11_meth;
    ARG local_23;
    local_24 = CALL String___init;
    local_tname_local = VCALL local_17 1;
    print(str, local_tname_local)
    print(str, local_22)
    print(str, local_24)
    print(str, local_20)
    ARG local_3;
    ARG local_14;
    ARG local_16;
    local_2 = VCALL local_17 5;
    local_25 = TYPEOF param_self;
    local_27 = LOAD data_8_eol;
    ARG local_27;
    local_28 = CALL String___init;
    local_29 = LOAD data_9_under;
    ARG local_29;
    local_30 = CALL String___init;
    local_31 = LOAD data_12_meth;
    ARG local_31;
    local_32 = CALL String___init;
    local_tname_local = VCALL local_25 1;
    print(str, local_tname_local)
    print(str, local_30)
    print(str, local_32)
    print(str, local_28)
    ARG param_self;
    ARG local_2;
    local_1 = VCALL local_25 3;
    local_35 = TYPEOF param_self;
    ARG local_35;
    local_36 = CALL Bool___init;
    local_37 = TYPEOF local_36;
    local_39 = LOAD data_8_eol;
    ARG local_39;
    local_40 = CALL String___init;
    local_41 = LOAD data_9_under;
    ARG local_41;
    local_42 = CALL String___init;
    local_43 = LOAD data_10_meth;
    ARG local_43;
    local_44 = CALL String___init;
    local_tname_local = VCALL local_37 1;
    print(str, local_tname_local)
    print(str, local_42)
    print(str, local_44)
    print(str, local_40)
    ARG local_36;
    local_34 = VCALL local_37 1;
    local_45 = LOAD 1;
    ARG local_45;
    local_46 = CALL Int___init;
    local_47 = LOAD 3;
    ARG local_47;
    local_48 = CALL Int___init;
    local_49 = TYPEOF local_34;
    local_51 = LOAD data_8_eol;
    ARG local_51;
    local_52 = CALL String___init;
    local_53 = LOAD data_9_under;
    ARG local_53;
    local_54 = CALL String___init;
    local_55 = LOAD data_11_meth;
    ARG local_55;
    local_56 = CALL String___init;
    local_tname_local = VCALL local_49 1;
    print(str, local_tname_local)
    print(str, local_54)
    print(str, local_56)
    print(str, local_52)
    ARG local_34;
    ARG local_46;
    ARG local_48;
    local_33 = VCALL local_49 5;
    local_57 = TYPEOF local_1;
    local_59 = LOAD data_8_eol;
    ARG local_59;
    local_60 = CALL String___init;
    local_61 = LOAD data_9_under;
    ARG local_61;
    local_62 = CALL String___init;
    local_63 = LOAD data_12_meth;
    ARG local_63;
    local_64 = CALL String___init;
    local_tname_local = VCALL local_57 1;
    print(str, local_tname_local)
    print(str, local_62)
    print(str, local_64)
    print(str, local_60)
    ARG local_1;
    ARG local_33;
    local_0 = VCALL local_57 3;
    local_66 = LOAD data_8_eol;
    ARG local_66;
    local_67 = CALL String___init;
    local_68 = TYPEOF param_self;
    local_70 = LOAD data_8_eol;
    ARG local_70;
    local_71 = CALL String___init;
    local_72 = LOAD data_9_under;
    ARG local_72;
    local_73 = CALL String___init;
    local_74 = LOAD data_12_meth;
    ARG local_74;
    local_75 = CALL String___init;
    local_tname_local = VCALL local_68 1;
    print(str, local_tname_local)
    print(str, local_73)
    print(str, local_75)
    print(str, local_71)
    ARG param_self;
    ARG local_67;
    local_65 = VCALL local_68 3;
    RETURN local_65;
  }

