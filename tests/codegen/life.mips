	.data
abort_msg: .asciiz "Abort called from class "
new_line: .asciiz "\n"
string_abort: .asciiz "Abort called from class String\n"
int_abort: .asciiz "Abort called from class Int\n"
bool_abort: .asciiz "Abort called from class Bool\n"
type_Object: .asciiz "Object"
type_IO: .asciiz "IO"
type_String: .asciiz "String"
type_Int: .asciiz "Int"
type_Bool: .asciiz "Bool"
type_Board: .asciiz "Board"
type_CellularAutomaton: .asciiz "CellularAutomaton"
type_Main: .asciiz "Main"
methods: .word 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
type_Void: .asciiz "Void"
types: .word 0, 0, 0, 0, 0, 0, 0, 0
data_0: .asciiz "Void"
data_1: .asciiz ""
data_2: .asciiz "
"
data_3: .asciiz "
"
data_4: .asciiz "
"
data_5: .asciiz " "
data_6: .asciiz " "
data_7: .asciiz " "
data_8: .asciiz " "
data_9: .asciiz " "
data_10: .asciiz " "
data_11: .asciiz " "
data_12: .asciiz " "
data_13: .asciiz " "
data_14: .asciiz " "
data_15: .asciiz " "
data_16: .asciiz " "
data_17: .asciiz " "
data_18: .asciiz " "
data_19: .asciiz "X"
data_20: .asciiz "X"
data_21: .asciiz "X"
data_22: .asciiz "X"
data_23: .asciiz "X"
data_24: .asciiz "X"
data_25: .asciiz "X"
data_26: .asciiz "X"
data_27: .asciiz "-"
data_28: .asciiz "X"
data_29: .asciiz "-"
data_30: .asciiz "X"
data_31: .asciiz "X"
data_32: .asciiz ""
data_33: .asciiz "
Please chose a number:
"
data_34: .asciiz "	1: A cross
"
data_35: .asciiz "	2: A slash from the upper left to lower right
"
data_36: .asciiz "	3: A slash from the upper right to lower left
"
data_37: .asciiz "	4: An X
"
data_38: .asciiz "	5: A greater than sign 
"
data_39: .asciiz "	6: A less than sign
"
data_40: .asciiz "	7: Two greater than signs
"
data_41: .asciiz "	8: Two less than signs
"
data_42: .asciiz "	9: A 'V'
"
data_43: .asciiz "	10: An inverse 'V'
"
data_44: .asciiz "	11: Numbers 9 and 10 combined
"
data_45: .asciiz "	12: A full grid
"
data_46: .asciiz "	13: A 'T'
"
data_47: .asciiz "	14: A plus '+'
"
data_48: .asciiz "	15: A 'W'
"
data_49: .asciiz "	16: An 'M'
"
data_50: .asciiz "	17: An 'E'
"
data_51: .asciiz "	18: A '3'
"
data_52: .asciiz "	19: An 'O'
"
data_53: .asciiz "	20: An '8'
"
data_54: .asciiz "	21: An 'S'
"
data_55: .asciiz "Your choice => "
data_56: .asciiz "
"
data_57: .asciiz "                         "
data_58: .asciiz " XXXX   X    XX    X   XXXX "
data_59: .asciiz " XX X  XX  X XX X  XX  X XX "
data_60: .asciiz " XX X  XX  X XX "
data_61: .asciiz "XXX    X   X  X    X   XXXX "
data_62: .asciiz "XXXXX   X   XXXXX   X   XXXX"
data_63: .asciiz "  X X   X X X X     X"
data_64: .asciiz "X     X X X X   X X  "
data_65: .asciiz "  X    X  XXXXX  X    X  "
data_66: .asciiz "XXXXX  X    X    X    X  "
data_67: .asciiz "XXXXXXXXXXXXXXXXXXXXXXXXX"
data_68: .asciiz "X X X X X X X X"
data_69: .asciiz "  X   X X X   X"
data_70: .asciiz "X   X X X   X  "
data_71: .asciiz " X  XX  X  X  X     "
data_72: .asciiz "X  X  X  XX  X      "
data_73: .asciiz "    X   X   X     X     X"
data_74: .asciiz "X     X     X   X   X    "
data_75: .asciiz "X   X X X   X   X X X   X"
data_76: .asciiz "X     X     X     X     X"
data_77: .asciiz "    X   X   X   X   X    "
data_78: .asciiz " XX  XXXX XXXX  XX  "
data_79: .asciiz ""
data_80: .asciiz "Would you like to continue with the next generation? 
"
data_81: .asciiz "Please use lowercase y or n for your answer [y]: "
data_82: .asciiz "
"
data_83: .asciiz "n"
data_84: .asciiz ""
data_85: .asciiz "

"
data_86: .asciiz "Would you like to choose a background pattern? 
"
data_87: .asciiz "Please use lowercase y or n for your answer [n]: "
data_88: .asciiz "y"
data_89: .asciiz ""
data_90: .asciiz ""
data_91: .asciiz "Welcome to the Game of Life.
"
data_92: .asciiz "There are many initial states to choose from. 
"
zero_error: .asciiz "Division by zero error\n"
case_void_error: .asciiz "Case on void error\n"
dispatch_error: .asciiz "Dispatch on void error\n"
case_error: .asciiz "Case statement without a matching branch error\n"
index_error: .asciiz "Substring out of range error\n"
heap_error: .asciiz "Heap overflow error
"
	.text
	.globl main
main:
	la $v0, methods
	la $t9, entry
	sw $t9, 0($v0)
	la $t9, function_abort_Object
	sw $t9, 4($v0)
	la $t9, function_type_name_Object
	sw $t9, 8($v0)
	la $t9, function_copy_Object
	sw $t9, 12($v0)
	la $t9, function_out_string_IO
	sw $t9, 16($v0)
	la $t9, function_out_int_IO
	sw $t9, 20($v0)
	la $t9, function_in_int_IO
	sw $t9, 24($v0)
	la $t9, function_in_string_IO
	sw $t9, 28($v0)
	la $t9, function_length_String
	sw $t9, 32($v0)
	la $t9, function_concat_String
	sw $t9, 36($v0)
	la $t9, function_substr_String
	sw $t9, 40($v0)
	la $t9, function_type_name_String
	sw $t9, 44($v0)
	la $t9, function_copy_String
	sw $t9, 48($v0)
	la $t9, function_type_name_Int
	sw $t9, 52($v0)
	la $t9, function_copy_Int
	sw $t9, 56($v0)
	la $t9, function_type_name_Bool
	sw $t9, 60($v0)
	la $t9, function_copy_Bool
	sw $t9, 64($v0)
	la $t9, function_abort_String
	sw $t9, 68($v0)
	la $t9, function_abort_Int
	sw $t9, 72($v0)
	la $t9, function_abort_Bool
	sw $t9, 76($v0)
	la $t9, function_Board_Board
	sw $t9, 80($v0)
	la $t9, function_size_of_board_Board
	sw $t9, 84($v0)
	la $t9, function_board_init_Board
	sw $t9, 88($v0)
	la $t9, function_CellularAutomaton_CellularAutomaton
	sw $t9, 92($v0)
	la $t9, function_init_CellularAutomaton
	sw $t9, 96($v0)
	la $t9, function_print_CellularAutomaton
	sw $t9, 100($v0)
	la $t9, function_num_cells_CellularAutomaton
	sw $t9, 104($v0)
	la $t9, function_cell_CellularAutomaton
	sw $t9, 108($v0)
	la $t9, function_north_CellularAutomaton
	sw $t9, 112($v0)
	la $t9, function_south_CellularAutomaton
	sw $t9, 116($v0)
	la $t9, function_east_CellularAutomaton
	sw $t9, 120($v0)
	la $t9, function_west_CellularAutomaton
	sw $t9, 124($v0)
	la $t9, function_northwest_CellularAutomaton
	sw $t9, 128($v0)
	la $t9, function_northeast_CellularAutomaton
	sw $t9, 132($v0)
	la $t9, function_southeast_CellularAutomaton
	sw $t9, 136($v0)
	la $t9, function_southwest_CellularAutomaton
	sw $t9, 140($v0)
	la $t9, function_neighbors_CellularAutomaton
	sw $t9, 144($v0)
	la $t9, function_cell_at_next_evolution_CellularAutomaton
	sw $t9, 148($v0)
	la $t9, function_evolve_CellularAutomaton
	sw $t9, 152($v0)
	la $t9, function_option_CellularAutomaton
	sw $t9, 156($v0)
	la $t9, function_prompt_CellularAutomaton
	sw $t9, 160($v0)
	la $t9, function_prompt2_CellularAutomaton
	sw $t9, 164($v0)
	la $t9, function_Main_Main
	sw $t9, 168($v0)
	la $t9, function_main_Main
	sw $t9, 172($v0)
	la $t9, types
	li $v0, 9
	li $a0, 12
	syscall
	la $t8, type_String
	sw $t8, 0($v0)
	sw $v0, 0($t9)
	move $t8, $v0
	li $v0, 9
	li $a0, 28
	syscall
	la $v1, methods
	lw $a0, 32($v1)
	sw $a0, 4($v0)
	lw $a0, 36($v1)
	sw $a0, 8($v0)
	lw $a0, 40($v1)
	sw $a0, 12($v0)
	lw $a0, 68($v1)
	sw $a0, 16($v0)
	lw $a0, 44($v1)
	sw $a0, 20($v0)
	lw $a0, 48($v1)
	sw $a0, 24($v0)
	sw $v0, 8($t8)
	li $v0, 9
	li $a0, 12
	syscall
	la $t8, type_Int
	sw $t8, 0($v0)
	sw $v0, 4($t9)
	move $t8, $v0
	li $v0, 9
	li $a0, 16
	syscall
	la $v1, methods
	lw $a0, 72($v1)
	sw $a0, 4($v0)
	lw $a0, 52($v1)
	sw $a0, 8($v0)
	lw $a0, 56($v1)
	sw $a0, 12($v0)
	sw $v0, 8($t8)
	li $v0, 9
	li $a0, 12
	syscall
	la $t8, type_Bool
	sw $t8, 0($v0)
	sw $v0, 8($t9)
	move $t8, $v0
	li $v0, 9
	li $a0, 16
	syscall
	la $v1, methods
	lw $a0, 76($v1)
	sw $a0, 4($v0)
	lw $a0, 60($v1)
	sw $a0, 8($v0)
	lw $a0, 64($v1)
	sw $a0, 12($v0)
	sw $v0, 8($t8)
	li $v0, 9
	li $a0, 12
	syscall
	la $t8, type_Object
	sw $t8, 0($v0)
	sw $v0, 12($t9)
	move $t8, $v0
	li $v0, 9
	li $a0, 16
	syscall
	la $v1, methods
	lw $a0, 4($v1)
	sw $a0, 4($v0)
	lw $a0, 8($v1)
	sw $a0, 8($v0)
	lw $a0, 12($v1)
	sw $a0, 12($v0)
	sw $v0, 8($t8)
	li $v0, 9
	li $a0, 12
	syscall
	la $t8, type_IO
	sw $t8, 0($v0)
	sw $v0, 16($t9)
	move $t8, $v0
	li $v0, 9
	li $a0, 32
	syscall
	la $v1, methods
	lw $a0, 4($v1)
	sw $a0, 4($v0)
	lw $a0, 8($v1)
	sw $a0, 8($v0)
	lw $a0, 12($v1)
	sw $a0, 12($v0)
	lw $a0, 16($v1)
	sw $a0, 16($v0)
	lw $a0, 20($v1)
	sw $a0, 20($v0)
	lw $a0, 24($v1)
	sw $a0, 24($v0)
	lw $a0, 28($v1)
	sw $a0, 28($v0)
	sw $v0, 8($t8)
	li $v0, 9
	li $a0, 12
	syscall
	la $t8, type_Board
	sw $t8, 0($v0)
	sw $v0, 20($t9)
	move $t8, $v0
	li $v0, 9
	li $a0, 44
	syscall
	la $v1, methods
	lw $a0, 4($v1)
	sw $a0, 4($v0)
	lw $a0, 8($v1)
	sw $a0, 8($v0)
	lw $a0, 12($v1)
	sw $a0, 12($v0)
	lw $a0, 16($v1)
	sw $a0, 16($v0)
	lw $a0, 20($v1)
	sw $a0, 20($v0)
	lw $a0, 28($v1)
	sw $a0, 24($v0)
	lw $a0, 24($v1)
	sw $a0, 28($v0)
	lw $a0, 84($v1)
	sw $a0, 32($v0)
	lw $a0, 88($v1)
	sw $a0, 36($v0)
	lw $a0, 80($v1)
	sw $a0, 40($v0)
	sw $v0, 8($t8)
	li $v0, 9
	li $a0, 12
	syscall
	la $t8, type_CellularAutomaton
	sw $t8, 0($v0)
	sw $v0, 24($t9)
	move $t8, $v0
	li $v0, 9
	li $a0, 120
	syscall
	la $v1, methods
	lw $a0, 4($v1)
	sw $a0, 4($v0)
	lw $a0, 8($v1)
	sw $a0, 8($v0)
	lw $a0, 12($v1)
	sw $a0, 12($v0)
	lw $a0, 16($v1)
	sw $a0, 16($v0)
	lw $a0, 20($v1)
	sw $a0, 20($v0)
	lw $a0, 28($v1)
	sw $a0, 24($v0)
	lw $a0, 24($v1)
	sw $a0, 28($v0)
	lw $a0, 84($v1)
	sw $a0, 32($v0)
	lw $a0, 88($v1)
	sw $a0, 36($v0)
	lw $a0, 80($v1)
	sw $a0, 40($v0)
	lw $a0, 96($v1)
	sw $a0, 44($v0)
	lw $a0, 100($v1)
	sw $a0, 48($v0)
	lw $a0, 104($v1)
	sw $a0, 52($v0)
	lw $a0, 108($v1)
	sw $a0, 56($v0)
	lw $a0, 112($v1)
	sw $a0, 60($v0)
	lw $a0, 116($v1)
	sw $a0, 64($v0)
	lw $a0, 120($v1)
	sw $a0, 68($v0)
	lw $a0, 124($v1)
	sw $a0, 72($v0)
	lw $a0, 128($v1)
	sw $a0, 76($v0)
	lw $a0, 132($v1)
	sw $a0, 80($v0)
	lw $a0, 136($v1)
	sw $a0, 84($v0)
	lw $a0, 140($v1)
	sw $a0, 88($v0)
	lw $a0, 144($v1)
	sw $a0, 92($v0)
	lw $a0, 148($v1)
	sw $a0, 96($v0)
	lw $a0, 152($v1)
	sw $a0, 100($v0)
	lw $a0, 156($v1)
	sw $a0, 104($v0)
	lw $a0, 160($v1)
	sw $a0, 108($v0)
	lw $a0, 164($v1)
	sw $a0, 112($v0)
	lw $a0, 92($v1)
	sw $a0, 116($v0)
	sw $v0, 8($t8)
	li $v0, 9
	li $a0, 12
	syscall
	la $t8, type_Main
	sw $t8, 0($v0)
	sw $v0, 28($t9)
	move $t8, $v0
	li $v0, 9
	li $a0, 128
	syscall
	la $v1, methods
	lw $a0, 4($v1)
	sw $a0, 4($v0)
	lw $a0, 8($v1)
	sw $a0, 8($v0)
	lw $a0, 12($v1)
	sw $a0, 12($v0)
	lw $a0, 16($v1)
	sw $a0, 16($v0)
	lw $a0, 20($v1)
	sw $a0, 20($v0)
	lw $a0, 28($v1)
	sw $a0, 24($v0)
	lw $a0, 24($v1)
	sw $a0, 28($v0)
	lw $a0, 84($v1)
	sw $a0, 32($v0)
	lw $a0, 88($v1)
	sw $a0, 36($v0)
	lw $a0, 80($v1)
	sw $a0, 40($v0)
	lw $a0, 96($v1)
	sw $a0, 44($v0)
	lw $a0, 100($v1)
	sw $a0, 48($v0)
	lw $a0, 104($v1)
	sw $a0, 52($v0)
	lw $a0, 108($v1)
	sw $a0, 56($v0)
	lw $a0, 112($v1)
	sw $a0, 60($v0)
	lw $a0, 116($v1)
	sw $a0, 64($v0)
	lw $a0, 120($v1)
	sw $a0, 68($v0)
	lw $a0, 124($v1)
	sw $a0, 72($v0)
	lw $a0, 128($v1)
	sw $a0, 76($v0)
	lw $a0, 132($v1)
	sw $a0, 80($v0)
	lw $a0, 136($v1)
	sw $a0, 84($v0)
	lw $a0, 140($v1)
	sw $a0, 88($v0)
	lw $a0, 144($v1)
	sw $a0, 92($v0)
	lw $a0, 148($v1)
	sw $a0, 96($v0)
	lw $a0, 152($v1)
	sw $a0, 100($v0)
	lw $a0, 156($v1)
	sw $a0, 104($v0)
	lw $a0, 160($v1)
	sw $a0, 108($v0)
	lw $a0, 164($v1)
	sw $a0, 112($v0)
	lw $a0, 92($v1)
	sw $a0, 116($v0)
	lw $a0, 172($v1)
	sw $a0, 120($v0)
	lw $a0, 168($v1)
	sw $a0, 124($v0)
	sw $v0, 8($t8)
	lw $v0, 0($t9)
	li $t8, 0
	sw $t8, 4($v0)
	lw $v0, 4($t9)
	li $t8, 0
	sw $t8, 4($v0)
	lw $v0, 8($t9)
	li $t8, 0
	sw $t8, 4($v0)
	lw $v0, 12($t9)
	li $t8, 0
	sw $t8, 4($v0)
	lw $v0, 16($t9)
	lw $t8, 12($t9)
	sw $t8, 4($v0)
	lw $v0, 20($t9)
	lw $t8, 16($t9)
	sw $t8, 4($v0)
	lw $v0, 24($t9)
	lw $t8, 20($t9)
	sw $t8, 4($v0)
	lw $v0, 28($t9)
	lw $t8, 24($t9)
	sw $t8, 4($v0)

entry:
	move $fp, $sp
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	li $v0, 9
	li $a0, 32
	syscall
	la $t9, type_Main
	sw $t9, 0($v0)
	li $t9, 32
	sw $t9, 4($v0)
	move $t0, $v0
	la $t8, types
	lw $v0, 28($t8)
	sw $v0, 8($t0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -0($fp)
	jal function_Main_Main
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -4($fp)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t1, -0($fp)
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -0($fp)
	jal function_main_Main
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -4($fp)
	move $t0, $v0
	li $v0, 0
	sw $t0, -4($fp)
	addiu $sp, $sp, 8
	jr $ra


function_abort_Object:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	lw $t1, -4($fp)
	move $t1, $t0
	sw $t1, -4($fp)
	li $t8, 0
	li $v0, 4
	la $a0, abort_msg
	syscall
	li $v0, 4
	lw $a0, 0($t0)
	syscall
	li $v0, 4
	la $a0, new_line
	syscall
	li $v0, 17
	move $a0, $t8
	syscall
	sw $t0, -0($fp)
	sw $t1, -4($fp)

function_type_name_Object:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	lw $t1, -4($fp)
	lw $t1, 0($t0)
	move $v0, $t1
	sw $t0, -0($fp)
	sw $t1, -4($fp)
	addiu $sp, $sp, 8
	jr $ra


function_copy_Object:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	lw $t1, -4($fp)
	lw $t9, 4($t0)
	li $v0, 9
	move $a0, $t9
	syscall
	move $t1, $v0
	li $t8, 0
loop_0:
	bge $t8, $t9, exit_0
	lw $a0, ($t0)
	sw $a0, ($v0)
	addi $v0, $v0, 4
	addi $t0, $t0, 4
	addi $t8, $t8, 4
	j loop_0
exit_0:
	move $v0, $t1
	sw $t0, -0($fp)
	sw $t1, -4($fp)
	addiu $sp, $sp, 8
	jr $ra


function_out_string_IO:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -8($fp)
	move $t1, $t0
	sw $t1, -8($fp)
	lw $t2, -0($fp)
	li $v0, 4
	move $a0, $t2
	syscall
	move $v0, $t1
	sw $t0, -4($fp)
	sw $t1, -8($fp)
	sw $t2, -0($fp)
	addiu $sp, $sp, 12
	jr $ra


function_out_int_IO:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -8($fp)
	move $t1, $t0
	sw $t1, -8($fp)
	lw $t2, -0($fp)
	li $v0, 1
	move $a0, $t2
	syscall
	move $v0, $t1
	sw $t0, -4($fp)
	sw $t1, -8($fp)
	sw $t2, -0($fp)
	addiu $sp, $sp, 12
	jr $ra


function_in_int_IO:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	li $v0, 5
	syscall
	move $t0, $v0
	move $v0, $t0
	sw $t0, -4($fp)
	addiu $sp, $sp, 8
	jr $ra


function_in_string_IO:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	li $a0, 356
	li $v0, 9
	syscall
	move $t0, $v0
	move $a0, $t0
	li $a1, 356
	li $v0, 8
	syscall
	move $t9, $t0
start_1:
	lb $t8, 0($t9)
	beqz $t8, end_1
	add $t9, $t9, 1
	j start_1
end_1:
	addiu $t9, $t9, -1
	sb $0, ($t9)
	move $v0, $t0
	sw $t0, -4($fp)
	addiu $sp, $sp, 8
	jr $ra


function_length_String:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	lw $t1, -4($fp)
	move $t8, $t0
loop_2:
	lb $t9, 0($t8)
	beq $t9, $zero, end_2
	addi $t8, $t8, 1
	j loop_2
end_2:
	sub $t1, $t8, $t0
	move $v0, $t1
	sw $t0, -0($fp)
	sw $t1, -4($fp)
	addiu $sp, $sp, 8
	jr $ra


function_concat_String:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -0($fp)
	lw $t2, -8($fp)
	li $a0, 356
	li $v0, 9
	syscall
	move $t2, $v0
	move $a0, $t0
	move $a1, $t2
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	jal strcopier
	move $a0, $t1
	move $a1, $v0
	jal strcopier
	sb $0, 0($v0)
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	j finish_3
strcopier:
loop_3:
	lb $t8, ($a0)
	beq $t8, $zero, end_3
	addiu $a0, $a0, 1
	sb $t8, ($a1)
	addiu $a1, $a1, 1
	b loop_3
end_3:
	move $v0, $a1
	jr $ra
finish_3:
	move $v0, $t2
	sw $t0, -4($fp)
	sw $t1, -0($fp)
	sw $t2, -8($fp)
	addiu $sp, $sp, 12
	jr $ra


function_substr_String:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -0($fp)
	lw $t2, -12($fp)
	li $a0, 356
	li $v0, 9
	syscall
	move $t2, $v0
	lw $t3, -8($fp)
	li $v0, 0
	move $t8, $t3
start_4:
	lb $t9, 0($t8)
	beqz $t9, error_4
	addi $v0, 1
	bgt $v0, $t0, end_len_4
	addi $t8, 1
	j start_4
end_len_4:
	move $v0, $t2
loop_4:
	sub $t9, $v0, $t2
	beq $t9, $t1, end_4
	lb $t9, 0($t8)
	beqz $t9, error_4
	sb $t9, 0($v0)
	addi $t8, $t8, 1
	addi $v0, $v0, 1
	j loop_4
error_4:
	la $a0, index_error
	li $v0, 4
	move $a0, $t3
	syscall
	li $v0, 1
	move $a0, $t0
	syscall
	li $v0, 1
	move $a0, $t1
	syscall
	j .raise
end_4:
	sb $0, 0($v0)
	move $v0, $t2
	sw $t0, -4($fp)
	sw $t1, -0($fp)
	sw $t2, -12($fp)
	sw $t3, -8($fp)
	addiu $sp, $sp, 16
	jr $ra


function_type_name_String:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	la $t0, type_String
	move $v0, $t0
	sw $t0, -4($fp)
	addiu $sp, $sp, 8
	jr $ra


function_copy_String:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	lw $t1, -4($fp)
	li $a0, 356
	li $v0, 9
	syscall
	move $t1, $v0
	move $a0, $t0
	move $a1, $t1
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	jal strcopier
	sb $0, 0($v0)
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	j finish_5
finish_5:
	move $v0, $t1
	sw $t0, -0($fp)
	sw $t1, -4($fp)
	addiu $sp, $sp, 8
	jr $ra


function_type_name_Int:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	la $t0, type_Int
	move $v0, $t0
	sw $t0, -4($fp)
	addiu $sp, $sp, 8
	jr $ra


function_copy_Int:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	lw $t1, -4($fp)
	move $t1, $t0
	sw $t1, -4($fp)
	move $v0, $t1
	sw $t0, -0($fp)
	sw $t1, -4($fp)
	addiu $sp, $sp, 8
	jr $ra


function_type_name_Bool:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	la $t0, type_Bool
	move $v0, $t0
	sw $t0, -4($fp)
	addiu $sp, $sp, 8
	jr $ra


function_copy_Bool:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	lw $t1, -4($fp)
	move $t1, $t0
	sw $t1, -4($fp)
	move $v0, $t1
	sw $t0, -0($fp)
	sw $t1, -4($fp)
	addiu $sp, $sp, 8
	jr $ra


function_abort_String:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	la $t0, string_abort
	li $v0, 4
	move $a0, $t0
	syscall
	li $t8, 0
	li $v0, 17
	move $a0, $t8
	syscall
	sw $t0, -0($fp)

function_abort_Int:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	la $t0, int_abort
	li $v0, 4
	move $a0, $t0
	syscall
	li $t8, 0
	li $v0, 17
	move $a0, $t8
	syscall
	sw $t0, -0($fp)

function_abort_Bool:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	la $t0, bool_abort
	li $v0, 4
	move $a0, $t0
	syscall
	li $t8, 0
	li $v0, 17
	move $a0, $t8
	syscall
	sw $t0, -0($fp)

function_Board_Board:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	li $t9, 0
	sw $t9, 12($t0)
	li $t9, 0
	sw $t9, 16($t0)
	li $t9, 0
	sw $t9, 20($t0)
	lw $t1, -4($fp)
	move $t1, $t0
	sw $t1, -4($fp)
	move $v0, $t1
	sw $t0, -0($fp)
	sw $t1, -4($fp)
	addiu $sp, $sp, 8
	jr $ra


function_size_of_board_Board:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	lw $t1, -12($fp)
	la $t1, type_String
	lw $t2, -16($fp)
	la $t2, data_0
	move $t8, $t1
	move $t9, $t2
loop_6:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_6
	beqz $a1, mismatch_6
	seq $v0, $a0, $a1
	beqz $v0, mismatch_6
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_6
mismatch_6:
	li $v0, 0
	j end_6
check_6:
	bnez $a1, mismatch_6
	li $v0, 1
end_6:
	move $t1, $v0
	sw $t0, -0($fp)
	sw $t1, -12($fp)
	sw $t2, -16($fp)
	beqz $t1, continue__60
	la $a0, dispatch_error
	j .raise
continue__60:
	lw $t0, -8($fp)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t1, -0($fp)
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -8($fp)
	sw $t1, -0($fp)
	jal function_length_String
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -8($fp)
	move $t0, $v0
	move $v0, $t0
	sw $t0, -8($fp)
	addiu $sp, $sp, 20
	jr $ra


function_board_init_Board:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -12($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 32($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t2, -0($fp)
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -12($fp)
	sw $t2, -0($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -12($fp)
	move $t0, $v0
	lw $t1, -8($fp)
	move $t1, $t0
	sw $t1, -8($fp)
	lw $t2, -16($fp)
	li $t9, 15
	seq $t2, $t1, $t9
	sw $t0, -12($fp)
	sw $t1, -8($fp)
	sw $t2, -16($fp)
	bnez $t2, true__82
	lw $t0, -8($fp)
	lw $t1, -24($fp)
	li $t9, 16
	seq $t1, $t0, $t9
	sw $t0, -8($fp)
	sw $t1, -24($fp)
	bnez $t1, true__86
	lw $t0, -8($fp)
	lw $t1, -32($fp)
	li $t9, 20
	seq $t1, $t0, $t9
	sw $t0, -8($fp)
	sw $t1, -32($fp)
	bnez $t1, true__90
	lw $t0, -8($fp)
	lw $t1, -40($fp)
	li $t9, 21
	seq $t1, $t0, $t9
	sw $t0, -8($fp)
	sw $t1, -40($fp)
	bnez $t1, true__94
	lw $t0, -8($fp)
	lw $t1, -48($fp)
	li $t9, 25
	seq $t1, $t0, $t9
	sw $t0, -8($fp)
	sw $t1, -48($fp)
	bnez $t1, true__98
	lw $t0, -8($fp)
	lw $t1, -56($fp)
	li $t9, 28
	seq $t1, $t0, $t9
	sw $t0, -8($fp)
	sw $t1, -56($fp)
	bnez $t1, true__102
	lw $t0, -4($fp)
	li $t9, 5
	sw $t9, 12($t0)
	li $t9, 5
	sw $t9, 16($t0)
	lw $t1, -8($fp)
	sw $t1, 20($t0)
	lw $t2, -64($fp)
	move $t2, $t1
	sw $t2, -64($fp)
	lw $t3, -60($fp)
	move $t3, $t2
	sw $t3, -60($fp)
	sw $t0, -4($fp)
	sw $t1, -8($fp)
	sw $t2, -64($fp)
	sw $t3, -60($fp)
	j end__102
true__102:
	lw $t0, -4($fp)
	li $t9, 7
	sw $t9, 12($t0)
	li $t9, 4
	sw $t9, 16($t0)
	lw $t1, -8($fp)
	sw $t1, 20($t0)
	lw $t2, -68($fp)
	move $t2, $t1
	sw $t2, -68($fp)
	lw $t3, -60($fp)
	move $t3, $t2
	sw $t3, -60($fp)
	sw $t0, -4($fp)
	sw $t1, -8($fp)
	sw $t2, -68($fp)
	sw $t3, -60($fp)
end__102:
	lw $t0, -60($fp)
	lw $t1, -52($fp)
	move $t1, $t0
	sw $t1, -52($fp)
	sw $t0, -60($fp)
	sw $t1, -52($fp)
	j end__98
true__98:
	lw $t0, -4($fp)
	li $t9, 5
	sw $t9, 12($t0)
	li $t9, 5
	sw $t9, 16($t0)
	lw $t1, -8($fp)
	sw $t1, 20($t0)
	lw $t2, -72($fp)
	move $t2, $t1
	sw $t2, -72($fp)
	lw $t3, -52($fp)
	move $t3, $t2
	sw $t3, -52($fp)
	sw $t0, -4($fp)
	sw $t1, -8($fp)
	sw $t2, -72($fp)
	sw $t3, -52($fp)
end__98:
	lw $t0, -52($fp)
	lw $t1, -44($fp)
	move $t1, $t0
	sw $t1, -44($fp)
	sw $t0, -52($fp)
	sw $t1, -44($fp)
	j end__94
true__94:
	lw $t0, -4($fp)
	li $t9, 3
	sw $t9, 12($t0)
	li $t9, 7
	sw $t9, 16($t0)
	lw $t1, -8($fp)
	sw $t1, 20($t0)
	lw $t2, -76($fp)
	move $t2, $t1
	sw $t2, -76($fp)
	lw $t3, -44($fp)
	move $t3, $t2
	sw $t3, -44($fp)
	sw $t0, -4($fp)
	sw $t1, -8($fp)
	sw $t2, -76($fp)
	sw $t3, -44($fp)
end__94:
	lw $t0, -44($fp)
	lw $t1, -36($fp)
	move $t1, $t0
	sw $t1, -36($fp)
	sw $t0, -44($fp)
	sw $t1, -36($fp)
	j end__90
true__90:
	lw $t0, -4($fp)
	li $t9, 4
	sw $t9, 12($t0)
	li $t9, 5
	sw $t9, 16($t0)
	lw $t1, -8($fp)
	sw $t1, 20($t0)
	lw $t2, -80($fp)
	move $t2, $t1
	sw $t2, -80($fp)
	lw $t3, -36($fp)
	move $t3, $t2
	sw $t3, -36($fp)
	sw $t0, -4($fp)
	sw $t1, -8($fp)
	sw $t2, -80($fp)
	sw $t3, -36($fp)
end__90:
	lw $t0, -36($fp)
	lw $t1, -28($fp)
	move $t1, $t0
	sw $t1, -28($fp)
	sw $t0, -36($fp)
	sw $t1, -28($fp)
	j end__86
true__86:
	lw $t0, -4($fp)
	li $t9, 4
	sw $t9, 12($t0)
	li $t9, 4
	sw $t9, 16($t0)
	lw $t1, -8($fp)
	sw $t1, 20($t0)
	lw $t2, -84($fp)
	move $t2, $t1
	sw $t2, -84($fp)
	lw $t3, -28($fp)
	move $t3, $t2
	sw $t3, -28($fp)
	sw $t0, -4($fp)
	sw $t1, -8($fp)
	sw $t2, -84($fp)
	sw $t3, -28($fp)
end__86:
	lw $t0, -28($fp)
	lw $t1, -20($fp)
	move $t1, $t0
	sw $t1, -20($fp)
	sw $t0, -28($fp)
	sw $t1, -20($fp)
	j end__82
true__82:
	lw $t0, -4($fp)
	li $t9, 3
	sw $t9, 12($t0)
	li $t9, 5
	sw $t9, 16($t0)
	lw $t1, -8($fp)
	sw $t1, 20($t0)
	lw $t2, -88($fp)
	move $t2, $t1
	sw $t2, -88($fp)
	lw $t3, -20($fp)
	move $t3, $t2
	sw $t3, -20($fp)
	sw $t0, -4($fp)
	sw $t1, -8($fp)
	sw $t2, -88($fp)
	sw $t3, -20($fp)
end__82:
	lw $t0, -4($fp)
	lw $t1, -92($fp)
	move $t1, $t0
	sw $t1, -92($fp)
	move $v0, $t1
	sw $t0, -4($fp)
	sw $t1, -92($fp)
	addiu $sp, $sp, 96
	jr $ra


function_CellularAutomaton_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	li $t9, 0
	sw $t9, 12($t0)
	li $t9, 0
	sw $t9, 16($t0)
	li $t9, 0
	sw $t9, 20($t0)
	lw $t1, -4($fp)
	la $t1, data_1
	sw $t1, 24($t0)
	lw $t2, -8($fp)
	move $t2, $t0
	sw $t2, -8($fp)
	move $v0, $t2
	sw $t0, -0($fp)
	sw $t1, -4($fp)
	sw $t2, -8($fp)
	addiu $sp, $sp, 12
	jr $ra


function_init_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	lw $t1, -4($fp)
	sw $t0, 24($t1)
	lw $t2, -8($fp)
	lw $t9, 8($t1)
	lw $a0, 8($t9)
	lw $t8, 36($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -0($fp)
	sw $t1, -4($fp)
	sw $t2, -8($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -8($fp)
	move $t0, $v0
	lw $t1, -4($fp)
	lw $t2, -12($fp)
	move $t2, $t1
	sw $t2, -12($fp)
	move $v0, $t2
	sw $t0, -8($fp)
	sw $t1, -4($fp)
	sw $t2, -12($fp)
	addiu $sp, $sp, 16
	jr $ra


function_print_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	li $t0, 0
	sw $t0, -4($fp)
	lw $t1, -0($fp)
	lw $t2, -12($fp)
	lw $t2, 20($t1)
	lw $t3, -8($fp)
	move $t3, $t2
	sw $t3, -8($fp)
	lw $t4, -16($fp)
	la $t4, data_2
	lw $t5, -20($fp)
	lw $t9, 8($t1)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t4, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -0($fp)
	sw $t2, -12($fp)
	sw $t3, -8($fp)
	sw $t4, -16($fp)
	sw $t5, -20($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -20($fp)
	move $t0, $v0
	lw $t1, -24($fp)
	li $a0, 4
	li $v0, 9
	syscall
	la $t9, type_Void
	sw $t9, 0($v0)
	move $t1, $v0
	sw $t0, -20($fp)
	sw $t1, -24($fp)
start__210:
	lw $t0, -4($fp)
	lw $t1, -8($fp)
	lw $t2, -28($fp)
	slt $t2, $t0, $t1
	sw $t0, -4($fp)
	sw $t1, -8($fp)
	sw $t2, -28($fp)
	beqz $t2, end__210
	lw $t0, -0($fp)
	lw $t1, -32($fp)
	lw $t1, 24($t0)
	lw $t2, -36($fp)
	lw $t2, 16($t0)
	lw $t3, -44($fp)
	la $t3, type_String
	lw $t4, -48($fp)
	la $t4, data_0
	move $t8, $t3
	move $t9, $t4
loop_7:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_7
	beqz $a1, mismatch_7
	seq $v0, $a0, $a1
	beqz $v0, mismatch_7
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_7
mismatch_7:
	li $v0, 0
	j end_7
check_7:
	bnez $a1, mismatch_7
	li $v0, 1
end_7:
	move $t3, $v0
	sw $t0, -0($fp)
	sw $t1, -32($fp)
	sw $t2, -36($fp)
	sw $t3, -44($fp)
	sw $t4, -48($fp)
	beqz $t3, continue__225
	la $a0, dispatch_error
	j .raise
continue__225:
	lw $t0, -40($fp)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t1, -36($fp)
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	lw $t2, -4($fp)
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	lw $t3, -32($fp)
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -40($fp)
	sw $t1, -36($fp)
	sw $t2, -4($fp)
	sw $t3, -32($fp)
	jal function_substr_String
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -40($fp)
	move $t0, $v0
	lw $t1, -0($fp)
	lw $t2, -52($fp)
	lw $t9, 8($t1)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -40($fp)
	sw $t1, -0($fp)
	sw $t2, -52($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -52($fp)
	move $t0, $v0
	lw $t1, -56($fp)
	la $t1, data_3
	lw $t2, -0($fp)
	lw $t3, -60($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -52($fp)
	sw $t1, -56($fp)
	sw $t2, -0($fp)
	sw $t3, -60($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -60($fp)
	move $t0, $v0
	lw $t1, -0($fp)
	lw $t2, -68($fp)
	lw $t2, 16($t1)
	lw $t3, -4($fp)
	lw $t4, -64($fp)
	add $t4, $t3, $t2
	move $t3, $t4
	sw $t3, -4($fp)
	lw $t5, -72($fp)
	move $t5, $t4
	sw $t5, -72($fp)
	lw $t6, -24($fp)
	move $t6, $t5
	sw $t6, -24($fp)
	sw $t0, -60($fp)
	sw $t1, -0($fp)
	sw $t2, -68($fp)
	sw $t3, -4($fp)
	sw $t4, -64($fp)
	sw $t5, -72($fp)
	sw $t6, -24($fp)
	j start__210
end__210:
	lw $t0, -76($fp)
	la $t0, data_4
	lw $t1, -0($fp)
	lw $t2, -80($fp)
	lw $t9, 8($t1)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -76($fp)
	sw $t1, -0($fp)
	sw $t2, -80($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -80($fp)
	move $t0, $v0
	lw $t1, -0($fp)
	lw $t2, -84($fp)
	move $t2, $t1
	sw $t2, -84($fp)
	move $v0, $t2
	sw $t0, -80($fp)
	sw $t1, -0($fp)
	sw $t2, -84($fp)
	addiu $sp, $sp, 88
	jr $ra


function_num_cells_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	lw $t1, -4($fp)
	lw $t1, 24($t0)
	lw $t2, -12($fp)
	la $t2, type_String
	lw $t3, -16($fp)
	la $t3, data_0
	move $t8, $t2
	move $t9, $t3
loop_8:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_8
	beqz $a1, mismatch_8
	seq $v0, $a0, $a1
	beqz $v0, mismatch_8
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_8
mismatch_8:
	li $v0, 0
	j end_8
check_8:
	bnez $a1, mismatch_8
	li $v0, 1
end_8:
	move $t2, $v0
	sw $t0, -0($fp)
	sw $t1, -4($fp)
	sw $t2, -12($fp)
	sw $t3, -16($fp)
	beqz $t2, continue__271
	la $a0, dispatch_error
	j .raise
continue__271:
	lw $t0, -8($fp)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t1, -4($fp)
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -8($fp)
	sw $t1, -4($fp)
	jal function_length_String
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -8($fp)
	move $t0, $v0
	move $v0, $t0
	sw $t0, -8($fp)
	addiu $sp, $sp, 20
	jr $ra


function_cell_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -16($fp)
	lw $t1, 20($t0)
	lw $t2, -12($fp)
	addi $t2, $t1, -1
	lw $t3, -0($fp)
	lw $t4, -8($fp)
	slt $t4, $t2, $t3
	sw $t0, -4($fp)
	sw $t1, -16($fp)
	sw $t2, -12($fp)
	sw $t3, -0($fp)
	sw $t4, -8($fp)
	bnez $t4, true__291
	lw $t0, -4($fp)
	lw $t1, -24($fp)
	lw $t1, 24($t0)
	lw $t2, -32($fp)
	la $t2, type_String
	lw $t3, -36($fp)
	la $t3, data_0
	move $t8, $t2
	move $t9, $t3
loop_9:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_9
	beqz $a1, mismatch_9
	seq $v0, $a0, $a1
	beqz $v0, mismatch_9
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_9
mismatch_9:
	li $v0, 0
	j end_9
check_9:
	bnez $a1, mismatch_9
	li $v0, 1
end_9:
	move $t2, $v0
	sw $t0, -4($fp)
	sw $t1, -24($fp)
	sw $t2, -32($fp)
	sw $t3, -36($fp)
	beqz $t2, continue__299
	la $a0, dispatch_error
	j .raise
continue__299:
	lw $t0, -28($fp)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	li $t9, 1
	sw $t9, ($sp)
	addiu $sp, $sp, -4
	lw $t1, -0($fp)
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	lw $t2, -24($fp)
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -28($fp)
	sw $t1, -0($fp)
	sw $t2, -24($fp)
	jal function_substr_String
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -28($fp)
	move $t0, $v0
	lw $t1, -20($fp)
	move $t1, $t0
	sw $t1, -20($fp)
	sw $t0, -28($fp)
	sw $t1, -20($fp)
	j end__291
true__291:
	lw $t0, -40($fp)
	la $t0, data_5
	lw $t1, -20($fp)
	move $t1, $t0
	sw $t1, -20($fp)
	sw $t0, -40($fp)
	sw $t1, -20($fp)
end__291:
	lw $t0, -20($fp)
	move $v0, $t0
	sw $t0, -20($fp)
	addiu $sp, $sp, 44
	jr $ra


function_north_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -16($fp)
	lw $t1, 16($t0)
	lw $t2, -0($fp)
	lw $t3, -12($fp)
	sub $t3, $t2, $t1
	lw $t4, -8($fp)
	li $t9, 0
	slt $t4, $t3, $t9
	sw $t0, -4($fp)
	sw $t1, -16($fp)
	sw $t2, -0($fp)
	sw $t3, -12($fp)
	sw $t4, -8($fp)
	bnez $t4, true__327
	lw $t0, -4($fp)
	lw $t1, -28($fp)
	lw $t1, 16($t0)
	lw $t2, -0($fp)
	lw $t3, -24($fp)
	sub $t3, $t2, $t1
	lw $t4, -32($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 56($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -28($fp)
	sw $t2, -0($fp)
	sw $t3, -24($fp)
	sw $t4, -32($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -32($fp)
	move $t0, $v0
	lw $t1, -20($fp)
	move $t1, $t0
	sw $t1, -20($fp)
	sw $t0, -32($fp)
	sw $t1, -20($fp)
	j end__327
true__327:
	lw $t0, -36($fp)
	la $t0, data_6
	lw $t1, -20($fp)
	move $t1, $t0
	sw $t1, -20($fp)
	sw $t0, -36($fp)
	sw $t1, -20($fp)
end__327:
	lw $t0, -20($fp)
	move $v0, $t0
	sw $t0, -20($fp)
	addiu $sp, $sp, 40
	jr $ra


function_south_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -12($fp)
	lw $t1, 20($t0)
	lw $t2, -20($fp)
	lw $t2, 16($t0)
	lw $t3, -0($fp)
	lw $t4, -16($fp)
	add $t4, $t3, $t2
	lw $t5, -8($fp)
	slt $t5, $t1, $t4
	sw $t0, -4($fp)
	sw $t1, -12($fp)
	sw $t2, -20($fp)
	sw $t3, -0($fp)
	sw $t4, -16($fp)
	sw $t5, -8($fp)
	bnez $t5, true__357
	lw $t0, -4($fp)
	lw $t1, -32($fp)
	lw $t1, 16($t0)
	lw $t2, -0($fp)
	lw $t3, -28($fp)
	add $t3, $t2, $t1
	lw $t4, -36($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 56($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -32($fp)
	sw $t2, -0($fp)
	sw $t3, -28($fp)
	sw $t4, -36($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -36($fp)
	move $t0, $v0
	lw $t1, -24($fp)
	move $t1, $t0
	sw $t1, -24($fp)
	sw $t0, -36($fp)
	sw $t1, -24($fp)
	j end__357
true__357:
	lw $t0, -40($fp)
	la $t0, data_7
	lw $t1, -24($fp)
	move $t1, $t0
	sw $t1, -24($fp)
	sw $t0, -40($fp)
	sw $t1, -24($fp)
end__357:
	lw $t0, -24($fp)
	move $v0, $t0
	sw $t0, -24($fp)
	addiu $sp, $sp, 44
	jr $ra


function_east_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	lw $t1, -20($fp)
	addi $t1, $t0, 1
	lw $t2, -4($fp)
	lw $t3, -24($fp)
	lw $t3, 16($t2)
	lw $t4, -16($fp)
	la $a0, zero_error
	beqz $t3, .raise
	div $t1, $t3
	mflo $t4
	lw $t5, -28($fp)
	lw $t5, 16($t2)
	lw $t6, -12($fp)
	mult $t4, $t5
	mflo $t6
	lw $t7, -32($fp)
	addi $t7, $t0, 1
	lw $a1, -8($fp)
	seq $a1, $t6, $t7
	sw $t0, -0($fp)
	sw $t1, -20($fp)
	sw $t2, -4($fp)
	sw $t3, -24($fp)
	sw $t4, -16($fp)
	sw $t5, -28($fp)
	sw $t6, -12($fp)
	sw $t7, -32($fp)
	sw $a1, -8($fp)
	bnez $a1, true__393
	lw $t0, -0($fp)
	lw $t1, -40($fp)
	addi $t1, $t0, 1
	lw $t2, -4($fp)
	lw $t3, -44($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 56($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -0($fp)
	sw $t1, -40($fp)
	sw $t2, -4($fp)
	sw $t3, -44($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -44($fp)
	move $t0, $v0
	lw $t1, -36($fp)
	move $t1, $t0
	sw $t1, -36($fp)
	sw $t0, -44($fp)
	sw $t1, -36($fp)
	j end__393
true__393:
	lw $t0, -48($fp)
	la $t0, data_8
	lw $t1, -36($fp)
	move $t1, $t0
	sw $t1, -36($fp)
	sw $t0, -48($fp)
	sw $t1, -36($fp)
end__393:
	lw $t0, -36($fp)
	move $v0, $t0
	sw $t0, -36($fp)
	addiu $sp, $sp, 52
	jr $ra


function_west_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	lw $t1, -8($fp)
	li $t9, 0
	seq $t1, $t0, $t9
	sw $t0, -0($fp)
	sw $t1, -8($fp)
	bnez $t1, true__415
	lw $t0, -4($fp)
	lw $t1, -28($fp)
	lw $t1, 16($t0)
	lw $t2, -0($fp)
	lw $t3, -24($fp)
	la $a0, zero_error
	beqz $t1, .raise
	div $t2, $t1
	mflo $t3
	lw $t4, -32($fp)
	lw $t4, 16($t0)
	lw $t5, -20($fp)
	mult $t3, $t4
	mflo $t5
	lw $t6, -16($fp)
	seq $t6, $t5, $t2
	sw $t0, -4($fp)
	sw $t1, -28($fp)
	sw $t2, -0($fp)
	sw $t3, -24($fp)
	sw $t4, -32($fp)
	sw $t5, -20($fp)
	sw $t6, -16($fp)
	bnez $t6, true__427
	lw $t0, -0($fp)
	lw $t1, -40($fp)
	addi $t1, $t0, -1
	lw $t2, -4($fp)
	lw $t3, -44($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 56($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -0($fp)
	sw $t1, -40($fp)
	sw $t2, -4($fp)
	sw $t3, -44($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -44($fp)
	move $t0, $v0
	lw $t1, -36($fp)
	move $t1, $t0
	sw $t1, -36($fp)
	sw $t0, -44($fp)
	sw $t1, -36($fp)
	j end__427
true__427:
	lw $t0, -48($fp)
	la $t0, data_9
	lw $t1, -36($fp)
	move $t1, $t0
	sw $t1, -36($fp)
	sw $t0, -48($fp)
	sw $t1, -36($fp)
end__427:
	lw $t0, -36($fp)
	lw $t1, -12($fp)
	move $t1, $t0
	sw $t1, -12($fp)
	sw $t0, -36($fp)
	sw $t1, -12($fp)
	j end__415
true__415:
	lw $t0, -52($fp)
	la $t0, data_10
	lw $t1, -12($fp)
	move $t1, $t0
	sw $t1, -12($fp)
	sw $t0, -52($fp)
	sw $t1, -12($fp)
end__415:
	lw $t0, -12($fp)
	move $v0, $t0
	sw $t0, -12($fp)
	addiu $sp, $sp, 56
	jr $ra


function_northwest_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -16($fp)
	lw $t1, 16($t0)
	lw $t2, -0($fp)
	lw $t3, -12($fp)
	sub $t3, $t2, $t1
	lw $t4, -8($fp)
	li $t9, 0
	slt $t4, $t3, $t9
	sw $t0, -4($fp)
	sw $t1, -16($fp)
	sw $t2, -0($fp)
	sw $t3, -12($fp)
	sw $t4, -8($fp)
	bnez $t4, true__461
	lw $t0, -4($fp)
	lw $t1, -36($fp)
	lw $t1, 16($t0)
	lw $t2, -0($fp)
	lw $t3, -32($fp)
	la $a0, zero_error
	beqz $t1, .raise
	div $t2, $t1
	mflo $t3
	lw $t4, -40($fp)
	lw $t4, 16($t0)
	lw $t5, -28($fp)
	mult $t3, $t4
	mflo $t5
	lw $t6, -24($fp)
	seq $t6, $t5, $t2
	sw $t0, -4($fp)
	sw $t1, -36($fp)
	sw $t2, -0($fp)
	sw $t3, -32($fp)
	sw $t4, -40($fp)
	sw $t5, -28($fp)
	sw $t6, -24($fp)
	bnez $t6, true__473
	lw $t0, -0($fp)
	lw $t1, -48($fp)
	addi $t1, $t0, -1
	lw $t2, -4($fp)
	lw $t3, -52($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 60($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -0($fp)
	sw $t1, -48($fp)
	sw $t2, -4($fp)
	sw $t3, -52($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -52($fp)
	move $t0, $v0
	lw $t1, -44($fp)
	move $t1, $t0
	sw $t1, -44($fp)
	sw $t0, -52($fp)
	sw $t1, -44($fp)
	j end__473
true__473:
	lw $t0, -56($fp)
	la $t0, data_11
	lw $t1, -44($fp)
	move $t1, $t0
	sw $t1, -44($fp)
	sw $t0, -56($fp)
	sw $t1, -44($fp)
end__473:
	lw $t0, -44($fp)
	lw $t1, -20($fp)
	move $t1, $t0
	sw $t1, -20($fp)
	sw $t0, -44($fp)
	sw $t1, -20($fp)
	j end__461
true__461:
	lw $t0, -60($fp)
	la $t0, data_12
	lw $t1, -20($fp)
	move $t1, $t0
	sw $t1, -20($fp)
	sw $t0, -60($fp)
	sw $t1, -20($fp)
end__461:
	lw $t0, -20($fp)
	move $v0, $t0
	sw $t0, -20($fp)
	addiu $sp, $sp, 64
	jr $ra


function_northeast_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -16($fp)
	lw $t1, 16($t0)
	lw $t2, -0($fp)
	lw $t3, -12($fp)
	sub $t3, $t2, $t1
	lw $t4, -8($fp)
	li $t9, 0
	slt $t4, $t3, $t9
	sw $t0, -4($fp)
	sw $t1, -16($fp)
	sw $t2, -0($fp)
	sw $t3, -12($fp)
	sw $t4, -8($fp)
	bnez $t4, true__507
	lw $t0, -0($fp)
	lw $t1, -36($fp)
	addi $t1, $t0, 1
	lw $t2, -4($fp)
	lw $t3, -40($fp)
	lw $t3, 16($t2)
	lw $t4, -32($fp)
	la $a0, zero_error
	beqz $t3, .raise
	div $t1, $t3
	mflo $t4
	lw $t5, -44($fp)
	lw $t5, 16($t2)
	lw $t6, -28($fp)
	mult $t4, $t5
	mflo $t6
	lw $t7, -48($fp)
	addi $t7, $t0, 1
	lw $a1, -24($fp)
	seq $a1, $t6, $t7
	sw $t0, -0($fp)
	sw $t1, -36($fp)
	sw $t2, -4($fp)
	sw $t3, -40($fp)
	sw $t4, -32($fp)
	sw $t5, -44($fp)
	sw $t6, -28($fp)
	sw $t7, -48($fp)
	sw $a1, -24($fp)
	bnez $a1, true__523
	lw $t0, -0($fp)
	lw $t1, -56($fp)
	addi $t1, $t0, 1
	lw $t2, -4($fp)
	lw $t3, -60($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 60($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -0($fp)
	sw $t1, -56($fp)
	sw $t2, -4($fp)
	sw $t3, -60($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -60($fp)
	move $t0, $v0
	lw $t1, -52($fp)
	move $t1, $t0
	sw $t1, -52($fp)
	sw $t0, -60($fp)
	sw $t1, -52($fp)
	j end__523
true__523:
	lw $t0, -64($fp)
	la $t0, data_13
	lw $t1, -52($fp)
	move $t1, $t0
	sw $t1, -52($fp)
	sw $t0, -64($fp)
	sw $t1, -52($fp)
end__523:
	lw $t0, -52($fp)
	lw $t1, -20($fp)
	move $t1, $t0
	sw $t1, -20($fp)
	sw $t0, -52($fp)
	sw $t1, -20($fp)
	j end__507
true__507:
	lw $t0, -68($fp)
	la $t0, data_14
	lw $t1, -20($fp)
	move $t1, $t0
	sw $t1, -20($fp)
	sw $t0, -68($fp)
	sw $t1, -20($fp)
end__507:
	lw $t0, -20($fp)
	move $v0, $t0
	sw $t0, -20($fp)
	addiu $sp, $sp, 72
	jr $ra


function_southeast_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -12($fp)
	lw $t1, 20($t0)
	lw $t2, -20($fp)
	lw $t2, 16($t0)
	lw $t3, -0($fp)
	lw $t4, -16($fp)
	add $t4, $t3, $t2
	lw $t5, -8($fp)
	slt $t5, $t1, $t4
	sw $t0, -4($fp)
	sw $t1, -12($fp)
	sw $t2, -20($fp)
	sw $t3, -0($fp)
	sw $t4, -16($fp)
	sw $t5, -8($fp)
	bnez $t5, true__559
	lw $t0, -0($fp)
	lw $t1, -40($fp)
	addi $t1, $t0, 1
	lw $t2, -4($fp)
	lw $t3, -44($fp)
	lw $t3, 16($t2)
	lw $t4, -36($fp)
	la $a0, zero_error
	beqz $t3, .raise
	div $t1, $t3
	mflo $t4
	lw $t5, -48($fp)
	lw $t5, 16($t2)
	lw $t6, -32($fp)
	mult $t4, $t5
	mflo $t6
	lw $t7, -52($fp)
	addi $t7, $t0, 1
	lw $a1, -28($fp)
	seq $a1, $t6, $t7
	sw $t0, -0($fp)
	sw $t1, -40($fp)
	sw $t2, -4($fp)
	sw $t3, -44($fp)
	sw $t4, -36($fp)
	sw $t5, -48($fp)
	sw $t6, -32($fp)
	sw $t7, -52($fp)
	sw $a1, -28($fp)
	bnez $a1, true__575
	lw $t0, -0($fp)
	lw $t1, -60($fp)
	addi $t1, $t0, 1
	lw $t2, -4($fp)
	lw $t3, -64($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 64($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -0($fp)
	sw $t1, -60($fp)
	sw $t2, -4($fp)
	sw $t3, -64($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -64($fp)
	move $t0, $v0
	lw $t1, -56($fp)
	move $t1, $t0
	sw $t1, -56($fp)
	sw $t0, -64($fp)
	sw $t1, -56($fp)
	j end__575
true__575:
	lw $t0, -68($fp)
	la $t0, data_15
	lw $t1, -56($fp)
	move $t1, $t0
	sw $t1, -56($fp)
	sw $t0, -68($fp)
	sw $t1, -56($fp)
end__575:
	lw $t0, -56($fp)
	lw $t1, -24($fp)
	move $t1, $t0
	sw $t1, -24($fp)
	sw $t0, -56($fp)
	sw $t1, -24($fp)
	j end__559
true__559:
	lw $t0, -72($fp)
	la $t0, data_16
	lw $t1, -24($fp)
	move $t1, $t0
	sw $t1, -24($fp)
	sw $t0, -72($fp)
	sw $t1, -24($fp)
end__559:
	lw $t0, -24($fp)
	move $v0, $t0
	sw $t0, -24($fp)
	addiu $sp, $sp, 76
	jr $ra


function_southwest_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -12($fp)
	lw $t1, 20($t0)
	lw $t2, -20($fp)
	lw $t2, 16($t0)
	lw $t3, -0($fp)
	lw $t4, -16($fp)
	add $t4, $t3, $t2
	lw $t5, -8($fp)
	slt $t5, $t1, $t4
	sw $t0, -4($fp)
	sw $t1, -12($fp)
	sw $t2, -20($fp)
	sw $t3, -0($fp)
	sw $t4, -16($fp)
	sw $t5, -8($fp)
	bnez $t5, true__611
	lw $t0, -4($fp)
	lw $t1, -40($fp)
	lw $t1, 16($t0)
	lw $t2, -0($fp)
	lw $t3, -36($fp)
	la $a0, zero_error
	beqz $t1, .raise
	div $t2, $t1
	mflo $t3
	lw $t4, -44($fp)
	lw $t4, 16($t0)
	lw $t5, -32($fp)
	mult $t3, $t4
	mflo $t5
	lw $t6, -28($fp)
	seq $t6, $t5, $t2
	sw $t0, -4($fp)
	sw $t1, -40($fp)
	sw $t2, -0($fp)
	sw $t3, -36($fp)
	sw $t4, -44($fp)
	sw $t5, -32($fp)
	sw $t6, -28($fp)
	bnez $t6, true__623
	lw $t0, -0($fp)
	lw $t1, -52($fp)
	addi $t1, $t0, -1
	lw $t2, -4($fp)
	lw $t3, -56($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 64($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -0($fp)
	sw $t1, -52($fp)
	sw $t2, -4($fp)
	sw $t3, -56($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -56($fp)
	move $t0, $v0
	lw $t1, -48($fp)
	move $t1, $t0
	sw $t1, -48($fp)
	sw $t0, -56($fp)
	sw $t1, -48($fp)
	j end__623
true__623:
	lw $t0, -60($fp)
	la $t0, data_17
	lw $t1, -48($fp)
	move $t1, $t0
	sw $t1, -48($fp)
	sw $t0, -60($fp)
	sw $t1, -48($fp)
end__623:
	lw $t0, -48($fp)
	lw $t1, -24($fp)
	move $t1, $t0
	sw $t1, -24($fp)
	sw $t0, -48($fp)
	sw $t1, -24($fp)
	j end__611
true__611:
	lw $t0, -64($fp)
	la $t0, data_18
	lw $t1, -24($fp)
	move $t1, $t0
	sw $t1, -24($fp)
	sw $t0, -64($fp)
	sw $t1, -24($fp)
end__611:
	lw $t0, -24($fp)
	move $v0, $t0
	sw $t0, -24($fp)
	addiu $sp, $sp, 68
	jr $ra


function_neighbors_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -40($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 60($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t2, -0($fp)
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -40($fp)
	sw $t2, -0($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -40($fp)
	move $t0, $v0
	lw $t1, -44($fp)
	la $t1, data_19
	lw $t2, -36($fp)
	move $t8, $t0
	move $t9, $t1
loop_10:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_10
	beqz $a1, mismatch_10
	seq $v0, $a0, $a1
	beqz $v0, mismatch_10
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_10
mismatch_10:
	li $v0, 0
	j end_10
check_10:
	bnez $a1, mismatch_10
	li $v0, 1
end_10:
	move $t2, $v0
	sw $t0, -40($fp)
	sw $t1, -44($fp)
	sw $t2, -36($fp)
	bnez $t2, true__667
	lw $t0, -48($fp)
	li $t0, 0
	sw $t0, -48($fp)
	sw $t0, -48($fp)
	j end__667
true__667:
	lw $t0, -48($fp)
	li $t0, 1
	sw $t0, -48($fp)
	sw $t0, -48($fp)
end__667:
	lw $t0, -4($fp)
	lw $t1, -56($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 64($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t2, -0($fp)
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -56($fp)
	sw $t2, -0($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -56($fp)
	move $t0, $v0
	lw $t1, -60($fp)
	la $t1, data_20
	lw $t2, -52($fp)
	move $t8, $t0
	move $t9, $t1
loop_11:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_11
	beqz $a1, mismatch_11
	seq $v0, $a0, $a1
	beqz $v0, mismatch_11
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_11
mismatch_11:
	li $v0, 0
	j end_11
check_11:
	bnez $a1, mismatch_11
	li $v0, 1
end_11:
	move $t2, $v0
	sw $t0, -56($fp)
	sw $t1, -60($fp)
	sw $t2, -52($fp)
	bnez $t2, true__683
	lw $t0, -64($fp)
	li $t0, 0
	sw $t0, -64($fp)
	sw $t0, -64($fp)
	j end__683
true__683:
	lw $t0, -64($fp)
	li $t0, 1
	sw $t0, -64($fp)
	sw $t0, -64($fp)
end__683:
	lw $t0, -48($fp)
	lw $t1, -64($fp)
	lw $t2, -32($fp)
	add $t2, $t0, $t1
	lw $t3, -4($fp)
	lw $t4, -72($fp)
	lw $t9, 8($t3)
	lw $a0, 8($t9)
	lw $t8, 68($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t5, -0($fp)
	sw $t5, ($sp)
	addiu $sp, $sp, -4
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -48($fp)
	sw $t1, -64($fp)
	sw $t2, -32($fp)
	sw $t3, -4($fp)
	sw $t4, -72($fp)
	sw $t5, -0($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -72($fp)
	move $t0, $v0
	lw $t1, -76($fp)
	la $t1, data_21
	lw $t2, -68($fp)
	move $t8, $t0
	move $t9, $t1
loop_12:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_12
	beqz $a1, mismatch_12
	seq $v0, $a0, $a1
	beqz $v0, mismatch_12
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_12
mismatch_12:
	li $v0, 0
	j end_12
check_12:
	bnez $a1, mismatch_12
	li $v0, 1
end_12:
	move $t2, $v0
	sw $t0, -72($fp)
	sw $t1, -76($fp)
	sw $t2, -68($fp)
	bnez $t2, true__700
	lw $t0, -80($fp)
	li $t0, 0
	sw $t0, -80($fp)
	sw $t0, -80($fp)
	j end__700
true__700:
	lw $t0, -80($fp)
	li $t0, 1
	sw $t0, -80($fp)
	sw $t0, -80($fp)
end__700:
	lw $t0, -32($fp)
	lw $t1, -80($fp)
	lw $t2, -28($fp)
	add $t2, $t0, $t1
	lw $t3, -4($fp)
	lw $t4, -88($fp)
	lw $t9, 8($t3)
	lw $a0, 8($t9)
	lw $t8, 72($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t5, -0($fp)
	sw $t5, ($sp)
	addiu $sp, $sp, -4
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -32($fp)
	sw $t1, -80($fp)
	sw $t2, -28($fp)
	sw $t3, -4($fp)
	sw $t4, -88($fp)
	sw $t5, -0($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -88($fp)
	move $t0, $v0
	lw $t1, -92($fp)
	la $t1, data_22
	lw $t2, -84($fp)
	move $t8, $t0
	move $t9, $t1
loop_13:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_13
	beqz $a1, mismatch_13
	seq $v0, $a0, $a1
	beqz $v0, mismatch_13
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_13
mismatch_13:
	li $v0, 0
	j end_13
check_13:
	bnez $a1, mismatch_13
	li $v0, 1
end_13:
	move $t2, $v0
	sw $t0, -88($fp)
	sw $t1, -92($fp)
	sw $t2, -84($fp)
	bnez $t2, true__717
	lw $t0, -96($fp)
	li $t0, 0
	sw $t0, -96($fp)
	sw $t0, -96($fp)
	j end__717
true__717:
	lw $t0, -96($fp)
	li $t0, 1
	sw $t0, -96($fp)
	sw $t0, -96($fp)
end__717:
	lw $t0, -28($fp)
	lw $t1, -96($fp)
	lw $t2, -24($fp)
	add $t2, $t0, $t1
	lw $t3, -4($fp)
	lw $t4, -104($fp)
	lw $t9, 8($t3)
	lw $a0, 8($t9)
	lw $t8, 80($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t5, -0($fp)
	sw $t5, ($sp)
	addiu $sp, $sp, -4
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -28($fp)
	sw $t1, -96($fp)
	sw $t2, -24($fp)
	sw $t3, -4($fp)
	sw $t4, -104($fp)
	sw $t5, -0($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -104($fp)
	move $t0, $v0
	lw $t1, -108($fp)
	la $t1, data_23
	lw $t2, -100($fp)
	move $t8, $t0
	move $t9, $t1
loop_14:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_14
	beqz $a1, mismatch_14
	seq $v0, $a0, $a1
	beqz $v0, mismatch_14
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_14
mismatch_14:
	li $v0, 0
	j end_14
check_14:
	bnez $a1, mismatch_14
	li $v0, 1
end_14:
	move $t2, $v0
	sw $t0, -104($fp)
	sw $t1, -108($fp)
	sw $t2, -100($fp)
	bnez $t2, true__734
	lw $t0, -112($fp)
	li $t0, 0
	sw $t0, -112($fp)
	sw $t0, -112($fp)
	j end__734
true__734:
	lw $t0, -112($fp)
	li $t0, 1
	sw $t0, -112($fp)
	sw $t0, -112($fp)
end__734:
	lw $t0, -24($fp)
	lw $t1, -112($fp)
	lw $t2, -20($fp)
	add $t2, $t0, $t1
	lw $t3, -4($fp)
	lw $t4, -120($fp)
	lw $t9, 8($t3)
	lw $a0, 8($t9)
	lw $t8, 76($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t5, -0($fp)
	sw $t5, ($sp)
	addiu $sp, $sp, -4
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -24($fp)
	sw $t1, -112($fp)
	sw $t2, -20($fp)
	sw $t3, -4($fp)
	sw $t4, -120($fp)
	sw $t5, -0($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -120($fp)
	move $t0, $v0
	lw $t1, -124($fp)
	la $t1, data_24
	lw $t2, -116($fp)
	move $t8, $t0
	move $t9, $t1
loop_15:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_15
	beqz $a1, mismatch_15
	seq $v0, $a0, $a1
	beqz $v0, mismatch_15
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_15
mismatch_15:
	li $v0, 0
	j end_15
check_15:
	bnez $a1, mismatch_15
	li $v0, 1
end_15:
	move $t2, $v0
	sw $t0, -120($fp)
	sw $t1, -124($fp)
	sw $t2, -116($fp)
	bnez $t2, true__751
	lw $t0, -128($fp)
	li $t0, 0
	sw $t0, -128($fp)
	sw $t0, -128($fp)
	j end__751
true__751:
	lw $t0, -128($fp)
	li $t0, 1
	sw $t0, -128($fp)
	sw $t0, -128($fp)
end__751:
	lw $t0, -20($fp)
	lw $t1, -128($fp)
	lw $t2, -16($fp)
	add $t2, $t0, $t1
	lw $t3, -4($fp)
	lw $t4, -136($fp)
	lw $t9, 8($t3)
	lw $a0, 8($t9)
	lw $t8, 84($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t5, -0($fp)
	sw $t5, ($sp)
	addiu $sp, $sp, -4
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -20($fp)
	sw $t1, -128($fp)
	sw $t2, -16($fp)
	sw $t3, -4($fp)
	sw $t4, -136($fp)
	sw $t5, -0($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -136($fp)
	move $t0, $v0
	lw $t1, -140($fp)
	la $t1, data_25
	lw $t2, -132($fp)
	move $t8, $t0
	move $t9, $t1
loop_16:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_16
	beqz $a1, mismatch_16
	seq $v0, $a0, $a1
	beqz $v0, mismatch_16
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_16
mismatch_16:
	li $v0, 0
	j end_16
check_16:
	bnez $a1, mismatch_16
	li $v0, 1
end_16:
	move $t2, $v0
	sw $t0, -136($fp)
	sw $t1, -140($fp)
	sw $t2, -132($fp)
	bnez $t2, true__768
	lw $t0, -144($fp)
	li $t0, 0
	sw $t0, -144($fp)
	sw $t0, -144($fp)
	j end__768
true__768:
	lw $t0, -144($fp)
	li $t0, 1
	sw $t0, -144($fp)
	sw $t0, -144($fp)
end__768:
	lw $t0, -16($fp)
	lw $t1, -144($fp)
	lw $t2, -12($fp)
	add $t2, $t0, $t1
	lw $t3, -4($fp)
	lw $t4, -152($fp)
	lw $t9, 8($t3)
	lw $a0, 8($t9)
	lw $t8, 88($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t5, -0($fp)
	sw $t5, ($sp)
	addiu $sp, $sp, -4
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -16($fp)
	sw $t1, -144($fp)
	sw $t2, -12($fp)
	sw $t3, -4($fp)
	sw $t4, -152($fp)
	sw $t5, -0($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -152($fp)
	move $t0, $v0
	lw $t1, -156($fp)
	la $t1, data_26
	lw $t2, -148($fp)
	move $t8, $t0
	move $t9, $t1
loop_17:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_17
	beqz $a1, mismatch_17
	seq $v0, $a0, $a1
	beqz $v0, mismatch_17
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_17
mismatch_17:
	li $v0, 0
	j end_17
check_17:
	bnez $a1, mismatch_17
	li $v0, 1
end_17:
	move $t2, $v0
	sw $t0, -152($fp)
	sw $t1, -156($fp)
	sw $t2, -148($fp)
	bnez $t2, true__785
	lw $t0, -160($fp)
	li $t0, 0
	sw $t0, -160($fp)
	sw $t0, -160($fp)
	j end__785
true__785:
	lw $t0, -160($fp)
	li $t0, 1
	sw $t0, -160($fp)
	sw $t0, -160($fp)
end__785:
	lw $t0, -12($fp)
	lw $t1, -160($fp)
	lw $t2, -8($fp)
	add $t2, $t0, $t1
	lw $t3, -164($fp)
	move $t3, $t2
	sw $t3, -164($fp)
	move $v0, $t3
	sw $t0, -12($fp)
	sw $t1, -160($fp)
	sw $t2, -8($fp)
	sw $t3, -164($fp)
	addiu $sp, $sp, 168
	jr $ra


function_cell_at_next_evolution_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	lw $t1, -12($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 92($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t2, -0($fp)
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -12($fp)
	sw $t2, -0($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -12($fp)
	move $t0, $v0
	lw $t1, -8($fp)
	li $t9, 3
	seq $t1, $t0, $t9
	sw $t0, -12($fp)
	sw $t1, -8($fp)
	bnez $t1, true__805
	lw $t0, -4($fp)
	lw $t1, -24($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 92($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t2, -0($fp)
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -24($fp)
	sw $t2, -0($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -24($fp)
	move $t0, $v0
	lw $t1, -20($fp)
	li $t9, 2
	seq $t1, $t0, $t9
	sw $t0, -24($fp)
	sw $t1, -20($fp)
	bnez $t1, true__813
	lw $t0, -32($fp)
	la $t0, data_27
	lw $t1, -28($fp)
	move $t1, $t0
	sw $t1, -28($fp)
	sw $t0, -32($fp)
	sw $t1, -28($fp)
	j end__813
true__813:
	lw $t0, -4($fp)
	lw $t1, -40($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 56($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t2, -0($fp)
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -40($fp)
	sw $t2, -0($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -40($fp)
	move $t0, $v0
	lw $t1, -44($fp)
	la $t1, data_28
	lw $t2, -36($fp)
	move $t8, $t0
	move $t9, $t1
loop_18:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_18
	beqz $a1, mismatch_18
	seq $v0, $a0, $a1
	beqz $v0, mismatch_18
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_18
mismatch_18:
	li $v0, 0
	j end_18
check_18:
	bnez $a1, mismatch_18
	li $v0, 1
end_18:
	move $t2, $v0
	sw $t0, -40($fp)
	sw $t1, -44($fp)
	sw $t2, -36($fp)
	bnez $t2, true__830
	lw $t0, -52($fp)
	la $t0, data_29
	lw $t1, -48($fp)
	move $t1, $t0
	sw $t1, -48($fp)
	sw $t0, -52($fp)
	sw $t1, -48($fp)
	j end__830
true__830:
	lw $t0, -56($fp)
	la $t0, data_30
	lw $t1, -48($fp)
	move $t1, $t0
	sw $t1, -48($fp)
	sw $t0, -56($fp)
	sw $t1, -48($fp)
end__830:
	lw $t0, -48($fp)
	lw $t1, -28($fp)
	move $t1, $t0
	sw $t1, -28($fp)
	sw $t0, -48($fp)
	sw $t1, -28($fp)
end__813:
	lw $t0, -28($fp)
	lw $t1, -16($fp)
	move $t1, $t0
	sw $t1, -16($fp)
	sw $t0, -28($fp)
	sw $t1, -16($fp)
	j end__805
true__805:
	lw $t0, -60($fp)
	la $t0, data_31
	lw $t1, -16($fp)
	move $t1, $t0
	sw $t1, -16($fp)
	sw $t0, -60($fp)
	sw $t1, -16($fp)
end__805:
	lw $t0, -16($fp)
	move $v0, $t0
	sw $t0, -16($fp)
	addiu $sp, $sp, 64
	jr $ra


function_evolve_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	li $t0, 0
	sw $t0, -4($fp)
	lw $t1, -0($fp)
	lw $t2, -12($fp)
	lw $t9, 8($t1)
	lw $a0, 8($t9)
	lw $t8, 52($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -0($fp)
	sw $t2, -12($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -12($fp)
	move $t0, $v0
	lw $t1, -8($fp)
	move $t1, $t0
	sw $t1, -8($fp)
	lw $t2, -20($fp)
	la $t2, data_32
	lw $t3, -16($fp)
	move $t3, $t2
	sw $t3, -16($fp)
	lw $t4, -24($fp)
	li $a0, 4
	li $v0, 9
	syscall
	la $t9, type_Void
	sw $t9, 0($v0)
	move $t4, $v0
	sw $t0, -12($fp)
	sw $t1, -8($fp)
	sw $t2, -20($fp)
	sw $t3, -16($fp)
	sw $t4, -24($fp)
start__868:
	lw $t0, -4($fp)
	lw $t1, -8($fp)
	lw $t2, -28($fp)
	slt $t2, $t0, $t1
	sw $t0, -4($fp)
	sw $t1, -8($fp)
	sw $t2, -28($fp)
	beqz $t2, end__868
	lw $t0, -0($fp)
	lw $t1, -32($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 96($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t2, -4($fp)
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -0($fp)
	sw $t1, -32($fp)
	sw $t2, -4($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -32($fp)
	move $t0, $v0
	lw $t1, -16($fp)
	lw $t2, -40($fp)
	la $t2, type_String
	lw $t3, -44($fp)
	la $t3, data_0
	move $t8, $t2
	move $t9, $t3
loop_19:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_19
	beqz $a1, mismatch_19
	seq $v0, $a0, $a1
	beqz $v0, mismatch_19
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_19
mismatch_19:
	li $v0, 0
	j end_19
check_19:
	bnez $a1, mismatch_19
	li $v0, 1
end_19:
	move $t2, $v0
	sw $t0, -32($fp)
	sw $t1, -16($fp)
	sw $t2, -40($fp)
	sw $t3, -44($fp)
	beqz $t2, continue__881
	la $a0, dispatch_error
	j .raise
continue__881:
	lw $t0, -36($fp)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t1, -32($fp)
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	lw $t2, -16($fp)
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -36($fp)
	sw $t1, -32($fp)
	sw $t2, -16($fp)
	jal function_concat_String
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -36($fp)
	move $t0, $v0
	lw $t1, -16($fp)
	move $t1, $t0
	sw $t1, -16($fp)
	lw $t2, -4($fp)
	lw $t3, -48($fp)
	addi $t3, $t2, 1
	move $t2, $t3
	sw $t2, -4($fp)
	lw $t4, -52($fp)
	move $t4, $t3
	sw $t4, -52($fp)
	lw $t5, -24($fp)
	move $t5, $t4
	sw $t5, -24($fp)
	sw $t0, -36($fp)
	sw $t1, -16($fp)
	sw $t2, -4($fp)
	sw $t3, -48($fp)
	sw $t4, -52($fp)
	sw $t5, -24($fp)
	j start__868
end__868:
	lw $t0, -16($fp)
	lw $t1, -0($fp)
	sw $t0, 24($t1)
	lw $t2, -56($fp)
	move $t2, $t1
	sw $t2, -56($fp)
	move $v0, $t2
	sw $t0, -16($fp)
	sw $t1, -0($fp)
	sw $t2, -56($fp)
	addiu $sp, $sp, 60
	jr $ra


function_option_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	li $t0, 0
	sw $t0, -4($fp)
	lw $t1, -8($fp)
	la $t1, data_33
	lw $t2, -0($fp)
	lw $t3, -12($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -8($fp)
	sw $t2, -0($fp)
	sw $t3, -12($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -12($fp)
	move $t0, $v0
	lw $t1, -16($fp)
	la $t1, data_34
	lw $t2, -0($fp)
	lw $t3, -20($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -12($fp)
	sw $t1, -16($fp)
	sw $t2, -0($fp)
	sw $t3, -20($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -20($fp)
	move $t0, $v0
	lw $t1, -24($fp)
	la $t1, data_35
	lw $t2, -0($fp)
	lw $t3, -28($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -20($fp)
	sw $t1, -24($fp)
	sw $t2, -0($fp)
	sw $t3, -28($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -28($fp)
	move $t0, $v0
	lw $t1, -32($fp)
	la $t1, data_36
	lw $t2, -0($fp)
	lw $t3, -36($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -28($fp)
	sw $t1, -32($fp)
	sw $t2, -0($fp)
	sw $t3, -36($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -36($fp)
	move $t0, $v0
	lw $t1, -40($fp)
	la $t1, data_37
	lw $t2, -0($fp)
	lw $t3, -44($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -36($fp)
	sw $t1, -40($fp)
	sw $t2, -0($fp)
	sw $t3, -44($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -44($fp)
	move $t0, $v0
	lw $t1, -48($fp)
	la $t1, data_38
	lw $t2, -0($fp)
	lw $t3, -52($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -44($fp)
	sw $t1, -48($fp)
	sw $t2, -0($fp)
	sw $t3, -52($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -52($fp)
	move $t0, $v0
	lw $t1, -56($fp)
	la $t1, data_39
	lw $t2, -0($fp)
	lw $t3, -60($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -52($fp)
	sw $t1, -56($fp)
	sw $t2, -0($fp)
	sw $t3, -60($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -60($fp)
	move $t0, $v0
	lw $t1, -64($fp)
	la $t1, data_40
	lw $t2, -0($fp)
	lw $t3, -68($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -60($fp)
	sw $t1, -64($fp)
	sw $t2, -0($fp)
	sw $t3, -68($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -68($fp)
	move $t0, $v0
	lw $t1, -72($fp)
	la $t1, data_41
	lw $t2, -0($fp)
	lw $t3, -76($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -68($fp)
	sw $t1, -72($fp)
	sw $t2, -0($fp)
	sw $t3, -76($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -76($fp)
	move $t0, $v0
	lw $t1, -80($fp)
	la $t1, data_42
	lw $t2, -0($fp)
	lw $t3, -84($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -76($fp)
	sw $t1, -80($fp)
	sw $t2, -0($fp)
	sw $t3, -84($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -84($fp)
	move $t0, $v0
	lw $t1, -88($fp)
	la $t1, data_43
	lw $t2, -0($fp)
	lw $t3, -92($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -84($fp)
	sw $t1, -88($fp)
	sw $t2, -0($fp)
	sw $t3, -92($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -92($fp)
	move $t0, $v0
	lw $t1, -96($fp)
	la $t1, data_44
	lw $t2, -0($fp)
	lw $t3, -100($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -92($fp)
	sw $t1, -96($fp)
	sw $t2, -0($fp)
	sw $t3, -100($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -100($fp)
	move $t0, $v0
	lw $t1, -104($fp)
	la $t1, data_45
	lw $t2, -0($fp)
	lw $t3, -108($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -100($fp)
	sw $t1, -104($fp)
	sw $t2, -0($fp)
	sw $t3, -108($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -108($fp)
	move $t0, $v0
	lw $t1, -112($fp)
	la $t1, data_46
	lw $t2, -0($fp)
	lw $t3, -116($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -108($fp)
	sw $t1, -112($fp)
	sw $t2, -0($fp)
	sw $t3, -116($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -116($fp)
	move $t0, $v0
	lw $t1, -120($fp)
	la $t1, data_47
	lw $t2, -0($fp)
	lw $t3, -124($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -116($fp)
	sw $t1, -120($fp)
	sw $t2, -0($fp)
	sw $t3, -124($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -124($fp)
	move $t0, $v0
	lw $t1, -128($fp)
	la $t1, data_48
	lw $t2, -0($fp)
	lw $t3, -132($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -124($fp)
	sw $t1, -128($fp)
	sw $t2, -0($fp)
	sw $t3, -132($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -132($fp)
	move $t0, $v0
	lw $t1, -136($fp)
	la $t1, data_49
	lw $t2, -0($fp)
	lw $t3, -140($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -132($fp)
	sw $t1, -136($fp)
	sw $t2, -0($fp)
	sw $t3, -140($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -140($fp)
	move $t0, $v0
	lw $t1, -144($fp)
	la $t1, data_50
	lw $t2, -0($fp)
	lw $t3, -148($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -140($fp)
	sw $t1, -144($fp)
	sw $t2, -0($fp)
	sw $t3, -148($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -148($fp)
	move $t0, $v0
	lw $t1, -152($fp)
	la $t1, data_51
	lw $t2, -0($fp)
	lw $t3, -156($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -148($fp)
	sw $t1, -152($fp)
	sw $t2, -0($fp)
	sw $t3, -156($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -156($fp)
	move $t0, $v0
	lw $t1, -160($fp)
	la $t1, data_52
	lw $t2, -0($fp)
	lw $t3, -164($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -156($fp)
	sw $t1, -160($fp)
	sw $t2, -0($fp)
	sw $t3, -164($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -164($fp)
	move $t0, $v0
	lw $t1, -168($fp)
	la $t1, data_53
	lw $t2, -0($fp)
	lw $t3, -172($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -164($fp)
	sw $t1, -168($fp)
	sw $t2, -0($fp)
	sw $t3, -172($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -172($fp)
	move $t0, $v0
	lw $t1, -176($fp)
	la $t1, data_54
	lw $t2, -0($fp)
	lw $t3, -180($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -172($fp)
	sw $t1, -176($fp)
	sw $t2, -0($fp)
	sw $t3, -180($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -180($fp)
	move $t0, $v0
	lw $t1, -184($fp)
	la $t1, data_55
	lw $t2, -0($fp)
	lw $t3, -188($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -180($fp)
	sw $t1, -184($fp)
	sw $t2, -0($fp)
	sw $t3, -188($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -188($fp)
	move $t0, $v0
	lw $t1, -0($fp)
	lw $t2, -192($fp)
	lw $t9, 8($t1)
	lw $a0, 8($t9)
	lw $t8, 28($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -188($fp)
	sw $t1, -0($fp)
	sw $t2, -192($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -192($fp)
	move $t0, $v0
	lw $t1, -4($fp)
	move $t1, $t0
	sw $t1, -4($fp)
	lw $t2, -196($fp)
	la $t2, data_56
	lw $t3, -0($fp)
	lw $t4, -200($fp)
	lw $t9, 8($t3)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -192($fp)
	sw $t1, -4($fp)
	sw $t2, -196($fp)
	sw $t3, -0($fp)
	sw $t4, -200($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -200($fp)
	move $t0, $v0
	lw $t1, -4($fp)
	lw $t2, -204($fp)
	li $t9, 1
	seq $t2, $t1, $t9
	sw $t0, -200($fp)
	sw $t1, -4($fp)
	sw $t2, -204($fp)
	bnez $t2, true__1082
	lw $t0, -4($fp)
	lw $t1, -212($fp)
	li $t9, 2
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -212($fp)
	bnez $t1, true__1086
	lw $t0, -4($fp)
	lw $t1, -220($fp)
	li $t9, 3
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -220($fp)
	bnez $t1, true__1090
	lw $t0, -4($fp)
	lw $t1, -228($fp)
	li $t9, 4
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -228($fp)
	bnez $t1, true__1094
	lw $t0, -4($fp)
	lw $t1, -236($fp)
	li $t9, 5
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -236($fp)
	bnez $t1, true__1098
	lw $t0, -4($fp)
	lw $t1, -244($fp)
	li $t9, 6
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -244($fp)
	bnez $t1, true__1102
	lw $t0, -4($fp)
	lw $t1, -252($fp)
	li $t9, 7
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -252($fp)
	bnez $t1, true__1106
	lw $t0, -4($fp)
	lw $t1, -260($fp)
	li $t9, 8
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -260($fp)
	bnez $t1, true__1110
	lw $t0, -4($fp)
	lw $t1, -268($fp)
	li $t9, 9
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -268($fp)
	bnez $t1, true__1114
	lw $t0, -4($fp)
	lw $t1, -276($fp)
	li $t9, 10
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -276($fp)
	bnez $t1, true__1118
	lw $t0, -4($fp)
	lw $t1, -284($fp)
	li $t9, 11
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -284($fp)
	bnez $t1, true__1122
	lw $t0, -4($fp)
	lw $t1, -292($fp)
	li $t9, 12
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -292($fp)
	bnez $t1, true__1126
	lw $t0, -4($fp)
	lw $t1, -300($fp)
	li $t9, 13
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -300($fp)
	bnez $t1, true__1130
	lw $t0, -4($fp)
	lw $t1, -308($fp)
	li $t9, 14
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -308($fp)
	bnez $t1, true__1134
	lw $t0, -4($fp)
	lw $t1, -316($fp)
	li $t9, 15
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -316($fp)
	bnez $t1, true__1138
	lw $t0, -4($fp)
	lw $t1, -324($fp)
	li $t9, 16
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -324($fp)
	bnez $t1, true__1142
	lw $t0, -4($fp)
	lw $t1, -332($fp)
	li $t9, 17
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -332($fp)
	bnez $t1, true__1146
	lw $t0, -4($fp)
	lw $t1, -340($fp)
	li $t9, 18
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -340($fp)
	bnez $t1, true__1150
	lw $t0, -4($fp)
	lw $t1, -348($fp)
	li $t9, 19
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -348($fp)
	bnez $t1, true__1154
	lw $t0, -4($fp)
	lw $t1, -356($fp)
	li $t9, 20
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -356($fp)
	bnez $t1, true__1158
	lw $t0, -4($fp)
	lw $t1, -364($fp)
	li $t9, 21
	seq $t1, $t0, $t9
	sw $t0, -4($fp)
	sw $t1, -364($fp)
	bnez $t1, true__1162
	lw $t0, -372($fp)
	la $t0, data_57
	lw $t1, -368($fp)
	move $t1, $t0
	sw $t1, -368($fp)
	sw $t0, -372($fp)
	sw $t1, -368($fp)
	j end__1162
true__1162:
	lw $t0, -376($fp)
	la $t0, data_58
	lw $t1, -368($fp)
	move $t1, $t0
	sw $t1, -368($fp)
	sw $t0, -376($fp)
	sw $t1, -368($fp)
end__1162:
	lw $t0, -368($fp)
	lw $t1, -360($fp)
	move $t1, $t0
	sw $t1, -360($fp)
	sw $t0, -368($fp)
	sw $t1, -360($fp)
	j end__1158
true__1158:
	lw $t0, -380($fp)
	la $t0, data_59
	lw $t1, -360($fp)
	move $t1, $t0
	sw $t1, -360($fp)
	sw $t0, -380($fp)
	sw $t1, -360($fp)
end__1158:
	lw $t0, -360($fp)
	lw $t1, -352($fp)
	move $t1, $t0
	sw $t1, -352($fp)
	sw $t0, -360($fp)
	sw $t1, -352($fp)
	j end__1154
true__1154:
	lw $t0, -384($fp)
	la $t0, data_60
	lw $t1, -352($fp)
	move $t1, $t0
	sw $t1, -352($fp)
	sw $t0, -384($fp)
	sw $t1, -352($fp)
end__1154:
	lw $t0, -352($fp)
	lw $t1, -344($fp)
	move $t1, $t0
	sw $t1, -344($fp)
	sw $t0, -352($fp)
	sw $t1, -344($fp)
	j end__1150
true__1150:
	lw $t0, -388($fp)
	la $t0, data_61
	lw $t1, -344($fp)
	move $t1, $t0
	sw $t1, -344($fp)
	sw $t0, -388($fp)
	sw $t1, -344($fp)
end__1150:
	lw $t0, -344($fp)
	lw $t1, -336($fp)
	move $t1, $t0
	sw $t1, -336($fp)
	sw $t0, -344($fp)
	sw $t1, -336($fp)
	j end__1146
true__1146:
	lw $t0, -392($fp)
	la $t0, data_62
	lw $t1, -336($fp)
	move $t1, $t0
	sw $t1, -336($fp)
	sw $t0, -392($fp)
	sw $t1, -336($fp)
end__1146:
	lw $t0, -336($fp)
	lw $t1, -328($fp)
	move $t1, $t0
	sw $t1, -328($fp)
	sw $t0, -336($fp)
	sw $t1, -328($fp)
	j end__1142
true__1142:
	lw $t0, -396($fp)
	la $t0, data_63
	lw $t1, -328($fp)
	move $t1, $t0
	sw $t1, -328($fp)
	sw $t0, -396($fp)
	sw $t1, -328($fp)
end__1142:
	lw $t0, -328($fp)
	lw $t1, -320($fp)
	move $t1, $t0
	sw $t1, -320($fp)
	sw $t0, -328($fp)
	sw $t1, -320($fp)
	j end__1138
true__1138:
	lw $t0, -400($fp)
	la $t0, data_64
	lw $t1, -320($fp)
	move $t1, $t0
	sw $t1, -320($fp)
	sw $t0, -400($fp)
	sw $t1, -320($fp)
end__1138:
	lw $t0, -320($fp)
	lw $t1, -312($fp)
	move $t1, $t0
	sw $t1, -312($fp)
	sw $t0, -320($fp)
	sw $t1, -312($fp)
	j end__1134
true__1134:
	lw $t0, -404($fp)
	la $t0, data_65
	lw $t1, -312($fp)
	move $t1, $t0
	sw $t1, -312($fp)
	sw $t0, -404($fp)
	sw $t1, -312($fp)
end__1134:
	lw $t0, -312($fp)
	lw $t1, -304($fp)
	move $t1, $t0
	sw $t1, -304($fp)
	sw $t0, -312($fp)
	sw $t1, -304($fp)
	j end__1130
true__1130:
	lw $t0, -408($fp)
	la $t0, data_66
	lw $t1, -304($fp)
	move $t1, $t0
	sw $t1, -304($fp)
	sw $t0, -408($fp)
	sw $t1, -304($fp)
end__1130:
	lw $t0, -304($fp)
	lw $t1, -296($fp)
	move $t1, $t0
	sw $t1, -296($fp)
	sw $t0, -304($fp)
	sw $t1, -296($fp)
	j end__1126
true__1126:
	lw $t0, -412($fp)
	la $t0, data_67
	lw $t1, -296($fp)
	move $t1, $t0
	sw $t1, -296($fp)
	sw $t0, -412($fp)
	sw $t1, -296($fp)
end__1126:
	lw $t0, -296($fp)
	lw $t1, -288($fp)
	move $t1, $t0
	sw $t1, -288($fp)
	sw $t0, -296($fp)
	sw $t1, -288($fp)
	j end__1122
true__1122:
	lw $t0, -416($fp)
	la $t0, data_68
	lw $t1, -288($fp)
	move $t1, $t0
	sw $t1, -288($fp)
	sw $t0, -416($fp)
	sw $t1, -288($fp)
end__1122:
	lw $t0, -288($fp)
	lw $t1, -280($fp)
	move $t1, $t0
	sw $t1, -280($fp)
	sw $t0, -288($fp)
	sw $t1, -280($fp)
	j end__1118
true__1118:
	lw $t0, -420($fp)
	la $t0, data_69
	lw $t1, -280($fp)
	move $t1, $t0
	sw $t1, -280($fp)
	sw $t0, -420($fp)
	sw $t1, -280($fp)
end__1118:
	lw $t0, -280($fp)
	lw $t1, -272($fp)
	move $t1, $t0
	sw $t1, -272($fp)
	sw $t0, -280($fp)
	sw $t1, -272($fp)
	j end__1114
true__1114:
	lw $t0, -424($fp)
	la $t0, data_70
	lw $t1, -272($fp)
	move $t1, $t0
	sw $t1, -272($fp)
	sw $t0, -424($fp)
	sw $t1, -272($fp)
end__1114:
	lw $t0, -272($fp)
	lw $t1, -264($fp)
	move $t1, $t0
	sw $t1, -264($fp)
	sw $t0, -272($fp)
	sw $t1, -264($fp)
	j end__1110
true__1110:
	lw $t0, -428($fp)
	la $t0, data_71
	lw $t1, -264($fp)
	move $t1, $t0
	sw $t1, -264($fp)
	sw $t0, -428($fp)
	sw $t1, -264($fp)
end__1110:
	lw $t0, -264($fp)
	lw $t1, -256($fp)
	move $t1, $t0
	sw $t1, -256($fp)
	sw $t0, -264($fp)
	sw $t1, -256($fp)
	j end__1106
true__1106:
	lw $t0, -432($fp)
	la $t0, data_72
	lw $t1, -256($fp)
	move $t1, $t0
	sw $t1, -256($fp)
	sw $t0, -432($fp)
	sw $t1, -256($fp)
end__1106:
	lw $t0, -256($fp)
	lw $t1, -248($fp)
	move $t1, $t0
	sw $t1, -248($fp)
	sw $t0, -256($fp)
	sw $t1, -248($fp)
	j end__1102
true__1102:
	lw $t0, -436($fp)
	la $t0, data_73
	lw $t1, -248($fp)
	move $t1, $t0
	sw $t1, -248($fp)
	sw $t0, -436($fp)
	sw $t1, -248($fp)
end__1102:
	lw $t0, -248($fp)
	lw $t1, -240($fp)
	move $t1, $t0
	sw $t1, -240($fp)
	sw $t0, -248($fp)
	sw $t1, -240($fp)
	j end__1098
true__1098:
	lw $t0, -440($fp)
	la $t0, data_74
	lw $t1, -240($fp)
	move $t1, $t0
	sw $t1, -240($fp)
	sw $t0, -440($fp)
	sw $t1, -240($fp)
end__1098:
	lw $t0, -240($fp)
	lw $t1, -232($fp)
	move $t1, $t0
	sw $t1, -232($fp)
	sw $t0, -240($fp)
	sw $t1, -232($fp)
	j end__1094
true__1094:
	lw $t0, -444($fp)
	la $t0, data_75
	lw $t1, -232($fp)
	move $t1, $t0
	sw $t1, -232($fp)
	sw $t0, -444($fp)
	sw $t1, -232($fp)
end__1094:
	lw $t0, -232($fp)
	lw $t1, -224($fp)
	move $t1, $t0
	sw $t1, -224($fp)
	sw $t0, -232($fp)
	sw $t1, -224($fp)
	j end__1090
true__1090:
	lw $t0, -448($fp)
	la $t0, data_76
	lw $t1, -224($fp)
	move $t1, $t0
	sw $t1, -224($fp)
	sw $t0, -448($fp)
	sw $t1, -224($fp)
end__1090:
	lw $t0, -224($fp)
	lw $t1, -216($fp)
	move $t1, $t0
	sw $t1, -216($fp)
	sw $t0, -224($fp)
	sw $t1, -216($fp)
	j end__1086
true__1086:
	lw $t0, -452($fp)
	la $t0, data_77
	lw $t1, -216($fp)
	move $t1, $t0
	sw $t1, -216($fp)
	sw $t0, -452($fp)
	sw $t1, -216($fp)
end__1086:
	lw $t0, -216($fp)
	lw $t1, -208($fp)
	move $t1, $t0
	sw $t1, -208($fp)
	sw $t0, -216($fp)
	sw $t1, -208($fp)
	j end__1082
true__1082:
	lw $t0, -456($fp)
	la $t0, data_78
	lw $t1, -208($fp)
	move $t1, $t0
	sw $t1, -208($fp)
	sw $t0, -456($fp)
	sw $t1, -208($fp)
end__1082:
	lw $t0, -208($fp)
	lw $t1, -460($fp)
	move $t1, $t0
	sw $t1, -460($fp)
	lw $t2, -464($fp)
	move $t2, $t1
	sw $t2, -464($fp)
	move $v0, $t2
	sw $t0, -208($fp)
	sw $t1, -460($fp)
	sw $t2, -464($fp)
	addiu $sp, $sp, 468
	jr $ra


function_prompt_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -8($fp)
	la $t0, data_79
	lw $t1, -4($fp)
	move $t1, $t0
	sw $t1, -4($fp)
	lw $t2, -12($fp)
	la $t2, data_80
	lw $t3, -0($fp)
	lw $t4, -16($fp)
	lw $t9, 8($t3)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -8($fp)
	sw $t1, -4($fp)
	sw $t2, -12($fp)
	sw $t3, -0($fp)
	sw $t4, -16($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -16($fp)
	move $t0, $v0
	lw $t1, -20($fp)
	la $t1, data_81
	lw $t2, -0($fp)
	lw $t3, -24($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -16($fp)
	sw $t1, -20($fp)
	sw $t2, -0($fp)
	sw $t3, -24($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -24($fp)
	move $t0, $v0
	lw $t1, -0($fp)
	lw $t2, -28($fp)
	lw $t9, 8($t1)
	lw $a0, 8($t9)
	lw $t8, 24($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -24($fp)
	sw $t1, -0($fp)
	sw $t2, -28($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -28($fp)
	move $t0, $v0
	lw $t1, -4($fp)
	move $t1, $t0
	sw $t1, -4($fp)
	lw $t2, -32($fp)
	la $t2, data_82
	lw $t3, -0($fp)
	lw $t4, -36($fp)
	lw $t9, 8($t3)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -28($fp)
	sw $t1, -4($fp)
	sw $t2, -32($fp)
	sw $t3, -0($fp)
	sw $t4, -36($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -36($fp)
	move $t0, $v0
	lw $t1, -44($fp)
	la $t1, data_83
	lw $t2, -4($fp)
	lw $t3, -40($fp)
	move $t8, $t2
	move $t9, $t1
loop_20:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_20
	beqz $a1, mismatch_20
	seq $v0, $a0, $a1
	beqz $v0, mismatch_20
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_20
mismatch_20:
	li $v0, 0
	j end_20
check_20:
	bnez $a1, mismatch_20
	li $v0, 1
end_20:
	move $t3, $v0
	sw $t0, -36($fp)
	sw $t1, -44($fp)
	sw $t2, -4($fp)
	sw $t3, -40($fp)
	bnez $t3, true__1377
	lw $t0, -48($fp)
	li $t0, 1
	sw $t0, -48($fp)
	sw $t0, -48($fp)
	j end__1377
true__1377:
	lw $t0, -48($fp)
	li $t0, 0
	sw $t0, -48($fp)
	sw $t0, -48($fp)
end__1377:
	lw $t0, -48($fp)
	lw $t1, -52($fp)
	move $t1, $t0
	sw $t1, -52($fp)
	lw $t2, -56($fp)
	move $t2, $t1
	sw $t2, -56($fp)
	move $v0, $t2
	sw $t0, -48($fp)
	sw $t1, -52($fp)
	sw $t2, -56($fp)
	addiu $sp, $sp, 60
	jr $ra


function_prompt2_CellularAutomaton:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -8($fp)
	la $t0, data_84
	lw $t1, -4($fp)
	move $t1, $t0
	sw $t1, -4($fp)
	lw $t2, -12($fp)
	la $t2, data_85
	lw $t3, -0($fp)
	lw $t4, -16($fp)
	lw $t9, 8($t3)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -8($fp)
	sw $t1, -4($fp)
	sw $t2, -12($fp)
	sw $t3, -0($fp)
	sw $t4, -16($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -16($fp)
	move $t0, $v0
	lw $t1, -20($fp)
	la $t1, data_86
	lw $t2, -0($fp)
	lw $t3, -24($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -16($fp)
	sw $t1, -20($fp)
	sw $t2, -0($fp)
	sw $t3, -24($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -24($fp)
	move $t0, $v0
	lw $t1, -28($fp)
	la $t1, data_87
	lw $t2, -0($fp)
	lw $t3, -32($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -24($fp)
	sw $t1, -28($fp)
	sw $t2, -0($fp)
	sw $t3, -32($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -32($fp)
	move $t0, $v0
	lw $t1, -0($fp)
	lw $t2, -36($fp)
	lw $t9, 8($t1)
	lw $a0, 8($t9)
	lw $t8, 24($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -32($fp)
	sw $t1, -0($fp)
	sw $t2, -36($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -36($fp)
	move $t0, $v0
	lw $t1, -4($fp)
	move $t1, $t0
	sw $t1, -4($fp)
	lw $t2, -44($fp)
	la $t2, data_88
	lw $t3, -40($fp)
	move $t8, $t1
	move $t9, $t2
loop_21:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_21
	beqz $a1, mismatch_21
	seq $v0, $a0, $a1
	beqz $v0, mismatch_21
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_21
mismatch_21:
	li $v0, 0
	j end_21
check_21:
	bnez $a1, mismatch_21
	li $v0, 1
end_21:
	move $t3, $v0
	sw $t0, -36($fp)
	sw $t1, -4($fp)
	sw $t2, -44($fp)
	sw $t3, -40($fp)
	bnez $t3, true__1426
	lw $t0, -48($fp)
	li $t0, 0
	sw $t0, -48($fp)
	sw $t0, -48($fp)
	j end__1426
true__1426:
	lw $t0, -48($fp)
	li $t0, 1
	sw $t0, -48($fp)
	sw $t0, -48($fp)
end__1426:
	lw $t0, -48($fp)
	lw $t1, -52($fp)
	move $t1, $t0
	sw $t1, -52($fp)
	move $v0, $t1
	sw $t0, -48($fp)
	sw $t1, -52($fp)
	addiu $sp, $sp, 56
	jr $ra


function_Main_Main:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -0($fp)
	li $t9, 0
	sw $t9, 12($t0)
	li $t9, 0
	sw $t9, 16($t0)
	li $t9, 0
	sw $t9, 20($t0)
	lw $t1, -4($fp)
	la $t1, data_89
	sw $t1, 24($t0)
	lw $t2, -8($fp)
	li $a0, 4
	li $v0, 9
	syscall
	la $t9, type_Void
	sw $t9, 0($v0)
	move $t2, $v0
	sw $t2, 28($t0)
	lw $t3, -12($fp)
	move $t3, $t0
	sw $t3, -12($fp)
	move $v0, $t3
	sw $t0, -0($fp)
	sw $t1, -4($fp)
	sw $t2, -8($fp)
	sw $t3, -12($fp)
	addiu $sp, $sp, 16
	jr $ra


function_main_Main:
	move $fp, $sp
	addiu $fp, $fp, 4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	addiu $sp, $sp, -4
	lw $t0, -4($fp)
	li $t0, 0
	sw $t0, -4($fp)
	lw $t1, -12($fp)
	la $t1, data_90
	lw $t2, -8($fp)
	move $t2, $t1
	sw $t2, -8($fp)
	lw $t3, -16($fp)
	la $t3, data_91
	lw $t4, -0($fp)
	lw $t5, -20($fp)
	lw $t9, 8($t4)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t3, ($sp)
	addiu $sp, $sp, -4
	sw $t4, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -12($fp)
	sw $t2, -8($fp)
	sw $t3, -16($fp)
	sw $t4, -0($fp)
	sw $t5, -20($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -20($fp)
	move $t0, $v0
	lw $t1, -24($fp)
	la $t1, data_92
	lw $t2, -0($fp)
	lw $t3, -28($fp)
	lw $t9, 8($t2)
	lw $a0, 8($t9)
	lw $t8, 16($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -20($fp)
	sw $t1, -24($fp)
	sw $t2, -0($fp)
	sw $t3, -28($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -28($fp)
	move $t0, $v0
	lw $t1, -32($fp)
	li $a0, 4
	li $v0, 9
	syscall
	la $t9, type_Void
	sw $t9, 0($v0)
	move $t1, $v0
	sw $t0, -28($fp)
	sw $t1, -32($fp)
start__1474:
	lw $t0, -0($fp)
	lw $t1, -36($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 112($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -0($fp)
	sw $t1, -36($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -36($fp)
	move $t0, $v0
	sw $t0, -36($fp)
	beqz $t0, end__1474
	lw $t0, -4($fp)
	li $t0, 1
	sw $t0, -4($fp)
	lw $t1, -0($fp)
	lw $t2, -40($fp)
	lw $t9, 8($t1)
	lw $a0, 8($t9)
	lw $t8, 104($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t1, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -4($fp)
	sw $t1, -0($fp)
	sw $t2, -40($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -40($fp)
	move $t0, $v0
	lw $t1, -8($fp)
	move $t1, $t0
	sw $t1, -8($fp)
	lw $t2, -44($fp)
	li $v0, 9
	li $a0, 28
	syscall
	la $t9, type_CellularAutomaton
	sw $t9, 0($v0)
	li $t9, 28
	sw $t9, 4($v0)
	move $t2, $v0
	la $t8, types
	lw $v0, 24($t8)
	sw $v0, 8($t2)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -40($fp)
	sw $t1, -8($fp)
	sw $t2, -44($fp)
	jal function_CellularAutomaton_CellularAutomaton
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -44($fp)
	move $t0, $v0
	lw $t1, -52($fp)
	lw $t1, 0($t0)
	lw $t2, -56($fp)
	la $t2, data_0
	move $t8, $t1
	move $t9, $t2
loop_22:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_22
	beqz $a1, mismatch_22
	seq $v0, $a0, $a1
	beqz $v0, mismatch_22
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_22
mismatch_22:
	li $v0, 0
	j end_22
check_22:
	bnez $a1, mismatch_22
	li $v0, 1
end_22:
	move $t1, $v0
	sw $t0, -44($fp)
	sw $t1, -52($fp)
	sw $t2, -56($fp)
	beqz $t1, continue__1492
	la $a0, dispatch_error
	j .raise
continue__1492:
	lw $t0, -44($fp)
	lw $t1, -48($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 44($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	lw $t2, -8($fp)
	sw $t2, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -44($fp)
	sw $t1, -48($fp)
	sw $t2, -8($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -48($fp)
	move $t0, $v0
	lw $t1, -0($fp)
	sw $t0, 28($t1)
	lw $t2, -60($fp)
	lw $t2, 28($t1)
	lw $t3, -68($fp)
	lw $t3, 0($t2)
	lw $t4, -72($fp)
	la $t4, data_0
	move $t8, $t3
	move $t9, $t4
loop_23:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_23
	beqz $a1, mismatch_23
	seq $v0, $a0, $a1
	beqz $v0, mismatch_23
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_23
mismatch_23:
	li $v0, 0
	j end_23
check_23:
	bnez $a1, mismatch_23
	li $v0, 1
end_23:
	move $t3, $v0
	sw $t0, -48($fp)
	sw $t1, -0($fp)
	sw $t2, -60($fp)
	sw $t3, -68($fp)
	sw $t4, -72($fp)
	beqz $t3, continue__1507
	la $a0, dispatch_error
	j .raise
continue__1507:
	lw $t0, -60($fp)
	lw $t1, -64($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 48($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -60($fp)
	sw $t1, -64($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -64($fp)
	move $t0, $v0
	lw $t1, -76($fp)
	li $a0, 4
	li $v0, 9
	syscall
	la $t9, type_Void
	sw $t9, 0($v0)
	move $t1, $v0
	sw $t0, -64($fp)
	sw $t1, -76($fp)
start__1517:
	lw $t0, -4($fp)
	sw $t0, -4($fp)
	beqz $t0, end__1517
	lw $t0, -0($fp)
	lw $t1, -80($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 108($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -0($fp)
	sw $t1, -80($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -80($fp)
	move $t0, $v0
	sw $t0, -80($fp)
	bnez $t0, true__1524
	lw $t0, -4($fp)
	li $t0, 0
	sw $t0, -4($fp)
	lw $t1, -84($fp)
	li $t1, 0
	sw $t1, -84($fp)
	sw $t0, -4($fp)
	sw $t1, -84($fp)
	j end__1524
true__1524:
	lw $t0, -0($fp)
	lw $t1, -88($fp)
	lw $t1, 28($t0)
	lw $t2, -96($fp)
	lw $t2, 0($t1)
	lw $t3, -100($fp)
	la $t3, data_0
	move $t8, $t2
	move $t9, $t3
loop_24:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_24
	beqz $a1, mismatch_24
	seq $v0, $a0, $a1
	beqz $v0, mismatch_24
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_24
mismatch_24:
	li $v0, 0
	j end_24
check_24:
	bnez $a1, mismatch_24
	li $v0, 1
end_24:
	move $t2, $v0
	sw $t0, -0($fp)
	sw $t1, -88($fp)
	sw $t2, -96($fp)
	sw $t3, -100($fp)
	beqz $t2, continue__1534
	la $a0, dispatch_error
	j .raise
continue__1534:
	lw $t0, -88($fp)
	lw $t1, -92($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 100($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -88($fp)
	sw $t1, -92($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -92($fp)
	move $t0, $v0
	lw $t1, -0($fp)
	lw $t2, -104($fp)
	lw $t2, 28($t1)
	lw $t3, -112($fp)
	lw $t3, 0($t2)
	lw $t4, -116($fp)
	la $t4, data_0
	move $t8, $t3
	move $t9, $t4
loop_25:
	lb $a0, ($t8)
	lb $a1, ($t9)
	beqz $a0, check_25
	beqz $a1, mismatch_25
	seq $v0, $a0, $a1
	beqz $v0, mismatch_25
	addi $t8, $t8, 1
	addi $t9, $t9, 1
	j loop_25
mismatch_25:
	li $v0, 0
	j end_25
check_25:
	bnez $a1, mismatch_25
	li $v0, 1
end_25:
	move $t3, $v0
	sw $t0, -92($fp)
	sw $t1, -0($fp)
	sw $t2, -104($fp)
	sw $t3, -112($fp)
	sw $t4, -116($fp)
	beqz $t3, continue__1548
	la $a0, dispatch_error
	j .raise
continue__1548:
	lw $t0, -104($fp)
	lw $t1, -108($fp)
	lw $t9, 8($t0)
	lw $a0, 8($t9)
	lw $t8, 48($a0)
	sw $fp, ($sp)
	addiu $sp, $sp, -4
	sw $ra, ($sp)
	addiu $sp, $sp, -4
	sw $t0, ($sp)
	addiu $sp, $sp, -4
	sw $t0, -104($fp)
	sw $t1, -108($fp)
	jal $t8
	addiu $sp, $sp, 4
	lw $ra, ($sp)
	addiu $sp, $sp, 4
	lw $fp, ($sp)
	lw $t0, -108($fp)
	move $t0, $v0
	lw $t1, -120($fp)
	move $t1, $t0
	sw $t1, -120($fp)
	lw $t2, -84($fp)
	move $t2, $t1
	sw $t2, -84($fp)
	sw $t0, -108($fp)
	sw $t1, -120($fp)
	sw $t2, -84($fp)
end__1524:
	lw $t0, -84($fp)
	lw $t1, -76($fp)
	move $t1, $t0
	sw $t1, -76($fp)
	sw $t0, -84($fp)
	sw $t1, -76($fp)
	j start__1517
end__1517:
	lw $t0, -76($fp)
	lw $t1, -124($fp)
	move $t1, $t0
	sw $t1, -124($fp)
	lw $t2, -32($fp)
	move $t2, $t1
	sw $t2, -32($fp)
	sw $t0, -76($fp)
	sw $t1, -124($fp)
	sw $t2, -32($fp)
	j start__1474
end__1474:
	lw $t0, -0($fp)
	lw $t1, -128($fp)
	move $t1, $t0
	sw $t1, -128($fp)
	lw $t2, -132($fp)
	move $t2, $t1
	sw $t2, -132($fp)
	move $v0, $t2
	sw $t0, -0($fp)
	sw $t1, -128($fp)
	sw $t2, -132($fp)
	addiu $sp, $sp, 136
	jr $ra

.raise:
	li $v0, 4
	syscall
	li $v0, 17
	li $a0, 1
	syscall
