	.data
default_str: .asciiz ""
Object: .asciiz "Object"
IO: .asciiz "IO"
String: .asciiz "String"
Int: .asciiz "Int"
Bool: .asciiz "Bool"
Board: .asciiz "Board"
CellularAutomaton: .asciiz "CellularAutomaton"
Main: .asciiz "Main"
data_0: .asciiz "Abort called from class "
data_1: .asciiz "
"
data_2: .asciiz "Substring out of range"
data_3: .asciiz "(52,0) - RuntimeError: Dispatch on void
"
data_4: .asciiz "(56,0) - RuntimeError: Dispatch on void
"
data_5: .asciiz "(116,0) - RuntimeError: Dispatch on void
"
data_6: .asciiz "(129,0) - RuntimeError: Dispatch on void
"
data_7: .asciiz "(132,0) - RuntimeError: Dispatch on void
"
data_8: .asciiz "(132,0) - RuntimeError: Dispatch on void
"
data_9: .asciiz "(133,0) - RuntimeError: Dispatch on void
"
data_10: .asciiz "(137,0) - RuntimeError: Dispatch on void
"
data_11: .asciiz "(144,0) - RuntimeError: Dispatch on void
"
data_12: .asciiz " "
data_13: .asciiz "(151,0) - RuntimeError: Dispatch on void
"
data_14: .asciiz "(159,0) - RuntimeError: Dispatch on void
"
data_15: .asciiz "(167,0) - RuntimeError: Dispatch on void
"
data_16: .asciiz "(175,0) - RuntimeError: Dispatch on void
"
data_17: .asciiz "(186,0) - RuntimeError: Dispatch on void
"
data_18: .asciiz "(196,0) - RuntimeError: Dispatch on void
"
data_19: .asciiz "(206,0) - RuntimeError: Dispatch on void
"
data_20: .asciiz "(216,0) - RuntimeError: Dispatch on void
"
data_21: .asciiz "(226,0) - RuntimeError: Dispatch on void
"
data_22: .asciiz "(232,0) - RuntimeError: Dispatch on void
"
data_23: .asciiz "X"
data_24: .asciiz "(233,0) - RuntimeError: Dispatch on void
"
data_25: .asciiz "(234,0) - RuntimeError: Dispatch on void
"
data_26: .asciiz "(235,0) - RuntimeError: Dispatch on void
"
data_27: .asciiz "(236,0) - RuntimeError: Dispatch on void
"
data_28: .asciiz "(237,0) - RuntimeError: Dispatch on void
"
data_29: .asciiz "(238,0) - RuntimeError: Dispatch on void
"
data_30: .asciiz "(239,0) - RuntimeError: Dispatch on void
"
data_31: .asciiz "(249,0) - RuntimeError: Dispatch on void
"
data_32: .asciiz "(252,0) - RuntimeError: Dispatch on void
"
data_33: .asciiz "(253,0) - RuntimeError: Dispatch on void
"
data_34: .asciiz "-"
data_35: .asciiz "(266,0) - RuntimeError: Dispatch on void
"
data_36: .asciiz "(271,0) - RuntimeError: Dispatch on void
"
data_37: .asciiz "(271,0) - RuntimeError: Dispatch on void
"
data_38: .asciiz "
Please chose a number:
"
data_39: .asciiz "(288,0) - RuntimeError: Dispatch on void
"
data_40: .asciiz "	1: A cross
"
data_41: .asciiz "(289,0) - RuntimeError: Dispatch on void
"
data_42: .asciiz "	2: A slash from the upper left to lower right
"
data_43: .asciiz "(290,0) - RuntimeError: Dispatch on void
"
data_44: .asciiz "	3: A slash from the upper right to lower left
"
data_45: .asciiz "(291,0) - RuntimeError: Dispatch on void
"
data_46: .asciiz "	4: An X
"
data_47: .asciiz "(292,0) - RuntimeError: Dispatch on void
"
data_48: .asciiz "	5: A greater than sign 
"
data_49: .asciiz "(293,0) - RuntimeError: Dispatch on void
"
data_50: .asciiz "	6: A less than sign
"
data_51: .asciiz "(294,0) - RuntimeError: Dispatch on void
"
data_52: .asciiz "	7: Two greater than signs
"
data_53: .asciiz "(295,0) - RuntimeError: Dispatch on void
"
data_54: .asciiz "	8: Two less than signs
"
data_55: .asciiz "(296,0) - RuntimeError: Dispatch on void
"
data_56: .asciiz "	9: A 'V'
"
data_57: .asciiz "(297,0) - RuntimeError: Dispatch on void
"
data_58: .asciiz "	10: An inverse 'V'
"
data_59: .asciiz "(298,0) - RuntimeError: Dispatch on void
"
data_60: .asciiz "	11: Numbers 9 and 10 combined
"
data_61: .asciiz "(299,0) - RuntimeError: Dispatch on void
"
data_62: .asciiz "	12: A full grid
"
data_63: .asciiz "(300,0) - RuntimeError: Dispatch on void
"
data_64: .asciiz "	13: A 'T'
"
data_65: .asciiz "(301,0) - RuntimeError: Dispatch on void
"
data_66: .asciiz "	14: A plus '+'
"
data_67: .asciiz "(302,0) - RuntimeError: Dispatch on void
"
data_68: .asciiz "	15: A 'W'
"
data_69: .asciiz "(303,0) - RuntimeError: Dispatch on void
"
data_70: .asciiz "	16: An 'M'
"
data_71: .asciiz "(304,0) - RuntimeError: Dispatch on void
"
data_72: .asciiz "	17: An 'E'
"
data_73: .asciiz "(305,0) - RuntimeError: Dispatch on void
"
data_74: .asciiz "	18: A '3'
"
data_75: .asciiz "(306,0) - RuntimeError: Dispatch on void
"
data_76: .asciiz "	19: An 'O'
"
data_77: .asciiz "(307,0) - RuntimeError: Dispatch on void
"
data_78: .asciiz "	20: An '8'
"
data_79: .asciiz "(308,0) - RuntimeError: Dispatch on void
"
data_80: .asciiz "	21: An 'S'
"
data_81: .asciiz "(309,0) - RuntimeError: Dispatch on void
"
data_82: .asciiz "Your choice => "
data_83: .asciiz "(310,0) - RuntimeError: Dispatch on void
"
data_84: .asciiz "(311,0) - RuntimeError: Dispatch on void
"
data_85: .asciiz "(312,0) - RuntimeError: Dispatch on void
"
data_86: .asciiz " XX  XXXX XXXX  XX  "
data_87: .asciiz "    X   X   X   X   X    "
data_88: .asciiz "X     X     X     X     X"
data_89: .asciiz "X   X X X   X   X X X   X"
data_90: .asciiz "X     X     X   X   X    "
data_91: .asciiz "    X   X   X     X     X"
data_92: .asciiz "X  X  X  XX  X      "
data_93: .asciiz " X  XX  X  X  X     "
data_94: .asciiz "X   X X X   X  "
data_95: .asciiz "  X   X X X   X"
data_96: .asciiz "X X X X X X X X"
data_97: .asciiz "XXXXXXXXXXXXXXXXXXXXXXXXX"
data_98: .asciiz "XXXXX  X    X    X    X  "
data_99: .asciiz "  X    X  XXXXX  X    X  "
data_100: .asciiz "X     X X X X   X X  "
data_101: .asciiz "  X X   X X X X     X"
data_102: .asciiz "XXXXX   X   XXXXX   X   XXXX"
data_103: .asciiz "XXX    X   X  X    X   XXXX "
data_104: .asciiz " XX X  XX  X XX "
data_105: .asciiz " XX X  XX  X XX X  XX  X XX "
data_106: .asciiz " XXXX   X    XX    X   XXXX "
data_107: .asciiz "                         "
data_108: .asciiz "Would you like to continue with the next generation? 
"
data_109: .asciiz "(370,0) - RuntimeError: Dispatch on void
"
data_110: .asciiz "Please use lowercase y or n for your answer [y]: "
data_111: .asciiz "(371,0) - RuntimeError: Dispatch on void
"
data_112: .asciiz "(372,0) - RuntimeError: Dispatch on void
"
data_113: .asciiz "(373,0) - RuntimeError: Dispatch on void
"
data_114: .asciiz "n"
data_115: .asciiz "

"
data_116: .asciiz "(388,0) - RuntimeError: Dispatch on void
"
data_117: .asciiz "Would you like to choose a background pattern? 
"
data_118: .asciiz "(389,0) - RuntimeError: Dispatch on void
"
data_119: .asciiz "Please use lowercase y or n for your answer [n]: "
data_120: .asciiz "(390,0) - RuntimeError: Dispatch on void
"
data_121: .asciiz "(391,0) - RuntimeError: Dispatch on void
"
data_122: .asciiz "y"
data_123: .asciiz "Welcome to the Game of Life.
"
data_124: .asciiz "(412,0) - RuntimeError: Dispatch on void
"
data_125: .asciiz "There are many initial states to choose from. 
"
data_126: .asciiz "(413,0) - RuntimeError: Dispatch on void
"
data_127: .asciiz "(414,0) - RuntimeError: Dispatch on void
"
data_128: .asciiz "(417,0) - RuntimeError: Dispatch on void
"
data_129: .asciiz "(418,0) - RuntimeError: Dispatch on void
"
data_130: .asciiz "(419,0) - RuntimeError: Dispatch on void
"
data_131: .asciiz "(421,0) - RuntimeError: Dispatch on void
"
data_132: .asciiz "(423,0) - RuntimeError: Dispatch on void
"
data_133: .asciiz "(424,0) - RuntimeError: Dispatch on void
"

type_name_table:
	.word	Object
	.word	IO
	.word	String
	.word	Int
	.word	Bool
	.word	Board
	.word	CellularAutomaton
	.word	Main

shells_table:
	.word	type_Object_shell
	.word	type_IO_shell
	.word	type_String_shell
	.word	type_Int_shell
	.word	type_Bool_shell
	.word	type_Board_shell
	.word	type_CellularAutomaton_shell
	.word	type_Main_shell

type_Object_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 init_at_Object

type_Object_shell:
	.word	0
	.word	4
	.word	type_Object_dispatch


type_IO_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 function_out_string_at_IO
	.word	 function_out_int_at_IO
	.word	 function_in_string_at_IO
	.word	 function_in_int_at_IO
	.word	 init_at_IO

type_IO_shell:
	.word	1
	.word	4
	.word	type_IO_dispatch


type_String_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 function_length_at_String
	.word	 function_concat_at_String
	.word	 function_substr_at_String
	.word	 init_at_String

type_String_shell:
	.word	2
	.word	6
	.word	type_String_dispatch
	.word	default_str
	.word	type_Int_shell


type_Int_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 init_at_Int

type_Int_shell:
	.word	3
	.word	5
	.word	type_Int_dispatch
	.word	0


type_Bool_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 init_at_Bool

type_Bool_shell:
	.word	4
	.word	5
	.word	type_Bool_dispatch
	.word	0


type_Board_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 function_out_string_at_IO
	.word	 function_out_int_at_IO
	.word	 function_in_string_at_IO
	.word	 function_in_int_at_IO
	.word	 function_size_of_board_at_Board
	.word	 function_board_init_at_Board

type_Board_shell:
	.word	5
	.word	7
	.word	type_Board_dispatch
	.word	0
	.word	0
	.word	0


type_CellularAutomaton_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 function_out_string_at_IO
	.word	 function_out_int_at_IO
	.word	 function_in_string_at_IO
	.word	 function_in_int_at_IO
	.word	 function_size_of_board_at_Board
	.word	 function_board_init_at_Board
	.word	 function_init_at_CellularAutomaton
	.word	 function_print_at_CellularAutomaton
	.word	 function_num_cells_at_CellularAutomaton
	.word	 function_cell_at_CellularAutomaton
	.word	 function_north_at_CellularAutomaton
	.word	 function_south_at_CellularAutomaton
	.word	 function_east_at_CellularAutomaton
	.word	 function_west_at_CellularAutomaton
	.word	 function_northwest_at_CellularAutomaton
	.word	 function_northeast_at_CellularAutomaton
	.word	 function_southeast_at_CellularAutomaton
	.word	 function_southwest_at_CellularAutomaton
	.word	 function_neighbors_at_CellularAutomaton
	.word	 function_cell_at_next_evolution_at_CellularAutomaton
	.word	 function_evolve_at_CellularAutomaton
	.word	 function_option_at_CellularAutomaton
	.word	 function_prompt_at_CellularAutomaton
	.word	 function_prompt2_at_CellularAutomaton

type_CellularAutomaton_shell:
	.word	6
	.word	8
	.word	type_CellularAutomaton_dispatch
	.word	0
	.word	0
	.word	0
	.word	0


type_Main_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 function_out_string_at_IO
	.word	 function_out_int_at_IO
	.word	 function_in_string_at_IO
	.word	 function_in_int_at_IO
	.word	 function_size_of_board_at_Board
	.word	 function_board_init_at_Board
	.word	 function_init_at_CellularAutomaton
	.word	 function_print_at_CellularAutomaton
	.word	 function_num_cells_at_CellularAutomaton
	.word	 function_cell_at_CellularAutomaton
	.word	 function_north_at_CellularAutomaton
	.word	 function_south_at_CellularAutomaton
	.word	 function_east_at_CellularAutomaton
	.word	 function_west_at_CellularAutomaton
	.word	 function_northwest_at_CellularAutomaton
	.word	 function_northeast_at_CellularAutomaton
	.word	 function_southeast_at_CellularAutomaton
	.word	 function_southwest_at_CellularAutomaton
	.word	 function_neighbors_at_CellularAutomaton
	.word	 function_cell_at_next_evolution_at_CellularAutomaton
	.word	 function_evolve_at_CellularAutomaton
	.word	 function_option_at_CellularAutomaton
	.word	 function_prompt_at_CellularAutomaton
	.word	 function_prompt2_at_CellularAutomaton
	.word	 function_main_at_Main

type_Main_shell:
	.word	7
	.word	9
	.word	type_Main_dispatch
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0

	.text
	.globl main
main:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	jal init_at_Main
	sw $v0, -16($fp)
	lw $a0, -16($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal function_main_at_Main
	sw $v0, -12($fp)
	addi $sp, $sp, 4
	li $v0, 0
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	li $v0, 10
	syscall
init_at_Object:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	li $a0, 0
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_abort_at_Object:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	la $a0, data_0 + 0
	sw $a0, -12($fp)
	li $v0, 4
	lw $a0, -12($fp)
	syscall
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -12($fp)
	li $v0, 4
	lw $a0, -12($fp)
	syscall
	la $a0, data_1 + 0
	sw $a0, -12($fp)
	li $v0, 4
	lw $a0, -12($fp)
	syscall
	li $v0, 10
	syscall
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_type_name_at_Object:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -16($fp)
	addi $sp, $sp, 4
	lw $v0, -16($fp)
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_copy_at_Object:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	lw $a0, 0($fp)
	lw $a0, 4($a0)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a0
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_at_IO:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	li $a0, 1
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_out_string_at_IO:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -12($fp)
	li $v0, 4
	lw $a0, -12($fp)
	syscall
	lw $v0, 4($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_out_int_at_IO:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -12($fp)
	li $v0, 1
	lw $a0, -12($fp)
	syscall
	lw $v0, 4($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_in_string_at_IO:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	jal read_str
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -16($fp)
	addi $sp, $sp, 4
	lw $v0, -16($fp)
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_in_int_at_IO:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	li $v0, 5
	syscall
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -16($fp)
	addi $sp, $sp, 4
	lw $v0, -16($fp)
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_at_String:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -12
	li $a0, 2
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	lw $a1, 0($fp)
	sw $a1, 12($a0)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, 0($fp)
	move $a0 $a0
	jal len
	sw $v0, -16($fp)
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	lw $a0, -16($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -20($fp)
	addi $sp, $sp, 4
	lw $a0, -12($fp)
	lw $a1, -20($fp)
	sw $a1, 16($a0)
	lw $v0, -12($fp)
	addi $sp, $sp, 12
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_length_at_String:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	lw $a0, 0($fp)
	lw $a1, 16($a0)
	sw $a1, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_concat_at_String:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -24
	lw $a0, 4($fp)
	lw $a1, 12($a0)
	sw $a1, -12($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -20($fp)
	lw $a0, 0($fp)
	lw $a1, 16($a0)
	sw $a1, -24($fp)
	lw $a0, -20($fp)
	lw $a1, 12($a0)
	sw $a1, -20($fp)
	lw $a0, -24($fp)
	lw $a1, 12($a0)
	sw $a1, -24($fp)
	lw $a0, -20($fp)
	lw $a1, -24($fp)
	add $a0 $a0 $a1
	sw $a0, -20($fp)
	lw $a0, -12($fp)
	lw $a1, -16($fp)
	lw $a2, -20($fp)
	jal concat
	sw $v0, -28($fp)
	lw $a0, -28($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -32($fp)
	addi $sp, $sp, 4
	lw $v0, -32($fp)
	addi $sp, $sp, 24
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_substr_at_String:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -32
	lw $a0, 8($fp)
	lw $a1, 12($a0)
	sw $a1, -36($fp)
	lw $a0, 4($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -20($fp)
	lw $a0, 8($fp)
	lw $a1, 16($a0)
	sw $a1, -24($fp)
	lw $a0, -20($fp)
	lw $a1, -16($fp)
	add $a0 $a0 $a1
	sw $a0, -28($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal less
	sw $v0, -32($fp)
	lw $a0, -32($fp)
	bne $a0 $zero function_substr_at_String_error_label_0
	j function_substr_at_String_continue_label_1
	function_substr_at_String_error_label_0:
	li $v0, 4
	la $a0, data_2
	syscall
	li $v0, 10
	syscall
	function_substr_at_String_continue_label_1:
	lw $a0, -36($fp)
	lw $a1, -16($fp)
	lw $a2, -20($fp)
	jal substr
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -40($fp)
	addi $sp, $sp, 4
	lw $v0, -40($fp)
	addi $sp, $sp, 32
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_at_Int:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	li $a0, 3
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	lw $a1, 0($fp)
	sw $a1, 12($a0)
	lw $v0, -12($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_at_Bool:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	li $a0, 4
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	lw $a1, 0($fp)
	sw $a1, 12($a0)
	lw $v0, -12($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_size_of_board_at_Board:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -16
	lw $a0, 0($fp)
	sw $a0, -16($fp)
	lw $a0, -16($fp)
	li $a1, 0
	jal equals
	sw $v0, -20($fp)
	lw $a0, -20($fp)
	bne $a0 $zero function_size_of_board_at_Board_error_label_0
	j function_size_of_board_at_Board_continue_label_1
	function_size_of_board_at_Board_error_label_0:
	li $v0, 4
	la $a0, data_3
	syscall
	li $v0, 10
	syscall
	function_size_of_board_at_Board_continue_label_1:
	lw $a0, -16($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -16($fp)
	lw $a1, 0($a0)
	sw $a1, -24($fp)
	lw $a0, -24($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -12($fp)
	addi $sp, $sp, 4
	lw $v0, -12($fp)
	addi $sp, $sp, 16
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_board_init_at_Board:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -372
	lw $a0, 0($fp)
	sw $a0, -20($fp)
	lw $a0, 4($fp)
	sw $a0, -28($fp)
	lw $a0, -28($fp)
	li $a1, 0
	jal equals
	sw $v0, -32($fp)
	lw $a0, -32($fp)
	bne $a0 $zero function_board_init_at_Board_error_label_0
	j function_board_init_at_Board_continue_label_1
	function_board_init_at_Board_error_label_0:
	li $v0, 4
	la $a0, data_4
	syscall
	li $v0, 10
	syscall
	function_board_init_at_Board_continue_label_1:
	lw $a0, -28($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -28($fp)
	lw $a1, 0($a0)
	sw $a1, -36($fp)
	lw $a0, -36($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 28
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -24($fp)
	addi $sp, $sp, 8
	lw $a0, -24($fp)
	sw $a0, -16($fp)
	li $a0, 15
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -84($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -52($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -56($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -60($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -64($fp)
	lw $a0, -52($fp)
	lw $a1, -56($fp)
	jal equals
	sw $v0, -68($fp)
	lw $a0, -68($fp)
	bne $a0 $zero function_board_init_at_Board_int_label_5
	lw $a0, -52($fp)
	lw $a1, -60($fp)
	jal equals
	sw $v0, -68($fp)
	lw $a0, -68($fp)
	bne $a0 $zero function_board_init_at_Board_int_label_5
	lw $a0, -52($fp)
	lw $a1, -64($fp)
	jal equals
	sw $v0, -68($fp)
	lw $a0, -68($fp)
	bne $a0 $zero function_board_init_at_Board_string_label_6
	j function_board_init_at_Board_reference_label_7
	function_board_init_at_Board_int_label_5:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -72($fp)
	lw $a0, -84($fp)
	lw $a1, 12($a0)
	sw $a1, -76($fp)
	lw $a0, -72($fp)
	lw $a1, -76($fp)
	jal equals
	sw $v0, -48($fp)
	j function_board_init_at_Board_continue_label_8
	function_board_init_at_Board_string_label_6:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -72($fp)
	lw $a0, -84($fp)
	lw $a1, 12($a0)
	sw $a1, -76($fp)
	lw $a0, -72($fp)
	lw $a1, -76($fp)
	jal equal_str
	sw $v0, -48($fp)
	j function_board_init_at_Board_continue_label_8
	function_board_init_at_Board_reference_label_7:
	lw $a0, -16($fp)
	lw $a1, -84($fp)
	jal equals
	sw $v0, -48($fp)
	function_board_init_at_Board_continue_label_8:
	lw $a0, -48($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -80($fp)
	addi $sp, $sp, 4
	lw $a0, -80($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -44($fp)
	bne $a0 $zero function_board_init_at_Board_then_label_2
	j function_board_init_at_Board_else_label_3
	function_board_init_at_Board_then_label_2:
	li $a0, 3
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -88($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -88($fp)
	sw $a1, 12($a0)
	li $a0, 5
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -92($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -92($fp)
	sw $a1, 16($a0)
	lw $a0, 4($fp)
	lw $a1, -16($fp)
	sw $a1, 20($a0)
	lw $a0, -16($fp)
	sw $a0, -40($fp)
	j function_board_init_at_Board_continue_label_4
	function_board_init_at_Board_else_label_3:
	li $a0, 16
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -140($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -108($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -112($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -116($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -120($fp)
	lw $a0, -108($fp)
	lw $a1, -112($fp)
	jal equals
	sw $v0, -124($fp)
	lw $a0, -124($fp)
	bne $a0 $zero function_board_init_at_Board_int_label_12
	lw $a0, -108($fp)
	lw $a1, -116($fp)
	jal equals
	sw $v0, -124($fp)
	lw $a0, -124($fp)
	bne $a0 $zero function_board_init_at_Board_int_label_12
	lw $a0, -108($fp)
	lw $a1, -120($fp)
	jal equals
	sw $v0, -124($fp)
	lw $a0, -124($fp)
	bne $a0 $zero function_board_init_at_Board_string_label_13
	j function_board_init_at_Board_reference_label_14
	function_board_init_at_Board_int_label_12:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	lw $a0, -140($fp)
	lw $a1, 12($a0)
	sw $a1, -132($fp)
	lw $a0, -128($fp)
	lw $a1, -132($fp)
	jal equals
	sw $v0, -104($fp)
	j function_board_init_at_Board_continue_label_15
	function_board_init_at_Board_string_label_13:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	lw $a0, -140($fp)
	lw $a1, 12($a0)
	sw $a1, -132($fp)
	lw $a0, -128($fp)
	lw $a1, -132($fp)
	jal equal_str
	sw $v0, -104($fp)
	j function_board_init_at_Board_continue_label_15
	function_board_init_at_Board_reference_label_14:
	lw $a0, -16($fp)
	lw $a1, -140($fp)
	jal equals
	sw $v0, -104($fp)
	function_board_init_at_Board_continue_label_15:
	lw $a0, -104($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -136($fp)
	addi $sp, $sp, 4
	lw $a0, -136($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, -100($fp)
	bne $a0 $zero function_board_init_at_Board_then_label_9
	j function_board_init_at_Board_else_label_10
	function_board_init_at_Board_then_label_9:
	li $a0, 4
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -144($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -144($fp)
	sw $a1, 12($a0)
	li $a0, 4
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -148($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -148($fp)
	sw $a1, 16($a0)
	lw $a0, 4($fp)
	lw $a1, -16($fp)
	sw $a1, 20($a0)
	lw $a0, -16($fp)
	sw $a0, -96($fp)
	j function_board_init_at_Board_continue_label_11
	function_board_init_at_Board_else_label_10:
	li $a0, 20
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -196($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -164($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -168($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -172($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -176($fp)
	lw $a0, -164($fp)
	lw $a1, -168($fp)
	jal equals
	sw $v0, -180($fp)
	lw $a0, -180($fp)
	bne $a0 $zero function_board_init_at_Board_int_label_19
	lw $a0, -164($fp)
	lw $a1, -172($fp)
	jal equals
	sw $v0, -180($fp)
	lw $a0, -180($fp)
	bne $a0 $zero function_board_init_at_Board_int_label_19
	lw $a0, -164($fp)
	lw $a1, -176($fp)
	jal equals
	sw $v0, -180($fp)
	lw $a0, -180($fp)
	bne $a0 $zero function_board_init_at_Board_string_label_20
	j function_board_init_at_Board_reference_label_21
	function_board_init_at_Board_int_label_19:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -184($fp)
	lw $a0, -196($fp)
	lw $a1, 12($a0)
	sw $a1, -188($fp)
	lw $a0, -184($fp)
	lw $a1, -188($fp)
	jal equals
	sw $v0, -160($fp)
	j function_board_init_at_Board_continue_label_22
	function_board_init_at_Board_string_label_20:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -184($fp)
	lw $a0, -196($fp)
	lw $a1, 12($a0)
	sw $a1, -188($fp)
	lw $a0, -184($fp)
	lw $a1, -188($fp)
	jal equal_str
	sw $v0, -160($fp)
	j function_board_init_at_Board_continue_label_22
	function_board_init_at_Board_reference_label_21:
	lw $a0, -16($fp)
	lw $a1, -196($fp)
	jal equals
	sw $v0, -160($fp)
	function_board_init_at_Board_continue_label_22:
	lw $a0, -160($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -192($fp)
	addi $sp, $sp, 4
	lw $a0, -192($fp)
	lw $a1, 12($a0)
	sw $a1, -156($fp)
	lw $a0, -156($fp)
	bne $a0 $zero function_board_init_at_Board_then_label_16
	j function_board_init_at_Board_else_label_17
	function_board_init_at_Board_then_label_16:
	li $a0, 4
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -200($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -200($fp)
	sw $a1, 12($a0)
	li $a0, 5
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -204($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -204($fp)
	sw $a1, 16($a0)
	lw $a0, 4($fp)
	lw $a1, -16($fp)
	sw $a1, 20($a0)
	lw $a0, -16($fp)
	sw $a0, -152($fp)
	j function_board_init_at_Board_continue_label_18
	function_board_init_at_Board_else_label_17:
	li $a0, 21
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -252($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -220($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -224($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -228($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -232($fp)
	lw $a0, -220($fp)
	lw $a1, -224($fp)
	jal equals
	sw $v0, -236($fp)
	lw $a0, -236($fp)
	bne $a0 $zero function_board_init_at_Board_int_label_26
	lw $a0, -220($fp)
	lw $a1, -228($fp)
	jal equals
	sw $v0, -236($fp)
	lw $a0, -236($fp)
	bne $a0 $zero function_board_init_at_Board_int_label_26
	lw $a0, -220($fp)
	lw $a1, -232($fp)
	jal equals
	sw $v0, -236($fp)
	lw $a0, -236($fp)
	bne $a0 $zero function_board_init_at_Board_string_label_27
	j function_board_init_at_Board_reference_label_28
	function_board_init_at_Board_int_label_26:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -240($fp)
	lw $a0, -252($fp)
	lw $a1, 12($a0)
	sw $a1, -244($fp)
	lw $a0, -240($fp)
	lw $a1, -244($fp)
	jal equals
	sw $v0, -216($fp)
	j function_board_init_at_Board_continue_label_29
	function_board_init_at_Board_string_label_27:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -240($fp)
	lw $a0, -252($fp)
	lw $a1, 12($a0)
	sw $a1, -244($fp)
	lw $a0, -240($fp)
	lw $a1, -244($fp)
	jal equal_str
	sw $v0, -216($fp)
	j function_board_init_at_Board_continue_label_29
	function_board_init_at_Board_reference_label_28:
	lw $a0, -16($fp)
	lw $a1, -252($fp)
	jal equals
	sw $v0, -216($fp)
	function_board_init_at_Board_continue_label_29:
	lw $a0, -216($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -248($fp)
	addi $sp, $sp, 4
	lw $a0, -248($fp)
	lw $a1, 12($a0)
	sw $a1, -212($fp)
	lw $a0, -212($fp)
	bne $a0 $zero function_board_init_at_Board_then_label_23
	j function_board_init_at_Board_else_label_24
	function_board_init_at_Board_then_label_23:
	li $a0, 3
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -256($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -256($fp)
	sw $a1, 12($a0)
	li $a0, 7
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -260($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -260($fp)
	sw $a1, 16($a0)
	lw $a0, 4($fp)
	lw $a1, -16($fp)
	sw $a1, 20($a0)
	lw $a0, -16($fp)
	sw $a0, -208($fp)
	j function_board_init_at_Board_continue_label_25
	function_board_init_at_Board_else_label_24:
	li $a0, 25
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -308($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -276($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -280($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -284($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -288($fp)
	lw $a0, -276($fp)
	lw $a1, -280($fp)
	jal equals
	sw $v0, -292($fp)
	lw $a0, -292($fp)
	bne $a0 $zero function_board_init_at_Board_int_label_33
	lw $a0, -276($fp)
	lw $a1, -284($fp)
	jal equals
	sw $v0, -292($fp)
	lw $a0, -292($fp)
	bne $a0 $zero function_board_init_at_Board_int_label_33
	lw $a0, -276($fp)
	lw $a1, -288($fp)
	jal equals
	sw $v0, -292($fp)
	lw $a0, -292($fp)
	bne $a0 $zero function_board_init_at_Board_string_label_34
	j function_board_init_at_Board_reference_label_35
	function_board_init_at_Board_int_label_33:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -296($fp)
	lw $a0, -308($fp)
	lw $a1, 12($a0)
	sw $a1, -300($fp)
	lw $a0, -296($fp)
	lw $a1, -300($fp)
	jal equals
	sw $v0, -272($fp)
	j function_board_init_at_Board_continue_label_36
	function_board_init_at_Board_string_label_34:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -296($fp)
	lw $a0, -308($fp)
	lw $a1, 12($a0)
	sw $a1, -300($fp)
	lw $a0, -296($fp)
	lw $a1, -300($fp)
	jal equal_str
	sw $v0, -272($fp)
	j function_board_init_at_Board_continue_label_36
	function_board_init_at_Board_reference_label_35:
	lw $a0, -16($fp)
	lw $a1, -308($fp)
	jal equals
	sw $v0, -272($fp)
	function_board_init_at_Board_continue_label_36:
	lw $a0, -272($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -304($fp)
	addi $sp, $sp, 4
	lw $a0, -304($fp)
	lw $a1, 12($a0)
	sw $a1, -268($fp)
	lw $a0, -268($fp)
	bne $a0 $zero function_board_init_at_Board_then_label_30
	j function_board_init_at_Board_else_label_31
	function_board_init_at_Board_then_label_30:
	li $a0, 5
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -312($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -312($fp)
	sw $a1, 12($a0)
	li $a0, 5
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -316($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -316($fp)
	sw $a1, 16($a0)
	lw $a0, 4($fp)
	lw $a1, -16($fp)
	sw $a1, 20($a0)
	lw $a0, -16($fp)
	sw $a0, -264($fp)
	j function_board_init_at_Board_continue_label_32
	function_board_init_at_Board_else_label_31:
	li $a0, 28
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -364($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -332($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -336($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -340($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -344($fp)
	lw $a0, -332($fp)
	lw $a1, -336($fp)
	jal equals
	sw $v0, -348($fp)
	lw $a0, -348($fp)
	bne $a0 $zero function_board_init_at_Board_int_label_40
	lw $a0, -332($fp)
	lw $a1, -340($fp)
	jal equals
	sw $v0, -348($fp)
	lw $a0, -348($fp)
	bne $a0 $zero function_board_init_at_Board_int_label_40
	lw $a0, -332($fp)
	lw $a1, -344($fp)
	jal equals
	sw $v0, -348($fp)
	lw $a0, -348($fp)
	bne $a0 $zero function_board_init_at_Board_string_label_41
	j function_board_init_at_Board_reference_label_42
	function_board_init_at_Board_int_label_40:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -352($fp)
	lw $a0, -364($fp)
	lw $a1, 12($a0)
	sw $a1, -356($fp)
	lw $a0, -352($fp)
	lw $a1, -356($fp)
	jal equals
	sw $v0, -328($fp)
	j function_board_init_at_Board_continue_label_43
	function_board_init_at_Board_string_label_41:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -352($fp)
	lw $a0, -364($fp)
	lw $a1, 12($a0)
	sw $a1, -356($fp)
	lw $a0, -352($fp)
	lw $a1, -356($fp)
	jal equal_str
	sw $v0, -328($fp)
	j function_board_init_at_Board_continue_label_43
	function_board_init_at_Board_reference_label_42:
	lw $a0, -16($fp)
	lw $a1, -364($fp)
	jal equals
	sw $v0, -328($fp)
	function_board_init_at_Board_continue_label_43:
	lw $a0, -328($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -360($fp)
	addi $sp, $sp, 4
	lw $a0, -360($fp)
	lw $a1, 12($a0)
	sw $a1, -324($fp)
	lw $a0, -324($fp)
	bne $a0 $zero function_board_init_at_Board_then_label_37
	j function_board_init_at_Board_else_label_38
	function_board_init_at_Board_then_label_37:
	li $a0, 7
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -368($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -368($fp)
	sw $a1, 12($a0)
	li $a0, 4
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -372($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -372($fp)
	sw $a1, 16($a0)
	lw $a0, 4($fp)
	lw $a1, -16($fp)
	sw $a1, 20($a0)
	lw $a0, -16($fp)
	sw $a0, -320($fp)
	j function_board_init_at_Board_continue_label_39
	function_board_init_at_Board_else_label_38:
	li $a0, 5
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -376($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -376($fp)
	sw $a1, 12($a0)
	li $a0, 5
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -380($fp)
	addi $sp, $sp, 4
	lw $a0, 4($fp)
	lw $a1, -380($fp)
	sw $a1, 16($a0)
	lw $a0, 4($fp)
	lw $a1, -16($fp)
	sw $a1, 20($a0)
	lw $a0, -16($fp)
	sw $a0, -320($fp)
	function_board_init_at_Board_continue_label_39:
	lw $a0, -320($fp)
	sw $a0, -264($fp)
	function_board_init_at_Board_continue_label_32:
	lw $a0, -264($fp)
	sw $a0, -208($fp)
	function_board_init_at_Board_continue_label_25:
	lw $a0, -208($fp)
	sw $a0, -152($fp)
	function_board_init_at_Board_continue_label_18:
	lw $a0, -152($fp)
	sw $a0, -96($fp)
	function_board_init_at_Board_continue_label_11:
	lw $a0, -96($fp)
	sw $a0, -40($fp)
	function_board_init_at_Board_continue_label_4:
	lw $a0, 4($fp)
	sw $a0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 372
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_at_Board:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	li $a0, 5
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_attr_at_Board
	sw $v0, -16($fp)
	addi $sp, $sp, 4
	lw $v0, -12($fp)
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_attr_at_Board:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -12
	li $a0, 3
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $a0, 0($fp)
	lw $a1, -12($fp)
	sw $a1, 12($a0)
	li $a0, 3
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -16($fp)
	lw $a0, 0($fp)
	lw $a1, -16($fp)
	sw $a1, 16($a0)
	li $a0, 3
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -20($fp)
	lw $a0, 0($fp)
	lw $a1, -20($fp)
	sw $a1, 20($a0)
	addi $sp, $sp, 12
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_init_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -20
	lw $a0, 4($fp)
	lw $a1, 0($fp)
	sw $a1, 24($a0)
	lw $a0, 0($fp)
	sw $a0, -12($fp)
	lw $a0, 4($fp)
	sw $a0, -20($fp)
	lw $a0, -20($fp)
	li $a1, 0
	jal equals
	sw $v0, -24($fp)
	lw $a0, -24($fp)
	bne $a0 $zero function_init_at_CellularAutomaton_error_label_0
	j function_init_at_CellularAutomaton_continue_label_1
	function_init_at_CellularAutomaton_error_label_0:
	li $v0, 4
	la $a0, data_5
	syscall
	li $v0, 10
	syscall
	function_init_at_CellularAutomaton_continue_label_1:
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -20($fp)
	lw $a1, 0($a0)
	sw $a1, -28($fp)
	lw $a0, -28($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 32
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -16($fp)
	addi $sp, $sp, 8
	lw $v0, 4($fp)
	addi $sp, $sp, 20
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_print_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -200
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -20($fp)
	addi $sp, $sp, 4
	lw $a0, -20($fp)
	sw $a0, -16($fp)
	lw $a0, 0($fp)
	lw $a1, 20($a0)
	sw $a1, -32($fp)
	lw $a0, -32($fp)
	sw $a0, -28($fp)
	la $a0, data_1 + 0
	sw $a0, -40($fp)
	lw $a0, -40($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -44($fp)
	addi $sp, $sp, 4
	lw $a0, -44($fp)
	sw $a0, -36($fp)
	lw $a0, 0($fp)
	sw $a0, -52($fp)
	lw $a0, -52($fp)
	li $a1, 0
	jal equals
	sw $v0, -56($fp)
	lw $a0, -56($fp)
	bne $a0 $zero function_print_at_CellularAutomaton_error_label_0
	j function_print_at_CellularAutomaton_continue_label_1
	function_print_at_CellularAutomaton_error_label_0:
	li $v0, 4
	la $a0, data_6
	syscall
	li $v0, 10
	syscall
	function_print_at_CellularAutomaton_continue_label_1:
	lw $a0, -52($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -36($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -52($fp)
	lw $a1, 0($a0)
	sw $a1, -60($fp)
	lw $a0, -60($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -48($fp)
	addi $sp, $sp, 8
	function_print_at_CellularAutomaton_while_label_2:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -72($fp)
	lw $a0, -28($fp)
	lw $a1, 12($a0)
	sw $a1, -76($fp)
	lw $a0, -72($fp)
	lw $a1, -76($fp)
	jal less
	sw $v0, -68($fp)
	lw $a0, -68($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -80($fp)
	addi $sp, $sp, 4
	lw $a0, -80($fp)
	lw $a1, 12($a0)
	sw $a1, -64($fp)
	lw $a0, -64($fp)
	bne $a0 $zero function_print_at_CellularAutomaton_loop_label_3
	j function_print_at_CellularAutomaton_pool_label_4
	function_print_at_CellularAutomaton_loop_label_3:
	lw $a0, -16($fp)
	sw $a0, -88($fp)
	lw $a0, 0($fp)
	lw $a1, 16($a0)
	sw $a1, -96($fp)
	lw $a0, -96($fp)
	sw $a0, -92($fp)
	lw $a0, 0($fp)
	lw $a1, 24($a0)
	sw $a1, -108($fp)
	lw $a0, -108($fp)
	sw $a0, -104($fp)
	lw $a0, -104($fp)
	li $a1, 0
	jal equals
	sw $v0, -112($fp)
	lw $a0, -112($fp)
	bne $a0 $zero function_print_at_CellularAutomaton_error_label_5
	j function_print_at_CellularAutomaton_continue_label_6
	function_print_at_CellularAutomaton_error_label_5:
	li $v0, 4
	la $a0, data_7
	syscall
	li $v0, 10
	syscall
	function_print_at_CellularAutomaton_continue_label_6:
	lw $a0, -104($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -88($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -92($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -104($fp)
	lw $a1, 0($a0)
	sw $a1, -116($fp)
	lw $a0, -116($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 20
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -100($fp)
	addi $sp, $sp, 12
	lw $a0, -100($fp)
	sw $a0, -84($fp)
	lw $a0, 0($fp)
	sw $a0, -124($fp)
	lw $a0, -124($fp)
	li $a1, 0
	jal equals
	sw $v0, -128($fp)
	lw $a0, -128($fp)
	bne $a0 $zero function_print_at_CellularAutomaton_error_label_7
	j function_print_at_CellularAutomaton_continue_label_8
	function_print_at_CellularAutomaton_error_label_7:
	li $v0, 4
	la $a0, data_8
	syscall
	li $v0, 10
	syscall
	function_print_at_CellularAutomaton_continue_label_8:
	lw $a0, -124($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -84($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -124($fp)
	lw $a1, 0($a0)
	sw $a1, -132($fp)
	lw $a0, -132($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -120($fp)
	addi $sp, $sp, 8
	la $a0, data_1 + 0
	sw $a0, -140($fp)
	lw $a0, -140($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -144($fp)
	addi $sp, $sp, 4
	lw $a0, -144($fp)
	sw $a0, -136($fp)
	lw $a0, 0($fp)
	sw $a0, -152($fp)
	lw $a0, -152($fp)
	li $a1, 0
	jal equals
	sw $v0, -156($fp)
	lw $a0, -156($fp)
	bne $a0 $zero function_print_at_CellularAutomaton_error_label_9
	j function_print_at_CellularAutomaton_continue_label_10
	function_print_at_CellularAutomaton_error_label_9:
	li $v0, 4
	la $a0, data_9
	syscall
	li $v0, 10
	syscall
	function_print_at_CellularAutomaton_continue_label_10:
	lw $a0, -152($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -136($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -152($fp)
	lw $a1, 0($a0)
	sw $a1, -160($fp)
	lw $a0, -160($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -148($fp)
	addi $sp, $sp, 8
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -168($fp)
	lw $a0, 0($fp)
	lw $a1, 16($a0)
	sw $a1, -176($fp)
	lw $a0, -176($fp)
	lw $a1, 12($a0)
	sw $a1, -172($fp)
	lw $a0, -168($fp)
	lw $a1, -172($fp)
	add $a0 $a0 $a1
	sw $a0, -164($fp)
	lw $a0, -164($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -180($fp)
	addi $sp, $sp, 4
	lw $a0, -180($fp)
	sw $a0, -16($fp)
	j function_print_at_CellularAutomaton_while_label_2
	function_print_at_CellularAutomaton_pool_label_4:
	la $a0, data_1 + 0
	sw $a0, -188($fp)
	lw $a0, -188($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -192($fp)
	addi $sp, $sp, 4
	lw $a0, -192($fp)
	sw $a0, -184($fp)
	lw $a0, 0($fp)
	sw $a0, -200($fp)
	lw $a0, -200($fp)
	li $a1, 0
	jal equals
	sw $v0, -204($fp)
	lw $a0, -204($fp)
	bne $a0 $zero function_print_at_CellularAutomaton_error_label_11
	j function_print_at_CellularAutomaton_continue_label_12
	function_print_at_CellularAutomaton_error_label_11:
	li $v0, 4
	la $a0, data_10
	syscall
	li $v0, 10
	syscall
	function_print_at_CellularAutomaton_continue_label_12:
	lw $a0, -200($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -184($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -200($fp)
	lw $a1, 0($a0)
	sw $a1, -208($fp)
	lw $a0, -208($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -196($fp)
	addi $sp, $sp, 8
	lw $a0, 0($fp)
	sw $a0, -24($fp)
	lw $a0, -24($fp)
	sw $a0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 200
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_num_cells_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -20
	lw $a0, 0($fp)
	lw $a1, 24($a0)
	sw $a1, -20($fp)
	lw $a0, -20($fp)
	sw $a0, -16($fp)
	lw $a0, -16($fp)
	li $a1, 0
	jal equals
	sw $v0, -24($fp)
	lw $a0, -24($fp)
	bne $a0 $zero function_num_cells_at_CellularAutomaton_error_label_0
	j function_num_cells_at_CellularAutomaton_continue_label_1
	function_num_cells_at_CellularAutomaton_error_label_0:
	li $v0, 4
	la $a0, data_11
	syscall
	li $v0, 10
	syscall
	function_num_cells_at_CellularAutomaton_continue_label_1:
	lw $a0, -16($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -16($fp)
	lw $a1, 0($a0)
	sw $a1, -28($fp)
	lw $a0, -28($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -12($fp)
	addi $sp, $sp, 4
	lw $v0, -12($fp)
	addi $sp, $sp, 20
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_cell_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -88
	lw $a0, 4($fp)
	lw $a1, 20($a0)
	sw $a1, -48($fp)
	lw $a0, -48($fp)
	lw $a1, 12($a0)
	sw $a1, -40($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -52($fp)
	addi $sp, $sp, 4
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -40($fp)
	lw $a1, -44($fp)
	sub $a0 $a0 $a1
	sw $a0, -36($fp)
	lw $a0, -36($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -24($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -28($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal less
	sw $v0, -20($fp)
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -32($fp)
	addi $sp, $sp, 4
	lw $a0, -32($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_cell_at_CellularAutomaton_then_label_0
	j function_cell_at_CellularAutomaton_else_label_1
	function_cell_at_CellularAutomaton_then_label_0:
	la $a0, data_12 + 0
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -64($fp)
	addi $sp, $sp, 4
	lw $a0, -64($fp)
	sw $a0, -12($fp)
	j function_cell_at_CellularAutomaton_continue_label_2
	function_cell_at_CellularAutomaton_else_label_1:
	lw $a0, 0($fp)
	sw $a0, -68($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -76($fp)
	addi $sp, $sp, 4
	lw $a0, -76($fp)
	sw $a0, -72($fp)
	lw $a0, 4($fp)
	lw $a1, 24($a0)
	sw $a1, -88($fp)
	lw $a0, -88($fp)
	sw $a0, -84($fp)
	lw $a0, -84($fp)
	li $a1, 0
	jal equals
	sw $v0, -92($fp)
	lw $a0, -92($fp)
	bne $a0 $zero function_cell_at_CellularAutomaton_error_label_3
	j function_cell_at_CellularAutomaton_continue_label_4
	function_cell_at_CellularAutomaton_error_label_3:
	li $v0, 4
	la $a0, data_13
	syscall
	li $v0, 10
	syscall
	function_cell_at_CellularAutomaton_continue_label_4:
	lw $a0, -84($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -68($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -72($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -84($fp)
	lw $a1, 0($a0)
	sw $a1, -96($fp)
	lw $a0, -96($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 20
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -80($fp)
	addi $sp, $sp, 12
	lw $a0, -80($fp)
	sw $a0, -12($fp)
	function_cell_at_CellularAutomaton_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 88
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_north_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -96
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -40($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -48($fp)
	lw $a0, -48($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -40($fp)
	lw $a1, -44($fp)
	sub $a0 $a0 $a1
	sw $a0, -36($fp)
	lw $a0, -36($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -52($fp)
	addi $sp, $sp, 4
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -24($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -28($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal less
	sw $v0, -20($fp)
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -32($fp)
	addi $sp, $sp, 4
	lw $a0, -32($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_north_at_CellularAutomaton_then_label_0
	j function_north_at_CellularAutomaton_else_label_1
	function_north_at_CellularAutomaton_then_label_0:
	la $a0, data_12 + 0
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -64($fp)
	addi $sp, $sp, 4
	lw $a0, -64($fp)
	sw $a0, -12($fp)
	j function_north_at_CellularAutomaton_continue_label_2
	function_north_at_CellularAutomaton_else_label_1:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -76($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -84($fp)
	lw $a0, -84($fp)
	lw $a1, 12($a0)
	sw $a1, -80($fp)
	lw $a0, -76($fp)
	lw $a1, -80($fp)
	sub $a0 $a0 $a1
	sw $a0, -72($fp)
	lw $a0, -72($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -88($fp)
	addi $sp, $sp, 4
	lw $a0, -88($fp)
	sw $a0, -68($fp)
	lw $a0, 4($fp)
	sw $a0, -96($fp)
	lw $a0, -96($fp)
	li $a1, 0
	jal equals
	sw $v0, -100($fp)
	lw $a0, -100($fp)
	bne $a0 $zero function_north_at_CellularAutomaton_error_label_3
	j function_north_at_CellularAutomaton_continue_label_4
	function_north_at_CellularAutomaton_error_label_3:
	li $v0, 4
	la $a0, data_14
	syscall
	li $v0, 10
	syscall
	function_north_at_CellularAutomaton_continue_label_4:
	lw $a0, -96($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -68($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -96($fp)
	lw $a1, 0($a0)
	sw $a1, -104($fp)
	lw $a0, -104($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 48
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -92($fp)
	addi $sp, $sp, 8
	lw $a0, -92($fp)
	sw $a0, -12($fp)
	function_north_at_CellularAutomaton_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 96
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_south_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -96
	lw $a0, 4($fp)
	lw $a1, 20($a0)
	sw $a1, -36($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -52($fp)
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	add $a0 $a0 $a1
	sw $a0, -40($fp)
	lw $a0, -40($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $a0, -36($fp)
	lw $a1, 12($a0)
	sw $a1, -24($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -28($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal less
	sw $v0, -20($fp)
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -32($fp)
	addi $sp, $sp, 4
	lw $a0, -32($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_south_at_CellularAutomaton_then_label_0
	j function_south_at_CellularAutomaton_else_label_1
	function_south_at_CellularAutomaton_then_label_0:
	la $a0, data_12 + 0
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -64($fp)
	addi $sp, $sp, 4
	lw $a0, -64($fp)
	sw $a0, -12($fp)
	j function_south_at_CellularAutomaton_continue_label_2
	function_south_at_CellularAutomaton_else_label_1:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -76($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -84($fp)
	lw $a0, -84($fp)
	lw $a1, 12($a0)
	sw $a1, -80($fp)
	lw $a0, -76($fp)
	lw $a1, -80($fp)
	add $a0 $a0 $a1
	sw $a0, -72($fp)
	lw $a0, -72($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -88($fp)
	addi $sp, $sp, 4
	lw $a0, -88($fp)
	sw $a0, -68($fp)
	lw $a0, 4($fp)
	sw $a0, -96($fp)
	lw $a0, -96($fp)
	li $a1, 0
	jal equals
	sw $v0, -100($fp)
	lw $a0, -100($fp)
	bne $a0 $zero function_south_at_CellularAutomaton_error_label_3
	j function_south_at_CellularAutomaton_continue_label_4
	function_south_at_CellularAutomaton_error_label_3:
	li $v0, 4
	la $a0, data_15
	syscall
	li $v0, 10
	syscall
	function_south_at_CellularAutomaton_continue_label_4:
	lw $a0, -96($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -68($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -96($fp)
	lw $a1, 0($a0)
	sw $a1, -104($fp)
	lw $a0, -104($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 48
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -92($fp)
	addi $sp, $sp, 8
	lw $a0, -92($fp)
	sw $a0, -12($fp)
	function_south_at_CellularAutomaton_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 96
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_east_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -176
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -84($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -92($fp)
	addi $sp, $sp, 4
	lw $a0, -92($fp)
	lw $a1, 12($a0)
	sw $a1, -88($fp)
	lw $a0, -84($fp)
	lw $a1, -88($fp)
	add $a0 $a0 $a1
	sw $a0, -80($fp)
	lw $a0, -80($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -96($fp)
	addi $sp, $sp, 4
	lw $a0, -96($fp)
	lw $a1, 12($a0)
	sw $a1, -72($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -100($fp)
	lw $a0, -100($fp)
	lw $a1, 12($a0)
	sw $a1, -76($fp)
	lw $a0, -76($fp)
	li $a1, 0
	jal equals
	sw $v0, -104($fp)
	lw $a0, -72($fp)
	lw $a1, -76($fp)
	div $a0 $a1
	mflo $a0
	sw $a0, -68($fp)
	lw $a0, -68($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -108($fp)
	addi $sp, $sp, 4
	lw $a0, -108($fp)
	lw $a1, 12($a0)
	sw $a1, -60($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -112($fp)
	lw $a0, -112($fp)
	lw $a1, 12($a0)
	sw $a1, -64($fp)
	lw $a0, -60($fp)
	lw $a1, -64($fp)
	mul $a0 $a0 $a1
	sw $a0, -56($fp)
	lw $a0, -56($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -116($fp)
	addi $sp, $sp, 4
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -124($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -132($fp)
	addi $sp, $sp, 4
	lw $a0, -132($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	lw $a0, -124($fp)
	lw $a1, -128($fp)
	add $a0 $a0 $a1
	sw $a0, -120($fp)
	lw $a0, -120($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -136($fp)
	addi $sp, $sp, 4
	lw $t0, -116($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -24($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -28($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -32($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -36($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_east_at_CellularAutomaton_int_label_3
	lw $a0, -24($fp)
	lw $a1, -32($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_east_at_CellularAutomaton_int_label_3
	lw $a0, -24($fp)
	lw $a1, -36($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_east_at_CellularAutomaton_string_label_4
	j function_east_at_CellularAutomaton_reference_label_5
	function_east_at_CellularAutomaton_int_label_3:
	lw $a0, -116($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -136($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equals
	sw $v0, -20($fp)
	j function_east_at_CellularAutomaton_continue_label_6
	function_east_at_CellularAutomaton_string_label_4:
	lw $a0, -116($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -136($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equal_str
	sw $v0, -20($fp)
	j function_east_at_CellularAutomaton_continue_label_6
	function_east_at_CellularAutomaton_reference_label_5:
	lw $a0, -116($fp)
	lw $a1, -136($fp)
	jal equals
	sw $v0, -20($fp)
	function_east_at_CellularAutomaton_continue_label_6:
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -52($fp)
	addi $sp, $sp, 4
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_east_at_CellularAutomaton_then_label_0
	j function_east_at_CellularAutomaton_else_label_1
	function_east_at_CellularAutomaton_then_label_0:
	la $a0, data_12 + 0
	sw $a0, -140($fp)
	lw $a0, -140($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -144($fp)
	addi $sp, $sp, 4
	lw $a0, -144($fp)
	sw $a0, -12($fp)
	j function_east_at_CellularAutomaton_continue_label_2
	function_east_at_CellularAutomaton_else_label_1:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -156($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -164($fp)
	addi $sp, $sp, 4
	lw $a0, -164($fp)
	lw $a1, 12($a0)
	sw $a1, -160($fp)
	lw $a0, -156($fp)
	lw $a1, -160($fp)
	add $a0 $a0 $a1
	sw $a0, -152($fp)
	lw $a0, -152($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -168($fp)
	addi $sp, $sp, 4
	lw $a0, -168($fp)
	sw $a0, -148($fp)
	lw $a0, 4($fp)
	sw $a0, -176($fp)
	lw $a0, -176($fp)
	li $a1, 0
	jal equals
	sw $v0, -180($fp)
	lw $a0, -180($fp)
	bne $a0 $zero function_east_at_CellularAutomaton_error_label_7
	j function_east_at_CellularAutomaton_continue_label_8
	function_east_at_CellularAutomaton_error_label_7:
	li $v0, 4
	la $a0, data_16
	syscall
	li $v0, 10
	syscall
	function_east_at_CellularAutomaton_continue_label_8:
	lw $a0, -176($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -148($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -176($fp)
	lw $a1, 0($a0)
	sw $a1, -184($fp)
	lw $a0, -184($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 48
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -172($fp)
	addi $sp, $sp, 8
	lw $a0, -172($fp)
	sw $a0, -12($fp)
	function_east_at_CellularAutomaton_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 176
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_west_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -192
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -24($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -28($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -32($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -36($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_west_at_CellularAutomaton_int_label_3
	lw $a0, -24($fp)
	lw $a1, -32($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_west_at_CellularAutomaton_int_label_3
	lw $a0, -24($fp)
	lw $a1, -36($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_west_at_CellularAutomaton_string_label_4
	j function_west_at_CellularAutomaton_reference_label_5
	function_west_at_CellularAutomaton_int_label_3:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equals
	sw $v0, -20($fp)
	j function_west_at_CellularAutomaton_continue_label_6
	function_west_at_CellularAutomaton_string_label_4:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equal_str
	sw $v0, -20($fp)
	j function_west_at_CellularAutomaton_continue_label_6
	function_west_at_CellularAutomaton_reference_label_5:
	lw $a0, 0($fp)
	lw $a1, -56($fp)
	jal equals
	sw $v0, -20($fp)
	function_west_at_CellularAutomaton_continue_label_6:
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -52($fp)
	addi $sp, $sp, 4
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_west_at_CellularAutomaton_then_label_0
	j function_west_at_CellularAutomaton_else_label_1
	function_west_at_CellularAutomaton_then_label_0:
	la $a0, data_12 + 0
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -64($fp)
	addi $sp, $sp, 4
	lw $a0, -64($fp)
	sw $a0, -12($fp)
	j function_west_at_CellularAutomaton_continue_label_2
	function_west_at_CellularAutomaton_else_label_1:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -136($fp)
	lw $a0, -136($fp)
	lw $a1, 12($a0)
	sw $a1, -132($fp)
	lw $a0, -132($fp)
	li $a1, 0
	jal equals
	sw $v0, -140($fp)
	lw $a0, -128($fp)
	lw $a1, -132($fp)
	div $a0 $a1
	mflo $a0
	sw $a0, -124($fp)
	lw $a0, -124($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -144($fp)
	addi $sp, $sp, 4
	lw $a0, -144($fp)
	lw $a1, 12($a0)
	sw $a1, -116($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -148($fp)
	lw $a0, -148($fp)
	lw $a1, 12($a0)
	sw $a1, -120($fp)
	lw $a0, -116($fp)
	lw $a1, -120($fp)
	mul $a0 $a0 $a1
	sw $a0, -112($fp)
	lw $a0, -112($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -152($fp)
	addi $sp, $sp, 4
	lw $t0, -152($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -80($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -84($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -88($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -92($fp)
	lw $a0, -80($fp)
	lw $a1, -84($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_west_at_CellularAutomaton_int_label_10
	lw $a0, -80($fp)
	lw $a1, -88($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_west_at_CellularAutomaton_int_label_10
	lw $a0, -80($fp)
	lw $a1, -92($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_west_at_CellularAutomaton_string_label_11
	j function_west_at_CellularAutomaton_reference_label_12
	function_west_at_CellularAutomaton_int_label_10:
	lw $a0, -152($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equals
	sw $v0, -76($fp)
	j function_west_at_CellularAutomaton_continue_label_13
	function_west_at_CellularAutomaton_string_label_11:
	lw $a0, -152($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equal_str
	sw $v0, -76($fp)
	j function_west_at_CellularAutomaton_continue_label_13
	function_west_at_CellularAutomaton_reference_label_12:
	lw $a0, -152($fp)
	lw $a1, 0($fp)
	jal equals
	sw $v0, -76($fp)
	function_west_at_CellularAutomaton_continue_label_13:
	lw $a0, -76($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -108($fp)
	addi $sp, $sp, 4
	lw $a0, -108($fp)
	lw $a1, 12($a0)
	sw $a1, -72($fp)
	lw $a0, -72($fp)
	bne $a0 $zero function_west_at_CellularAutomaton_then_label_7
	j function_west_at_CellularAutomaton_else_label_8
	function_west_at_CellularAutomaton_then_label_7:
	la $a0, data_12 + 0
	sw $a0, -156($fp)
	lw $a0, -156($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -160($fp)
	addi $sp, $sp, 4
	lw $a0, -160($fp)
	sw $a0, -68($fp)
	j function_west_at_CellularAutomaton_continue_label_9
	function_west_at_CellularAutomaton_else_label_8:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -172($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -180($fp)
	addi $sp, $sp, 4
	lw $a0, -180($fp)
	lw $a1, 12($a0)
	sw $a1, -176($fp)
	lw $a0, -172($fp)
	lw $a1, -176($fp)
	sub $a0 $a0 $a1
	sw $a0, -168($fp)
	lw $a0, -168($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -184($fp)
	addi $sp, $sp, 4
	lw $a0, -184($fp)
	sw $a0, -164($fp)
	lw $a0, 4($fp)
	sw $a0, -192($fp)
	lw $a0, -192($fp)
	li $a1, 0
	jal equals
	sw $v0, -196($fp)
	lw $a0, -196($fp)
	bne $a0 $zero function_west_at_CellularAutomaton_error_label_14
	j function_west_at_CellularAutomaton_continue_label_15
	function_west_at_CellularAutomaton_error_label_14:
	li $v0, 4
	la $a0, data_17
	syscall
	li $v0, 10
	syscall
	function_west_at_CellularAutomaton_continue_label_15:
	lw $a0, -192($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -164($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -192($fp)
	lw $a1, 0($a0)
	sw $a1, -200($fp)
	lw $a0, -200($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 48
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -188($fp)
	addi $sp, $sp, 8
	lw $a0, -188($fp)
	sw $a0, -68($fp)
	function_west_at_CellularAutomaton_continue_label_9:
	lw $a0, -68($fp)
	sw $a0, -12($fp)
	function_west_at_CellularAutomaton_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 192
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_northwest_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -192
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -40($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -48($fp)
	lw $a0, -48($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -40($fp)
	lw $a1, -44($fp)
	sub $a0 $a0 $a1
	sw $a0, -36($fp)
	lw $a0, -36($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -52($fp)
	addi $sp, $sp, 4
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -24($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -28($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal less
	sw $v0, -20($fp)
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -32($fp)
	addi $sp, $sp, 4
	lw $a0, -32($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_northwest_at_CellularAutomaton_then_label_0
	j function_northwest_at_CellularAutomaton_else_label_1
	function_northwest_at_CellularAutomaton_then_label_0:
	la $a0, data_12 + 0
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -64($fp)
	addi $sp, $sp, 4
	lw $a0, -64($fp)
	sw $a0, -12($fp)
	j function_northwest_at_CellularAutomaton_continue_label_2
	function_northwest_at_CellularAutomaton_else_label_1:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -136($fp)
	lw $a0, -136($fp)
	lw $a1, 12($a0)
	sw $a1, -132($fp)
	lw $a0, -132($fp)
	li $a1, 0
	jal equals
	sw $v0, -140($fp)
	lw $a0, -128($fp)
	lw $a1, -132($fp)
	div $a0 $a1
	mflo $a0
	sw $a0, -124($fp)
	lw $a0, -124($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -144($fp)
	addi $sp, $sp, 4
	lw $a0, -144($fp)
	lw $a1, 12($a0)
	sw $a1, -116($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -148($fp)
	lw $a0, -148($fp)
	lw $a1, 12($a0)
	sw $a1, -120($fp)
	lw $a0, -116($fp)
	lw $a1, -120($fp)
	mul $a0 $a0 $a1
	sw $a0, -112($fp)
	lw $a0, -112($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -152($fp)
	addi $sp, $sp, 4
	lw $t0, -152($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -80($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -84($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -88($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -92($fp)
	lw $a0, -80($fp)
	lw $a1, -84($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_northwest_at_CellularAutomaton_int_label_6
	lw $a0, -80($fp)
	lw $a1, -88($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_northwest_at_CellularAutomaton_int_label_6
	lw $a0, -80($fp)
	lw $a1, -92($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_northwest_at_CellularAutomaton_string_label_7
	j function_northwest_at_CellularAutomaton_reference_label_8
	function_northwest_at_CellularAutomaton_int_label_6:
	lw $a0, -152($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equals
	sw $v0, -76($fp)
	j function_northwest_at_CellularAutomaton_continue_label_9
	function_northwest_at_CellularAutomaton_string_label_7:
	lw $a0, -152($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equal_str
	sw $v0, -76($fp)
	j function_northwest_at_CellularAutomaton_continue_label_9
	function_northwest_at_CellularAutomaton_reference_label_8:
	lw $a0, -152($fp)
	lw $a1, 0($fp)
	jal equals
	sw $v0, -76($fp)
	function_northwest_at_CellularAutomaton_continue_label_9:
	lw $a0, -76($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -108($fp)
	addi $sp, $sp, 4
	lw $a0, -108($fp)
	lw $a1, 12($a0)
	sw $a1, -72($fp)
	lw $a0, -72($fp)
	bne $a0 $zero function_northwest_at_CellularAutomaton_then_label_3
	j function_northwest_at_CellularAutomaton_else_label_4
	function_northwest_at_CellularAutomaton_then_label_3:
	la $a0, data_12 + 0
	sw $a0, -156($fp)
	lw $a0, -156($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -160($fp)
	addi $sp, $sp, 4
	lw $a0, -160($fp)
	sw $a0, -68($fp)
	j function_northwest_at_CellularAutomaton_continue_label_5
	function_northwest_at_CellularAutomaton_else_label_4:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -172($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -180($fp)
	addi $sp, $sp, 4
	lw $a0, -180($fp)
	lw $a1, 12($a0)
	sw $a1, -176($fp)
	lw $a0, -172($fp)
	lw $a1, -176($fp)
	sub $a0 $a0 $a1
	sw $a0, -168($fp)
	lw $a0, -168($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -184($fp)
	addi $sp, $sp, 4
	lw $a0, -184($fp)
	sw $a0, -164($fp)
	lw $a0, 4($fp)
	sw $a0, -192($fp)
	lw $a0, -192($fp)
	li $a1, 0
	jal equals
	sw $v0, -196($fp)
	lw $a0, -196($fp)
	bne $a0 $zero function_northwest_at_CellularAutomaton_error_label_10
	j function_northwest_at_CellularAutomaton_continue_label_11
	function_northwest_at_CellularAutomaton_error_label_10:
	li $v0, 4
	la $a0, data_18
	syscall
	li $v0, 10
	syscall
	function_northwest_at_CellularAutomaton_continue_label_11:
	lw $a0, -192($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -164($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -192($fp)
	lw $a1, 0($a0)
	sw $a1, -200($fp)
	lw $a0, -200($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 52
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -188($fp)
	addi $sp, $sp, 8
	lw $a0, -188($fp)
	sw $a0, -68($fp)
	function_northwest_at_CellularAutomaton_continue_label_5:
	lw $a0, -68($fp)
	sw $a0, -12($fp)
	function_northwest_at_CellularAutomaton_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 192
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_northeast_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -232
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -40($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -48($fp)
	lw $a0, -48($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -40($fp)
	lw $a1, -44($fp)
	sub $a0 $a0 $a1
	sw $a0, -36($fp)
	lw $a0, -36($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -52($fp)
	addi $sp, $sp, 4
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -24($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -28($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal less
	sw $v0, -20($fp)
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -32($fp)
	addi $sp, $sp, 4
	lw $a0, -32($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_northeast_at_CellularAutomaton_then_label_0
	j function_northeast_at_CellularAutomaton_else_label_1
	function_northeast_at_CellularAutomaton_then_label_0:
	la $a0, data_12 + 0
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -64($fp)
	addi $sp, $sp, 4
	lw $a0, -64($fp)
	sw $a0, -12($fp)
	j function_northeast_at_CellularAutomaton_continue_label_2
	function_northeast_at_CellularAutomaton_else_label_1:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -140($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -148($fp)
	addi $sp, $sp, 4
	lw $a0, -148($fp)
	lw $a1, 12($a0)
	sw $a1, -144($fp)
	lw $a0, -140($fp)
	lw $a1, -144($fp)
	add $a0 $a0 $a1
	sw $a0, -136($fp)
	lw $a0, -136($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -152($fp)
	addi $sp, $sp, 4
	lw $a0, -152($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -156($fp)
	lw $a0, -156($fp)
	lw $a1, 12($a0)
	sw $a1, -132($fp)
	lw $a0, -132($fp)
	li $a1, 0
	jal equals
	sw $v0, -160($fp)
	lw $a0, -128($fp)
	lw $a1, -132($fp)
	div $a0 $a1
	mflo $a0
	sw $a0, -124($fp)
	lw $a0, -124($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -164($fp)
	addi $sp, $sp, 4
	lw $a0, -164($fp)
	lw $a1, 12($a0)
	sw $a1, -116($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -168($fp)
	lw $a0, -168($fp)
	lw $a1, 12($a0)
	sw $a1, -120($fp)
	lw $a0, -116($fp)
	lw $a1, -120($fp)
	mul $a0 $a0 $a1
	sw $a0, -112($fp)
	lw $a0, -112($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -172($fp)
	addi $sp, $sp, 4
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -180($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -188($fp)
	addi $sp, $sp, 4
	lw $a0, -188($fp)
	lw $a1, 12($a0)
	sw $a1, -184($fp)
	lw $a0, -180($fp)
	lw $a1, -184($fp)
	add $a0 $a0 $a1
	sw $a0, -176($fp)
	lw $a0, -176($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -192($fp)
	addi $sp, $sp, 4
	lw $t0, -172($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -80($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -84($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -88($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -92($fp)
	lw $a0, -80($fp)
	lw $a1, -84($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_northeast_at_CellularAutomaton_int_label_6
	lw $a0, -80($fp)
	lw $a1, -88($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_northeast_at_CellularAutomaton_int_label_6
	lw $a0, -80($fp)
	lw $a1, -92($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_northeast_at_CellularAutomaton_string_label_7
	j function_northeast_at_CellularAutomaton_reference_label_8
	function_northeast_at_CellularAutomaton_int_label_6:
	lw $a0, -172($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, -192($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equals
	sw $v0, -76($fp)
	j function_northeast_at_CellularAutomaton_continue_label_9
	function_northeast_at_CellularAutomaton_string_label_7:
	lw $a0, -172($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, -192($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equal_str
	sw $v0, -76($fp)
	j function_northeast_at_CellularAutomaton_continue_label_9
	function_northeast_at_CellularAutomaton_reference_label_8:
	lw $a0, -172($fp)
	lw $a1, -192($fp)
	jal equals
	sw $v0, -76($fp)
	function_northeast_at_CellularAutomaton_continue_label_9:
	lw $a0, -76($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -108($fp)
	addi $sp, $sp, 4
	lw $a0, -108($fp)
	lw $a1, 12($a0)
	sw $a1, -72($fp)
	lw $a0, -72($fp)
	bne $a0 $zero function_northeast_at_CellularAutomaton_then_label_3
	j function_northeast_at_CellularAutomaton_else_label_4
	function_northeast_at_CellularAutomaton_then_label_3:
	la $a0, data_12 + 0
	sw $a0, -196($fp)
	lw $a0, -196($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -200($fp)
	addi $sp, $sp, 4
	lw $a0, -200($fp)
	sw $a0, -68($fp)
	j function_northeast_at_CellularAutomaton_continue_label_5
	function_northeast_at_CellularAutomaton_else_label_4:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -212($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -220($fp)
	addi $sp, $sp, 4
	lw $a0, -220($fp)
	lw $a1, 12($a0)
	sw $a1, -216($fp)
	lw $a0, -212($fp)
	lw $a1, -216($fp)
	add $a0 $a0 $a1
	sw $a0, -208($fp)
	lw $a0, -208($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -224($fp)
	addi $sp, $sp, 4
	lw $a0, -224($fp)
	sw $a0, -204($fp)
	lw $a0, 4($fp)
	sw $a0, -232($fp)
	lw $a0, -232($fp)
	li $a1, 0
	jal equals
	sw $v0, -236($fp)
	lw $a0, -236($fp)
	bne $a0 $zero function_northeast_at_CellularAutomaton_error_label_10
	j function_northeast_at_CellularAutomaton_continue_label_11
	function_northeast_at_CellularAutomaton_error_label_10:
	li $v0, 4
	la $a0, data_19
	syscall
	li $v0, 10
	syscall
	function_northeast_at_CellularAutomaton_continue_label_11:
	lw $a0, -232($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -204($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -232($fp)
	lw $a1, 0($a0)
	sw $a1, -240($fp)
	lw $a0, -240($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 52
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -228($fp)
	addi $sp, $sp, 8
	lw $a0, -228($fp)
	sw $a0, -68($fp)
	function_northeast_at_CellularAutomaton_continue_label_5:
	lw $a0, -68($fp)
	sw $a0, -12($fp)
	function_northeast_at_CellularAutomaton_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 232
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_southeast_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -232
	lw $a0, 4($fp)
	lw $a1, 20($a0)
	sw $a1, -36($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -52($fp)
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	add $a0 $a0 $a1
	sw $a0, -40($fp)
	lw $a0, -40($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $a0, -36($fp)
	lw $a1, 12($a0)
	sw $a1, -24($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -28($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal less
	sw $v0, -20($fp)
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -32($fp)
	addi $sp, $sp, 4
	lw $a0, -32($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_southeast_at_CellularAutomaton_then_label_0
	j function_southeast_at_CellularAutomaton_else_label_1
	function_southeast_at_CellularAutomaton_then_label_0:
	la $a0, data_12 + 0
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -64($fp)
	addi $sp, $sp, 4
	lw $a0, -64($fp)
	sw $a0, -12($fp)
	j function_southeast_at_CellularAutomaton_continue_label_2
	function_southeast_at_CellularAutomaton_else_label_1:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -140($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -148($fp)
	addi $sp, $sp, 4
	lw $a0, -148($fp)
	lw $a1, 12($a0)
	sw $a1, -144($fp)
	lw $a0, -140($fp)
	lw $a1, -144($fp)
	add $a0 $a0 $a1
	sw $a0, -136($fp)
	lw $a0, -136($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -152($fp)
	addi $sp, $sp, 4
	lw $a0, -152($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -156($fp)
	lw $a0, -156($fp)
	lw $a1, 12($a0)
	sw $a1, -132($fp)
	lw $a0, -132($fp)
	li $a1, 0
	jal equals
	sw $v0, -160($fp)
	lw $a0, -128($fp)
	lw $a1, -132($fp)
	div $a0 $a1
	mflo $a0
	sw $a0, -124($fp)
	lw $a0, -124($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -164($fp)
	addi $sp, $sp, 4
	lw $a0, -164($fp)
	lw $a1, 12($a0)
	sw $a1, -116($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -168($fp)
	lw $a0, -168($fp)
	lw $a1, 12($a0)
	sw $a1, -120($fp)
	lw $a0, -116($fp)
	lw $a1, -120($fp)
	mul $a0 $a0 $a1
	sw $a0, -112($fp)
	lw $a0, -112($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -172($fp)
	addi $sp, $sp, 4
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -180($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -188($fp)
	addi $sp, $sp, 4
	lw $a0, -188($fp)
	lw $a1, 12($a0)
	sw $a1, -184($fp)
	lw $a0, -180($fp)
	lw $a1, -184($fp)
	add $a0 $a0 $a1
	sw $a0, -176($fp)
	lw $a0, -176($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -192($fp)
	addi $sp, $sp, 4
	lw $t0, -172($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -80($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -84($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -88($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -92($fp)
	lw $a0, -80($fp)
	lw $a1, -84($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_southeast_at_CellularAutomaton_int_label_6
	lw $a0, -80($fp)
	lw $a1, -88($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_southeast_at_CellularAutomaton_int_label_6
	lw $a0, -80($fp)
	lw $a1, -92($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_southeast_at_CellularAutomaton_string_label_7
	j function_southeast_at_CellularAutomaton_reference_label_8
	function_southeast_at_CellularAutomaton_int_label_6:
	lw $a0, -172($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, -192($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equals
	sw $v0, -76($fp)
	j function_southeast_at_CellularAutomaton_continue_label_9
	function_southeast_at_CellularAutomaton_string_label_7:
	lw $a0, -172($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, -192($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equal_str
	sw $v0, -76($fp)
	j function_southeast_at_CellularAutomaton_continue_label_9
	function_southeast_at_CellularAutomaton_reference_label_8:
	lw $a0, -172($fp)
	lw $a1, -192($fp)
	jal equals
	sw $v0, -76($fp)
	function_southeast_at_CellularAutomaton_continue_label_9:
	lw $a0, -76($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -108($fp)
	addi $sp, $sp, 4
	lw $a0, -108($fp)
	lw $a1, 12($a0)
	sw $a1, -72($fp)
	lw $a0, -72($fp)
	bne $a0 $zero function_southeast_at_CellularAutomaton_then_label_3
	j function_southeast_at_CellularAutomaton_else_label_4
	function_southeast_at_CellularAutomaton_then_label_3:
	la $a0, data_12 + 0
	sw $a0, -196($fp)
	lw $a0, -196($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -200($fp)
	addi $sp, $sp, 4
	lw $a0, -200($fp)
	sw $a0, -68($fp)
	j function_southeast_at_CellularAutomaton_continue_label_5
	function_southeast_at_CellularAutomaton_else_label_4:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -212($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -220($fp)
	addi $sp, $sp, 4
	lw $a0, -220($fp)
	lw $a1, 12($a0)
	sw $a1, -216($fp)
	lw $a0, -212($fp)
	lw $a1, -216($fp)
	add $a0 $a0 $a1
	sw $a0, -208($fp)
	lw $a0, -208($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -224($fp)
	addi $sp, $sp, 4
	lw $a0, -224($fp)
	sw $a0, -204($fp)
	lw $a0, 4($fp)
	sw $a0, -232($fp)
	lw $a0, -232($fp)
	li $a1, 0
	jal equals
	sw $v0, -236($fp)
	lw $a0, -236($fp)
	bne $a0 $zero function_southeast_at_CellularAutomaton_error_label_10
	j function_southeast_at_CellularAutomaton_continue_label_11
	function_southeast_at_CellularAutomaton_error_label_10:
	li $v0, 4
	la $a0, data_20
	syscall
	li $v0, 10
	syscall
	function_southeast_at_CellularAutomaton_continue_label_11:
	lw $a0, -232($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -204($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -232($fp)
	lw $a1, 0($a0)
	sw $a1, -240($fp)
	lw $a0, -240($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 56
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -228($fp)
	addi $sp, $sp, 8
	lw $a0, -228($fp)
	sw $a0, -68($fp)
	function_southeast_at_CellularAutomaton_continue_label_5:
	lw $a0, -68($fp)
	sw $a0, -12($fp)
	function_southeast_at_CellularAutomaton_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 232
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_southwest_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -192
	lw $a0, 4($fp)
	lw $a1, 20($a0)
	sw $a1, -36($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -52($fp)
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	add $a0 $a0 $a1
	sw $a0, -40($fp)
	lw $a0, -40($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $a0, -36($fp)
	lw $a1, 12($a0)
	sw $a1, -24($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -28($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal less
	sw $v0, -20($fp)
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -32($fp)
	addi $sp, $sp, 4
	lw $a0, -32($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_southwest_at_CellularAutomaton_then_label_0
	j function_southwest_at_CellularAutomaton_else_label_1
	function_southwest_at_CellularAutomaton_then_label_0:
	la $a0, data_12 + 0
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -64($fp)
	addi $sp, $sp, 4
	lw $a0, -64($fp)
	sw $a0, -12($fp)
	j function_southwest_at_CellularAutomaton_continue_label_2
	function_southwest_at_CellularAutomaton_else_label_1:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -136($fp)
	lw $a0, -136($fp)
	lw $a1, 12($a0)
	sw $a1, -132($fp)
	lw $a0, -132($fp)
	li $a1, 0
	jal equals
	sw $v0, -140($fp)
	lw $a0, -128($fp)
	lw $a1, -132($fp)
	div $a0 $a1
	mflo $a0
	sw $a0, -124($fp)
	lw $a0, -124($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -144($fp)
	addi $sp, $sp, 4
	lw $a0, -144($fp)
	lw $a1, 12($a0)
	sw $a1, -116($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -148($fp)
	lw $a0, -148($fp)
	lw $a1, 12($a0)
	sw $a1, -120($fp)
	lw $a0, -116($fp)
	lw $a1, -120($fp)
	mul $a0 $a0 $a1
	sw $a0, -112($fp)
	lw $a0, -112($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -152($fp)
	addi $sp, $sp, 4
	lw $t0, -152($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -80($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -84($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -88($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -92($fp)
	lw $a0, -80($fp)
	lw $a1, -84($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_southwest_at_CellularAutomaton_int_label_6
	lw $a0, -80($fp)
	lw $a1, -88($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_southwest_at_CellularAutomaton_int_label_6
	lw $a0, -80($fp)
	lw $a1, -92($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_southwest_at_CellularAutomaton_string_label_7
	j function_southwest_at_CellularAutomaton_reference_label_8
	function_southwest_at_CellularAutomaton_int_label_6:
	lw $a0, -152($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equals
	sw $v0, -76($fp)
	j function_southwest_at_CellularAutomaton_continue_label_9
	function_southwest_at_CellularAutomaton_string_label_7:
	lw $a0, -152($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equal_str
	sw $v0, -76($fp)
	j function_southwest_at_CellularAutomaton_continue_label_9
	function_southwest_at_CellularAutomaton_reference_label_8:
	lw $a0, -152($fp)
	lw $a1, 0($fp)
	jal equals
	sw $v0, -76($fp)
	function_southwest_at_CellularAutomaton_continue_label_9:
	lw $a0, -76($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -108($fp)
	addi $sp, $sp, 4
	lw $a0, -108($fp)
	lw $a1, 12($a0)
	sw $a1, -72($fp)
	lw $a0, -72($fp)
	bne $a0 $zero function_southwest_at_CellularAutomaton_then_label_3
	j function_southwest_at_CellularAutomaton_else_label_4
	function_southwest_at_CellularAutomaton_then_label_3:
	la $a0, data_12 + 0
	sw $a0, -156($fp)
	lw $a0, -156($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -160($fp)
	addi $sp, $sp, 4
	lw $a0, -160($fp)
	sw $a0, -68($fp)
	j function_southwest_at_CellularAutomaton_continue_label_5
	function_southwest_at_CellularAutomaton_else_label_4:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -172($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -180($fp)
	addi $sp, $sp, 4
	lw $a0, -180($fp)
	lw $a1, 12($a0)
	sw $a1, -176($fp)
	lw $a0, -172($fp)
	lw $a1, -176($fp)
	sub $a0 $a0 $a1
	sw $a0, -168($fp)
	lw $a0, -168($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -184($fp)
	addi $sp, $sp, 4
	lw $a0, -184($fp)
	sw $a0, -164($fp)
	lw $a0, 4($fp)
	sw $a0, -192($fp)
	lw $a0, -192($fp)
	li $a1, 0
	jal equals
	sw $v0, -196($fp)
	lw $a0, -196($fp)
	bne $a0 $zero function_southwest_at_CellularAutomaton_error_label_10
	j function_southwest_at_CellularAutomaton_continue_label_11
	function_southwest_at_CellularAutomaton_error_label_10:
	li $v0, 4
	la $a0, data_21
	syscall
	li $v0, 10
	syscall
	function_southwest_at_CellularAutomaton_continue_label_11:
	lw $a0, -192($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -164($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -192($fp)
	lw $a1, 0($a0)
	sw $a1, -200($fp)
	lw $a0, -200($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 56
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -188($fp)
	addi $sp, $sp, 8
	lw $a0, -188($fp)
	sw $a0, -68($fp)
	function_southwest_at_CellularAutomaton_continue_label_5:
	lw $a0, -68($fp)
	sw $a0, -12($fp)
	function_southwest_at_CellularAutomaton_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 192
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_neighbors_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -752
	lw $a0, 0($fp)
	sw $a0, -140($fp)
	lw $a0, 4($fp)
	sw $a0, -148($fp)
	lw $a0, -148($fp)
	li $a1, 0
	jal equals
	sw $v0, -152($fp)
	lw $a0, -152($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_error_label_3
	j function_neighbors_at_CellularAutomaton_continue_label_4
	function_neighbors_at_CellularAutomaton_error_label_3:
	li $v0, 4
	la $a0, data_22
	syscall
	li $v0, 10
	syscall
	function_neighbors_at_CellularAutomaton_continue_label_4:
	lw $a0, -148($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -140($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -148($fp)
	lw $a1, 0($a0)
	sw $a1, -156($fp)
	lw $a0, -156($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 52
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -144($fp)
	addi $sp, $sp, 8
	la $a0, data_23 + 0
	sw $a0, -160($fp)
	lw $a0, -160($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -164($fp)
	addi $sp, $sp, 4
	lw $t0, -144($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -108($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -112($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -116($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -120($fp)
	lw $a0, -108($fp)
	lw $a1, -112($fp)
	jal equals
	sw $v0, -124($fp)
	lw $a0, -124($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_5
	lw $a0, -108($fp)
	lw $a1, -116($fp)
	jal equals
	sw $v0, -124($fp)
	lw $a0, -124($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_5
	lw $a0, -108($fp)
	lw $a1, -120($fp)
	jal equals
	sw $v0, -124($fp)
	lw $a0, -124($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_string_label_6
	j function_neighbors_at_CellularAutomaton_reference_label_7
	function_neighbors_at_CellularAutomaton_int_label_5:
	lw $a0, -144($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	lw $a0, -164($fp)
	lw $a1, 12($a0)
	sw $a1, -132($fp)
	lw $a0, -128($fp)
	lw $a1, -132($fp)
	jal equals
	sw $v0, -104($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_8
	function_neighbors_at_CellularAutomaton_string_label_6:
	lw $a0, -144($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	lw $a0, -164($fp)
	lw $a1, 12($a0)
	sw $a1, -132($fp)
	lw $a0, -128($fp)
	lw $a1, -132($fp)
	jal equal_str
	sw $v0, -104($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_8
	function_neighbors_at_CellularAutomaton_reference_label_7:
	lw $a0, -144($fp)
	lw $a1, -164($fp)
	jal equals
	sw $v0, -104($fp)
	function_neighbors_at_CellularAutomaton_continue_label_8:
	lw $a0, -104($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -136($fp)
	addi $sp, $sp, 4
	lw $a0, -136($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, -100($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_then_label_0
	j function_neighbors_at_CellularAutomaton_else_label_1
	function_neighbors_at_CellularAutomaton_then_label_0:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -168($fp)
	addi $sp, $sp, 4
	lw $a0, -168($fp)
	sw $a0, -96($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_2
	function_neighbors_at_CellularAutomaton_else_label_1:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -172($fp)
	addi $sp, $sp, 4
	lw $a0, -172($fp)
	sw $a0, -96($fp)
	function_neighbors_at_CellularAutomaton_continue_label_2:
	lw $a0, -96($fp)
	lw $a1, 12($a0)
	sw $a1, -88($fp)
	lw $a0, 0($fp)
	sw $a0, -220($fp)
	lw $a0, 4($fp)
	sw $a0, -228($fp)
	lw $a0, -228($fp)
	li $a1, 0
	jal equals
	sw $v0, -232($fp)
	lw $a0, -232($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_error_label_12
	j function_neighbors_at_CellularAutomaton_continue_label_13
	function_neighbors_at_CellularAutomaton_error_label_12:
	li $v0, 4
	la $a0, data_24
	syscall
	li $v0, 10
	syscall
	function_neighbors_at_CellularAutomaton_continue_label_13:
	lw $a0, -228($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -220($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -228($fp)
	lw $a1, 0($a0)
	sw $a1, -236($fp)
	lw $a0, -236($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 56
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -224($fp)
	addi $sp, $sp, 8
	la $a0, data_23 + 0
	sw $a0, -240($fp)
	lw $a0, -240($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -244($fp)
	addi $sp, $sp, 4
	lw $t0, -224($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -188($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -192($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -196($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -200($fp)
	lw $a0, -188($fp)
	lw $a1, -192($fp)
	jal equals
	sw $v0, -204($fp)
	lw $a0, -204($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_14
	lw $a0, -188($fp)
	lw $a1, -196($fp)
	jal equals
	sw $v0, -204($fp)
	lw $a0, -204($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_14
	lw $a0, -188($fp)
	lw $a1, -200($fp)
	jal equals
	sw $v0, -204($fp)
	lw $a0, -204($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_string_label_15
	j function_neighbors_at_CellularAutomaton_reference_label_16
	function_neighbors_at_CellularAutomaton_int_label_14:
	lw $a0, -224($fp)
	lw $a1, 12($a0)
	sw $a1, -208($fp)
	lw $a0, -244($fp)
	lw $a1, 12($a0)
	sw $a1, -212($fp)
	lw $a0, -208($fp)
	lw $a1, -212($fp)
	jal equals
	sw $v0, -184($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_17
	function_neighbors_at_CellularAutomaton_string_label_15:
	lw $a0, -224($fp)
	lw $a1, 12($a0)
	sw $a1, -208($fp)
	lw $a0, -244($fp)
	lw $a1, 12($a0)
	sw $a1, -212($fp)
	lw $a0, -208($fp)
	lw $a1, -212($fp)
	jal equal_str
	sw $v0, -184($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_17
	function_neighbors_at_CellularAutomaton_reference_label_16:
	lw $a0, -224($fp)
	lw $a1, -244($fp)
	jal equals
	sw $v0, -184($fp)
	function_neighbors_at_CellularAutomaton_continue_label_17:
	lw $a0, -184($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -216($fp)
	addi $sp, $sp, 4
	lw $a0, -216($fp)
	lw $a1, 12($a0)
	sw $a1, -180($fp)
	lw $a0, -180($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_then_label_9
	j function_neighbors_at_CellularAutomaton_else_label_10
	function_neighbors_at_CellularAutomaton_then_label_9:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -248($fp)
	addi $sp, $sp, 4
	lw $a0, -248($fp)
	sw $a0, -176($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_11
	function_neighbors_at_CellularAutomaton_else_label_10:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -252($fp)
	addi $sp, $sp, 4
	lw $a0, -252($fp)
	sw $a0, -176($fp)
	function_neighbors_at_CellularAutomaton_continue_label_11:
	lw $a0, -176($fp)
	lw $a1, 12($a0)
	sw $a1, -92($fp)
	lw $a0, -88($fp)
	lw $a1, -92($fp)
	add $a0 $a0 $a1
	sw $a0, -84($fp)
	lw $a0, -84($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -256($fp)
	addi $sp, $sp, 4
	lw $a0, -256($fp)
	lw $a1, 12($a0)
	sw $a1, -76($fp)
	lw $a0, 0($fp)
	sw $a0, -304($fp)
	lw $a0, 4($fp)
	sw $a0, -312($fp)
	lw $a0, -312($fp)
	li $a1, 0
	jal equals
	sw $v0, -316($fp)
	lw $a0, -316($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_error_label_21
	j function_neighbors_at_CellularAutomaton_continue_label_22
	function_neighbors_at_CellularAutomaton_error_label_21:
	li $v0, 4
	la $a0, data_25
	syscall
	li $v0, 10
	syscall
	function_neighbors_at_CellularAutomaton_continue_label_22:
	lw $a0, -312($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -304($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -312($fp)
	lw $a1, 0($a0)
	sw $a1, -320($fp)
	lw $a0, -320($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 60
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -308($fp)
	addi $sp, $sp, 8
	la $a0, data_23 + 0
	sw $a0, -324($fp)
	lw $a0, -324($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -328($fp)
	addi $sp, $sp, 4
	lw $t0, -308($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -272($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -276($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -280($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -284($fp)
	lw $a0, -272($fp)
	lw $a1, -276($fp)
	jal equals
	sw $v0, -288($fp)
	lw $a0, -288($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_23
	lw $a0, -272($fp)
	lw $a1, -280($fp)
	jal equals
	sw $v0, -288($fp)
	lw $a0, -288($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_23
	lw $a0, -272($fp)
	lw $a1, -284($fp)
	jal equals
	sw $v0, -288($fp)
	lw $a0, -288($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_string_label_24
	j function_neighbors_at_CellularAutomaton_reference_label_25
	function_neighbors_at_CellularAutomaton_int_label_23:
	lw $a0, -308($fp)
	lw $a1, 12($a0)
	sw $a1, -292($fp)
	lw $a0, -328($fp)
	lw $a1, 12($a0)
	sw $a1, -296($fp)
	lw $a0, -292($fp)
	lw $a1, -296($fp)
	jal equals
	sw $v0, -268($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_26
	function_neighbors_at_CellularAutomaton_string_label_24:
	lw $a0, -308($fp)
	lw $a1, 12($a0)
	sw $a1, -292($fp)
	lw $a0, -328($fp)
	lw $a1, 12($a0)
	sw $a1, -296($fp)
	lw $a0, -292($fp)
	lw $a1, -296($fp)
	jal equal_str
	sw $v0, -268($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_26
	function_neighbors_at_CellularAutomaton_reference_label_25:
	lw $a0, -308($fp)
	lw $a1, -328($fp)
	jal equals
	sw $v0, -268($fp)
	function_neighbors_at_CellularAutomaton_continue_label_26:
	lw $a0, -268($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -300($fp)
	addi $sp, $sp, 4
	lw $a0, -300($fp)
	lw $a1, 12($a0)
	sw $a1, -264($fp)
	lw $a0, -264($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_then_label_18
	j function_neighbors_at_CellularAutomaton_else_label_19
	function_neighbors_at_CellularAutomaton_then_label_18:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -332($fp)
	addi $sp, $sp, 4
	lw $a0, -332($fp)
	sw $a0, -260($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_20
	function_neighbors_at_CellularAutomaton_else_label_19:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -336($fp)
	addi $sp, $sp, 4
	lw $a0, -336($fp)
	sw $a0, -260($fp)
	function_neighbors_at_CellularAutomaton_continue_label_20:
	lw $a0, -260($fp)
	lw $a1, 12($a0)
	sw $a1, -80($fp)
	lw $a0, -76($fp)
	lw $a1, -80($fp)
	add $a0 $a0 $a1
	sw $a0, -72($fp)
	lw $a0, -72($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -340($fp)
	addi $sp, $sp, 4
	lw $a0, -340($fp)
	lw $a1, 12($a0)
	sw $a1, -64($fp)
	lw $a0, 0($fp)
	sw $a0, -388($fp)
	lw $a0, 4($fp)
	sw $a0, -396($fp)
	lw $a0, -396($fp)
	li $a1, 0
	jal equals
	sw $v0, -400($fp)
	lw $a0, -400($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_error_label_30
	j function_neighbors_at_CellularAutomaton_continue_label_31
	function_neighbors_at_CellularAutomaton_error_label_30:
	li $v0, 4
	la $a0, data_26
	syscall
	li $v0, 10
	syscall
	function_neighbors_at_CellularAutomaton_continue_label_31:
	lw $a0, -396($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -388($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -396($fp)
	lw $a1, 0($a0)
	sw $a1, -404($fp)
	lw $a0, -404($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 64
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -392($fp)
	addi $sp, $sp, 8
	la $a0, data_23 + 0
	sw $a0, -408($fp)
	lw $a0, -408($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -412($fp)
	addi $sp, $sp, 4
	lw $t0, -392($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -356($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -360($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -364($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -368($fp)
	lw $a0, -356($fp)
	lw $a1, -360($fp)
	jal equals
	sw $v0, -372($fp)
	lw $a0, -372($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_32
	lw $a0, -356($fp)
	lw $a1, -364($fp)
	jal equals
	sw $v0, -372($fp)
	lw $a0, -372($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_32
	lw $a0, -356($fp)
	lw $a1, -368($fp)
	jal equals
	sw $v0, -372($fp)
	lw $a0, -372($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_string_label_33
	j function_neighbors_at_CellularAutomaton_reference_label_34
	function_neighbors_at_CellularAutomaton_int_label_32:
	lw $a0, -392($fp)
	lw $a1, 12($a0)
	sw $a1, -376($fp)
	lw $a0, -412($fp)
	lw $a1, 12($a0)
	sw $a1, -380($fp)
	lw $a0, -376($fp)
	lw $a1, -380($fp)
	jal equals
	sw $v0, -352($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_35
	function_neighbors_at_CellularAutomaton_string_label_33:
	lw $a0, -392($fp)
	lw $a1, 12($a0)
	sw $a1, -376($fp)
	lw $a0, -412($fp)
	lw $a1, 12($a0)
	sw $a1, -380($fp)
	lw $a0, -376($fp)
	lw $a1, -380($fp)
	jal equal_str
	sw $v0, -352($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_35
	function_neighbors_at_CellularAutomaton_reference_label_34:
	lw $a0, -392($fp)
	lw $a1, -412($fp)
	jal equals
	sw $v0, -352($fp)
	function_neighbors_at_CellularAutomaton_continue_label_35:
	lw $a0, -352($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -384($fp)
	addi $sp, $sp, 4
	lw $a0, -384($fp)
	lw $a1, 12($a0)
	sw $a1, -348($fp)
	lw $a0, -348($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_then_label_27
	j function_neighbors_at_CellularAutomaton_else_label_28
	function_neighbors_at_CellularAutomaton_then_label_27:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -416($fp)
	addi $sp, $sp, 4
	lw $a0, -416($fp)
	sw $a0, -344($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_29
	function_neighbors_at_CellularAutomaton_else_label_28:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -420($fp)
	addi $sp, $sp, 4
	lw $a0, -420($fp)
	sw $a0, -344($fp)
	function_neighbors_at_CellularAutomaton_continue_label_29:
	lw $a0, -344($fp)
	lw $a1, 12($a0)
	sw $a1, -68($fp)
	lw $a0, -64($fp)
	lw $a1, -68($fp)
	add $a0 $a0 $a1
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -424($fp)
	addi $sp, $sp, 4
	lw $a0, -424($fp)
	lw $a1, 12($a0)
	sw $a1, -52($fp)
	lw $a0, 0($fp)
	sw $a0, -472($fp)
	lw $a0, 4($fp)
	sw $a0, -480($fp)
	lw $a0, -480($fp)
	li $a1, 0
	jal equals
	sw $v0, -484($fp)
	lw $a0, -484($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_error_label_39
	j function_neighbors_at_CellularAutomaton_continue_label_40
	function_neighbors_at_CellularAutomaton_error_label_39:
	li $v0, 4
	la $a0, data_27
	syscall
	li $v0, 10
	syscall
	function_neighbors_at_CellularAutomaton_continue_label_40:
	lw $a0, -480($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -472($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -480($fp)
	lw $a1, 0($a0)
	sw $a1, -488($fp)
	lw $a0, -488($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 72
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -476($fp)
	addi $sp, $sp, 8
	la $a0, data_23 + 0
	sw $a0, -492($fp)
	lw $a0, -492($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -496($fp)
	addi $sp, $sp, 4
	lw $t0, -476($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -440($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -444($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -448($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -452($fp)
	lw $a0, -440($fp)
	lw $a1, -444($fp)
	jal equals
	sw $v0, -456($fp)
	lw $a0, -456($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_41
	lw $a0, -440($fp)
	lw $a1, -448($fp)
	jal equals
	sw $v0, -456($fp)
	lw $a0, -456($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_41
	lw $a0, -440($fp)
	lw $a1, -452($fp)
	jal equals
	sw $v0, -456($fp)
	lw $a0, -456($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_string_label_42
	j function_neighbors_at_CellularAutomaton_reference_label_43
	function_neighbors_at_CellularAutomaton_int_label_41:
	lw $a0, -476($fp)
	lw $a1, 12($a0)
	sw $a1, -460($fp)
	lw $a0, -496($fp)
	lw $a1, 12($a0)
	sw $a1, -464($fp)
	lw $a0, -460($fp)
	lw $a1, -464($fp)
	jal equals
	sw $v0, -436($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_44
	function_neighbors_at_CellularAutomaton_string_label_42:
	lw $a0, -476($fp)
	lw $a1, 12($a0)
	sw $a1, -460($fp)
	lw $a0, -496($fp)
	lw $a1, 12($a0)
	sw $a1, -464($fp)
	lw $a0, -460($fp)
	lw $a1, -464($fp)
	jal equal_str
	sw $v0, -436($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_44
	function_neighbors_at_CellularAutomaton_reference_label_43:
	lw $a0, -476($fp)
	lw $a1, -496($fp)
	jal equals
	sw $v0, -436($fp)
	function_neighbors_at_CellularAutomaton_continue_label_44:
	lw $a0, -436($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -468($fp)
	addi $sp, $sp, 4
	lw $a0, -468($fp)
	lw $a1, 12($a0)
	sw $a1, -432($fp)
	lw $a0, -432($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_then_label_36
	j function_neighbors_at_CellularAutomaton_else_label_37
	function_neighbors_at_CellularAutomaton_then_label_36:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -500($fp)
	addi $sp, $sp, 4
	lw $a0, -500($fp)
	sw $a0, -428($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_38
	function_neighbors_at_CellularAutomaton_else_label_37:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -504($fp)
	addi $sp, $sp, 4
	lw $a0, -504($fp)
	sw $a0, -428($fp)
	function_neighbors_at_CellularAutomaton_continue_label_38:
	lw $a0, -428($fp)
	lw $a1, 12($a0)
	sw $a1, -56($fp)
	lw $a0, -52($fp)
	lw $a1, -56($fp)
	add $a0 $a0 $a1
	sw $a0, -48($fp)
	lw $a0, -48($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -508($fp)
	addi $sp, $sp, 4
	lw $a0, -508($fp)
	lw $a1, 12($a0)
	sw $a1, -40($fp)
	lw $a0, 0($fp)
	sw $a0, -556($fp)
	lw $a0, 4($fp)
	sw $a0, -564($fp)
	lw $a0, -564($fp)
	li $a1, 0
	jal equals
	sw $v0, -568($fp)
	lw $a0, -568($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_error_label_48
	j function_neighbors_at_CellularAutomaton_continue_label_49
	function_neighbors_at_CellularAutomaton_error_label_48:
	li $v0, 4
	la $a0, data_28
	syscall
	li $v0, 10
	syscall
	function_neighbors_at_CellularAutomaton_continue_label_49:
	lw $a0, -564($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -556($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -564($fp)
	lw $a1, 0($a0)
	sw $a1, -572($fp)
	lw $a0, -572($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 68
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -560($fp)
	addi $sp, $sp, 8
	la $a0, data_23 + 0
	sw $a0, -576($fp)
	lw $a0, -576($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -580($fp)
	addi $sp, $sp, 4
	lw $t0, -560($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -524($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -528($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -532($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -536($fp)
	lw $a0, -524($fp)
	lw $a1, -528($fp)
	jal equals
	sw $v0, -540($fp)
	lw $a0, -540($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_50
	lw $a0, -524($fp)
	lw $a1, -532($fp)
	jal equals
	sw $v0, -540($fp)
	lw $a0, -540($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_50
	lw $a0, -524($fp)
	lw $a1, -536($fp)
	jal equals
	sw $v0, -540($fp)
	lw $a0, -540($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_string_label_51
	j function_neighbors_at_CellularAutomaton_reference_label_52
	function_neighbors_at_CellularAutomaton_int_label_50:
	lw $a0, -560($fp)
	lw $a1, 12($a0)
	sw $a1, -544($fp)
	lw $a0, -580($fp)
	lw $a1, 12($a0)
	sw $a1, -548($fp)
	lw $a0, -544($fp)
	lw $a1, -548($fp)
	jal equals
	sw $v0, -520($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_53
	function_neighbors_at_CellularAutomaton_string_label_51:
	lw $a0, -560($fp)
	lw $a1, 12($a0)
	sw $a1, -544($fp)
	lw $a0, -580($fp)
	lw $a1, 12($a0)
	sw $a1, -548($fp)
	lw $a0, -544($fp)
	lw $a1, -548($fp)
	jal equal_str
	sw $v0, -520($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_53
	function_neighbors_at_CellularAutomaton_reference_label_52:
	lw $a0, -560($fp)
	lw $a1, -580($fp)
	jal equals
	sw $v0, -520($fp)
	function_neighbors_at_CellularAutomaton_continue_label_53:
	lw $a0, -520($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -552($fp)
	addi $sp, $sp, 4
	lw $a0, -552($fp)
	lw $a1, 12($a0)
	sw $a1, -516($fp)
	lw $a0, -516($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_then_label_45
	j function_neighbors_at_CellularAutomaton_else_label_46
	function_neighbors_at_CellularAutomaton_then_label_45:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -584($fp)
	addi $sp, $sp, 4
	lw $a0, -584($fp)
	sw $a0, -512($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_47
	function_neighbors_at_CellularAutomaton_else_label_46:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -588($fp)
	addi $sp, $sp, 4
	lw $a0, -588($fp)
	sw $a0, -512($fp)
	function_neighbors_at_CellularAutomaton_continue_label_47:
	lw $a0, -512($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -40($fp)
	lw $a1, -44($fp)
	add $a0 $a0 $a1
	sw $a0, -36($fp)
	lw $a0, -36($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -592($fp)
	addi $sp, $sp, 4
	lw $a0, -592($fp)
	lw $a1, 12($a0)
	sw $a1, -28($fp)
	lw $a0, 0($fp)
	sw $a0, -640($fp)
	lw $a0, 4($fp)
	sw $a0, -648($fp)
	lw $a0, -648($fp)
	li $a1, 0
	jal equals
	sw $v0, -652($fp)
	lw $a0, -652($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_error_label_57
	j function_neighbors_at_CellularAutomaton_continue_label_58
	function_neighbors_at_CellularAutomaton_error_label_57:
	li $v0, 4
	la $a0, data_29
	syscall
	li $v0, 10
	syscall
	function_neighbors_at_CellularAutomaton_continue_label_58:
	lw $a0, -648($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -640($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -648($fp)
	lw $a1, 0($a0)
	sw $a1, -656($fp)
	lw $a0, -656($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 76
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -644($fp)
	addi $sp, $sp, 8
	la $a0, data_23 + 0
	sw $a0, -660($fp)
	lw $a0, -660($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -664($fp)
	addi $sp, $sp, 4
	lw $t0, -644($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -608($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -612($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -616($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -620($fp)
	lw $a0, -608($fp)
	lw $a1, -612($fp)
	jal equals
	sw $v0, -624($fp)
	lw $a0, -624($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_59
	lw $a0, -608($fp)
	lw $a1, -616($fp)
	jal equals
	sw $v0, -624($fp)
	lw $a0, -624($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_59
	lw $a0, -608($fp)
	lw $a1, -620($fp)
	jal equals
	sw $v0, -624($fp)
	lw $a0, -624($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_string_label_60
	j function_neighbors_at_CellularAutomaton_reference_label_61
	function_neighbors_at_CellularAutomaton_int_label_59:
	lw $a0, -644($fp)
	lw $a1, 12($a0)
	sw $a1, -628($fp)
	lw $a0, -664($fp)
	lw $a1, 12($a0)
	sw $a1, -632($fp)
	lw $a0, -628($fp)
	lw $a1, -632($fp)
	jal equals
	sw $v0, -604($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_62
	function_neighbors_at_CellularAutomaton_string_label_60:
	lw $a0, -644($fp)
	lw $a1, 12($a0)
	sw $a1, -628($fp)
	lw $a0, -664($fp)
	lw $a1, 12($a0)
	sw $a1, -632($fp)
	lw $a0, -628($fp)
	lw $a1, -632($fp)
	jal equal_str
	sw $v0, -604($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_62
	function_neighbors_at_CellularAutomaton_reference_label_61:
	lw $a0, -644($fp)
	lw $a1, -664($fp)
	jal equals
	sw $v0, -604($fp)
	function_neighbors_at_CellularAutomaton_continue_label_62:
	lw $a0, -604($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -636($fp)
	addi $sp, $sp, 4
	lw $a0, -636($fp)
	lw $a1, 12($a0)
	sw $a1, -600($fp)
	lw $a0, -600($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_then_label_54
	j function_neighbors_at_CellularAutomaton_else_label_55
	function_neighbors_at_CellularAutomaton_then_label_54:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -668($fp)
	addi $sp, $sp, 4
	lw $a0, -668($fp)
	sw $a0, -596($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_56
	function_neighbors_at_CellularAutomaton_else_label_55:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -672($fp)
	addi $sp, $sp, 4
	lw $a0, -672($fp)
	sw $a0, -596($fp)
	function_neighbors_at_CellularAutomaton_continue_label_56:
	lw $a0, -596($fp)
	lw $a1, 12($a0)
	sw $a1, -32($fp)
	lw $a0, -28($fp)
	lw $a1, -32($fp)
	add $a0 $a0 $a1
	sw $a0, -24($fp)
	lw $a0, -24($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -676($fp)
	addi $sp, $sp, 4
	lw $a0, -676($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, 0($fp)
	sw $a0, -724($fp)
	lw $a0, 4($fp)
	sw $a0, -732($fp)
	lw $a0, -732($fp)
	li $a1, 0
	jal equals
	sw $v0, -736($fp)
	lw $a0, -736($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_error_label_66
	j function_neighbors_at_CellularAutomaton_continue_label_67
	function_neighbors_at_CellularAutomaton_error_label_66:
	li $v0, 4
	la $a0, data_30
	syscall
	li $v0, 10
	syscall
	function_neighbors_at_CellularAutomaton_continue_label_67:
	lw $a0, -732($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -724($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -732($fp)
	lw $a1, 0($a0)
	sw $a1, -740($fp)
	lw $a0, -740($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 80
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -728($fp)
	addi $sp, $sp, 8
	la $a0, data_23 + 0
	sw $a0, -744($fp)
	lw $a0, -744($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -748($fp)
	addi $sp, $sp, 4
	lw $t0, -728($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -692($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -696($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -700($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -704($fp)
	lw $a0, -692($fp)
	lw $a1, -696($fp)
	jal equals
	sw $v0, -708($fp)
	lw $a0, -708($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_68
	lw $a0, -692($fp)
	lw $a1, -700($fp)
	jal equals
	sw $v0, -708($fp)
	lw $a0, -708($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_int_label_68
	lw $a0, -692($fp)
	lw $a1, -704($fp)
	jal equals
	sw $v0, -708($fp)
	lw $a0, -708($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_string_label_69
	j function_neighbors_at_CellularAutomaton_reference_label_70
	function_neighbors_at_CellularAutomaton_int_label_68:
	lw $a0, -728($fp)
	lw $a1, 12($a0)
	sw $a1, -712($fp)
	lw $a0, -748($fp)
	lw $a1, 12($a0)
	sw $a1, -716($fp)
	lw $a0, -712($fp)
	lw $a1, -716($fp)
	jal equals
	sw $v0, -688($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_71
	function_neighbors_at_CellularAutomaton_string_label_69:
	lw $a0, -728($fp)
	lw $a1, 12($a0)
	sw $a1, -712($fp)
	lw $a0, -748($fp)
	lw $a1, 12($a0)
	sw $a1, -716($fp)
	lw $a0, -712($fp)
	lw $a1, -716($fp)
	jal equal_str
	sw $v0, -688($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_71
	function_neighbors_at_CellularAutomaton_reference_label_70:
	lw $a0, -728($fp)
	lw $a1, -748($fp)
	jal equals
	sw $v0, -688($fp)
	function_neighbors_at_CellularAutomaton_continue_label_71:
	lw $a0, -688($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -720($fp)
	addi $sp, $sp, 4
	lw $a0, -720($fp)
	lw $a1, 12($a0)
	sw $a1, -684($fp)
	lw $a0, -684($fp)
	bne $a0 $zero function_neighbors_at_CellularAutomaton_then_label_63
	j function_neighbors_at_CellularAutomaton_else_label_64
	function_neighbors_at_CellularAutomaton_then_label_63:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -752($fp)
	addi $sp, $sp, 4
	lw $a0, -752($fp)
	sw $a0, -680($fp)
	j function_neighbors_at_CellularAutomaton_continue_label_65
	function_neighbors_at_CellularAutomaton_else_label_64:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -756($fp)
	addi $sp, $sp, 4
	lw $a0, -756($fp)
	sw $a0, -680($fp)
	function_neighbors_at_CellularAutomaton_continue_label_65:
	lw $a0, -680($fp)
	lw $a1, 12($a0)
	sw $a1, -20($fp)
	lw $a0, -16($fp)
	lw $a1, -20($fp)
	add $a0 $a0 $a1
	sw $a0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -760($fp)
	addi $sp, $sp, 4
	lw $v0, -760($fp)
	addi $sp, $sp, 752
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_cell_at_next_evolution_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -240
	lw $a0, 0($fp)
	sw $a0, -56($fp)
	lw $a0, 4($fp)
	sw $a0, -64($fp)
	lw $a0, -64($fp)
	li $a1, 0
	jal equals
	sw $v0, -68($fp)
	lw $a0, -68($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_error_label_3
	j function_cell_at_next_evolution_at_CellularAutomaton_continue_label_4
	function_cell_at_next_evolution_at_CellularAutomaton_error_label_3:
	li $v0, 4
	la $a0, data_31
	syscall
	li $v0, 10
	syscall
	function_cell_at_next_evolution_at_CellularAutomaton_continue_label_4:
	lw $a0, -64($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -56($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -64($fp)
	lw $a1, 0($a0)
	sw $a1, -72($fp)
	lw $a0, -72($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 84
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -60($fp)
	addi $sp, $sp, 8
	li $a0, 3
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -76($fp)
	addi $sp, $sp, 4
	lw $t0, -60($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -24($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -28($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -32($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -36($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_int_label_5
	lw $a0, -24($fp)
	lw $a1, -32($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_int_label_5
	lw $a0, -24($fp)
	lw $a1, -36($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_string_label_6
	j function_cell_at_next_evolution_at_CellularAutomaton_reference_label_7
	function_cell_at_next_evolution_at_CellularAutomaton_int_label_5:
	lw $a0, -60($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -76($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equals
	sw $v0, -20($fp)
	j function_cell_at_next_evolution_at_CellularAutomaton_continue_label_8
	function_cell_at_next_evolution_at_CellularAutomaton_string_label_6:
	lw $a0, -60($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -76($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equal_str
	sw $v0, -20($fp)
	j function_cell_at_next_evolution_at_CellularAutomaton_continue_label_8
	function_cell_at_next_evolution_at_CellularAutomaton_reference_label_7:
	lw $a0, -60($fp)
	lw $a1, -76($fp)
	jal equals
	sw $v0, -20($fp)
	function_cell_at_next_evolution_at_CellularAutomaton_continue_label_8:
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -52($fp)
	addi $sp, $sp, 4
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_then_label_0
	j function_cell_at_next_evolution_at_CellularAutomaton_else_label_1
	function_cell_at_next_evolution_at_CellularAutomaton_then_label_0:
	la $a0, data_23 + 0
	sw $a0, -80($fp)
	lw $a0, -80($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -84($fp)
	addi $sp, $sp, 4
	lw $a0, -84($fp)
	sw $a0, -12($fp)
	j function_cell_at_next_evolution_at_CellularAutomaton_continue_label_2
	function_cell_at_next_evolution_at_CellularAutomaton_else_label_1:
	lw $a0, 0($fp)
	sw $a0, -132($fp)
	lw $a0, 4($fp)
	sw $a0, -140($fp)
	lw $a0, -140($fp)
	li $a1, 0
	jal equals
	sw $v0, -144($fp)
	lw $a0, -144($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_error_label_12
	j function_cell_at_next_evolution_at_CellularAutomaton_continue_label_13
	function_cell_at_next_evolution_at_CellularAutomaton_error_label_12:
	li $v0, 4
	la $a0, data_32
	syscall
	li $v0, 10
	syscall
	function_cell_at_next_evolution_at_CellularAutomaton_continue_label_13:
	lw $a0, -140($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -132($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -140($fp)
	lw $a1, 0($a0)
	sw $a1, -148($fp)
	lw $a0, -148($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 84
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -136($fp)
	addi $sp, $sp, 8
	li $a0, 2
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -152($fp)
	addi $sp, $sp, 4
	lw $t0, -136($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -100($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -104($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -108($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -112($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equals
	sw $v0, -116($fp)
	lw $a0, -116($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_int_label_14
	lw $a0, -100($fp)
	lw $a1, -108($fp)
	jal equals
	sw $v0, -116($fp)
	lw $a0, -116($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_int_label_14
	lw $a0, -100($fp)
	lw $a1, -112($fp)
	jal equals
	sw $v0, -116($fp)
	lw $a0, -116($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_string_label_15
	j function_cell_at_next_evolution_at_CellularAutomaton_reference_label_16
	function_cell_at_next_evolution_at_CellularAutomaton_int_label_14:
	lw $a0, -136($fp)
	lw $a1, 12($a0)
	sw $a1, -120($fp)
	lw $a0, -152($fp)
	lw $a1, 12($a0)
	sw $a1, -124($fp)
	lw $a0, -120($fp)
	lw $a1, -124($fp)
	jal equals
	sw $v0, -96($fp)
	j function_cell_at_next_evolution_at_CellularAutomaton_continue_label_17
	function_cell_at_next_evolution_at_CellularAutomaton_string_label_15:
	lw $a0, -136($fp)
	lw $a1, 12($a0)
	sw $a1, -120($fp)
	lw $a0, -152($fp)
	lw $a1, 12($a0)
	sw $a1, -124($fp)
	lw $a0, -120($fp)
	lw $a1, -124($fp)
	jal equal_str
	sw $v0, -96($fp)
	j function_cell_at_next_evolution_at_CellularAutomaton_continue_label_17
	function_cell_at_next_evolution_at_CellularAutomaton_reference_label_16:
	lw $a0, -136($fp)
	lw $a1, -152($fp)
	jal equals
	sw $v0, -96($fp)
	function_cell_at_next_evolution_at_CellularAutomaton_continue_label_17:
	lw $a0, -96($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -128($fp)
	addi $sp, $sp, 4
	lw $a0, -128($fp)
	lw $a1, 12($a0)
	sw $a1, -92($fp)
	lw $a0, -92($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_then_label_9
	j function_cell_at_next_evolution_at_CellularAutomaton_else_label_10
	function_cell_at_next_evolution_at_CellularAutomaton_then_label_9:
	lw $a0, 0($fp)
	sw $a0, -200($fp)
	lw $a0, 4($fp)
	sw $a0, -208($fp)
	lw $a0, -208($fp)
	li $a1, 0
	jal equals
	sw $v0, -212($fp)
	lw $a0, -212($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_error_label_21
	j function_cell_at_next_evolution_at_CellularAutomaton_continue_label_22
	function_cell_at_next_evolution_at_CellularAutomaton_error_label_21:
	li $v0, 4
	la $a0, data_33
	syscall
	li $v0, 10
	syscall
	function_cell_at_next_evolution_at_CellularAutomaton_continue_label_22:
	lw $a0, -208($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -200($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -208($fp)
	lw $a1, 0($a0)
	sw $a1, -216($fp)
	lw $a0, -216($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 48
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -204($fp)
	addi $sp, $sp, 8
	la $a0, data_23 + 0
	sw $a0, -220($fp)
	lw $a0, -220($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -224($fp)
	addi $sp, $sp, 4
	lw $t0, -204($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -168($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -172($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -176($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -180($fp)
	lw $a0, -168($fp)
	lw $a1, -172($fp)
	jal equals
	sw $v0, -184($fp)
	lw $a0, -184($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_int_label_23
	lw $a0, -168($fp)
	lw $a1, -176($fp)
	jal equals
	sw $v0, -184($fp)
	lw $a0, -184($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_int_label_23
	lw $a0, -168($fp)
	lw $a1, -180($fp)
	jal equals
	sw $v0, -184($fp)
	lw $a0, -184($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_string_label_24
	j function_cell_at_next_evolution_at_CellularAutomaton_reference_label_25
	function_cell_at_next_evolution_at_CellularAutomaton_int_label_23:
	lw $a0, -204($fp)
	lw $a1, 12($a0)
	sw $a1, -188($fp)
	lw $a0, -224($fp)
	lw $a1, 12($a0)
	sw $a1, -192($fp)
	lw $a0, -188($fp)
	lw $a1, -192($fp)
	jal equals
	sw $v0, -164($fp)
	j function_cell_at_next_evolution_at_CellularAutomaton_continue_label_26
	function_cell_at_next_evolution_at_CellularAutomaton_string_label_24:
	lw $a0, -204($fp)
	lw $a1, 12($a0)
	sw $a1, -188($fp)
	lw $a0, -224($fp)
	lw $a1, 12($a0)
	sw $a1, -192($fp)
	lw $a0, -188($fp)
	lw $a1, -192($fp)
	jal equal_str
	sw $v0, -164($fp)
	j function_cell_at_next_evolution_at_CellularAutomaton_continue_label_26
	function_cell_at_next_evolution_at_CellularAutomaton_reference_label_25:
	lw $a0, -204($fp)
	lw $a1, -224($fp)
	jal equals
	sw $v0, -164($fp)
	function_cell_at_next_evolution_at_CellularAutomaton_continue_label_26:
	lw $a0, -164($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -196($fp)
	addi $sp, $sp, 4
	lw $a0, -196($fp)
	lw $a1, 12($a0)
	sw $a1, -160($fp)
	lw $a0, -160($fp)
	bne $a0 $zero function_cell_at_next_evolution_at_CellularAutomaton_then_label_18
	j function_cell_at_next_evolution_at_CellularAutomaton_else_label_19
	function_cell_at_next_evolution_at_CellularAutomaton_then_label_18:
	la $a0, data_23 + 0
	sw $a0, -228($fp)
	lw $a0, -228($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -232($fp)
	addi $sp, $sp, 4
	lw $a0, -232($fp)
	sw $a0, -156($fp)
	j function_cell_at_next_evolution_at_CellularAutomaton_continue_label_20
	function_cell_at_next_evolution_at_CellularAutomaton_else_label_19:
	la $a0, data_34 + 0
	sw $a0, -236($fp)
	lw $a0, -236($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -240($fp)
	addi $sp, $sp, 4
	lw $a0, -240($fp)
	sw $a0, -156($fp)
	function_cell_at_next_evolution_at_CellularAutomaton_continue_label_20:
	lw $a0, -156($fp)
	sw $a0, -88($fp)
	j function_cell_at_next_evolution_at_CellularAutomaton_continue_label_11
	function_cell_at_next_evolution_at_CellularAutomaton_else_label_10:
	la $a0, data_34 + 0
	sw $a0, -244($fp)
	lw $a0, -244($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -248($fp)
	addi $sp, $sp, 4
	lw $a0, -248($fp)
	sw $a0, -88($fp)
	function_cell_at_next_evolution_at_CellularAutomaton_continue_label_11:
	lw $a0, -88($fp)
	sw $a0, -12($fp)
	function_cell_at_next_evolution_at_CellularAutomaton_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 240
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_evolve_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -124
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -20($fp)
	addi $sp, $sp, 4
	lw $a0, -20($fp)
	sw $a0, -16($fp)
	lw $a0, 0($fp)
	sw $a0, -36($fp)
	lw $a0, -36($fp)
	li $a1, 0
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_evolve_at_CellularAutomaton_error_label_0
	j function_evolve_at_CellularAutomaton_continue_label_1
	function_evolve_at_CellularAutomaton_error_label_0:
	li $v0, 4
	la $a0, data_35
	syscall
	li $v0, 10
	syscall
	function_evolve_at_CellularAutomaton_continue_label_1:
	lw $a0, -36($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -36($fp)
	lw $a1, 0($a0)
	sw $a1, -44($fp)
	lw $a0, -44($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 44
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -32($fp)
	addi $sp, $sp, 4
	lw $a0, -32($fp)
	sw $a0, -28($fp)
	li $a0, 2
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -52($fp)
	function_evolve_at_CellularAutomaton_while_label_2:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -64($fp)
	lw $a0, -28($fp)
	lw $a1, 12($a0)
	sw $a1, -68($fp)
	lw $a0, -64($fp)
	lw $a1, -68($fp)
	jal less
	sw $v0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -72($fp)
	addi $sp, $sp, 4
	lw $a0, -72($fp)
	lw $a1, 12($a0)
	sw $a1, -56($fp)
	lw $a0, -56($fp)
	bne $a0 $zero function_evolve_at_CellularAutomaton_loop_label_3
	j function_evolve_at_CellularAutomaton_pool_label_4
	function_evolve_at_CellularAutomaton_loop_label_3:
	lw $a0, -16($fp)
	sw $a0, -80($fp)
	lw $a0, 0($fp)
	sw $a0, -88($fp)
	lw $a0, -88($fp)
	li $a1, 0
	jal equals
	sw $v0, -92($fp)
	lw $a0, -92($fp)
	bne $a0 $zero function_evolve_at_CellularAutomaton_error_label_5
	j function_evolve_at_CellularAutomaton_continue_label_6
	function_evolve_at_CellularAutomaton_error_label_5:
	li $v0, 4
	la $a0, data_36
	syscall
	li $v0, 10
	syscall
	function_evolve_at_CellularAutomaton_continue_label_6:
	lw $a0, -88($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -80($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -88($fp)
	lw $a1, 0($a0)
	sw $a1, -96($fp)
	lw $a0, -96($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 88
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -84($fp)
	addi $sp, $sp, 8
	lw $a0, -84($fp)
	sw $a0, -76($fp)
	lw $a0, -52($fp)
	sw $a0, -104($fp)
	lw $a0, -104($fp)
	li $a1, 0
	jal equals
	sw $v0, -108($fp)
	lw $a0, -108($fp)
	bne $a0 $zero function_evolve_at_CellularAutomaton_error_label_7
	j function_evolve_at_CellularAutomaton_continue_label_8
	function_evolve_at_CellularAutomaton_error_label_7:
	li $v0, 4
	la $a0, data_37
	syscall
	li $v0, 10
	syscall
	function_evolve_at_CellularAutomaton_continue_label_8:
	lw $a0, -104($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -76($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -104($fp)
	lw $a1, 0($a0)
	sw $a1, -112($fp)
	lw $a0, -112($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 16
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -100($fp)
	addi $sp, $sp, 8
	lw $a0, -100($fp)
	sw $a0, -52($fp)
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -120($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -128($fp)
	addi $sp, $sp, 4
	lw $a0, -128($fp)
	lw $a1, 12($a0)
	sw $a1, -124($fp)
	lw $a0, -120($fp)
	lw $a1, -124($fp)
	add $a0 $a0 $a1
	sw $a0, -116($fp)
	lw $a0, -116($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -132($fp)
	addi $sp, $sp, 4
	lw $a0, -132($fp)
	sw $a0, -16($fp)
	j function_evolve_at_CellularAutomaton_while_label_2
	function_evolve_at_CellularAutomaton_pool_label_4:
	lw $a0, 0($fp)
	lw $a1, -52($fp)
	sw $a1, 24($a0)
	lw $a0, 0($fp)
	sw $a0, -48($fp)
	lw $a0, -48($fp)
	sw $a0, -24($fp)
	lw $a0, -24($fp)
	sw $a0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 124
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_option_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -1880
	li $a0, 3
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -16($fp)
	la $a0, data_38 + 0
	sw $a0, -24($fp)
	lw $a0, -24($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -28($fp)
	addi $sp, $sp, 4
	lw $a0, -28($fp)
	sw $a0, -20($fp)
	lw $a0, 0($fp)
	sw $a0, -36($fp)
	lw $a0, -36($fp)
	li $a1, 0
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_0
	j function_option_at_CellularAutomaton_continue_label_1
	function_option_at_CellularAutomaton_error_label_0:
	li $v0, 4
	la $a0, data_39
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_1:
	lw $a0, -36($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -36($fp)
	lw $a1, 0($a0)
	sw $a1, -44($fp)
	lw $a0, -44($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -32($fp)
	addi $sp, $sp, 8
	la $a0, data_40 + 0
	sw $a0, -52($fp)
	lw $a0, -52($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $a0, -56($fp)
	sw $a0, -48($fp)
	lw $a0, 0($fp)
	sw $a0, -64($fp)
	lw $a0, -64($fp)
	li $a1, 0
	jal equals
	sw $v0, -68($fp)
	lw $a0, -68($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_2
	j function_option_at_CellularAutomaton_continue_label_3
	function_option_at_CellularAutomaton_error_label_2:
	li $v0, 4
	la $a0, data_41
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_3:
	lw $a0, -64($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -48($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -64($fp)
	lw $a1, 0($a0)
	sw $a1, -72($fp)
	lw $a0, -72($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -60($fp)
	addi $sp, $sp, 8
	la $a0, data_42 + 0
	sw $a0, -80($fp)
	lw $a0, -80($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -84($fp)
	addi $sp, $sp, 4
	lw $a0, -84($fp)
	sw $a0, -76($fp)
	lw $a0, 0($fp)
	sw $a0, -92($fp)
	lw $a0, -92($fp)
	li $a1, 0
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_4
	j function_option_at_CellularAutomaton_continue_label_5
	function_option_at_CellularAutomaton_error_label_4:
	li $v0, 4
	la $a0, data_43
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_5:
	lw $a0, -92($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -76($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -92($fp)
	lw $a1, 0($a0)
	sw $a1, -100($fp)
	lw $a0, -100($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -88($fp)
	addi $sp, $sp, 8
	la $a0, data_44 + 0
	sw $a0, -108($fp)
	lw $a0, -108($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -112($fp)
	addi $sp, $sp, 4
	lw $a0, -112($fp)
	sw $a0, -104($fp)
	lw $a0, 0($fp)
	sw $a0, -120($fp)
	lw $a0, -120($fp)
	li $a1, 0
	jal equals
	sw $v0, -124($fp)
	lw $a0, -124($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_6
	j function_option_at_CellularAutomaton_continue_label_7
	function_option_at_CellularAutomaton_error_label_6:
	li $v0, 4
	la $a0, data_45
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_7:
	lw $a0, -120($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -104($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -120($fp)
	lw $a1, 0($a0)
	sw $a1, -128($fp)
	lw $a0, -128($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -116($fp)
	addi $sp, $sp, 8
	la $a0, data_46 + 0
	sw $a0, -136($fp)
	lw $a0, -136($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -140($fp)
	addi $sp, $sp, 4
	lw $a0, -140($fp)
	sw $a0, -132($fp)
	lw $a0, 0($fp)
	sw $a0, -148($fp)
	lw $a0, -148($fp)
	li $a1, 0
	jal equals
	sw $v0, -152($fp)
	lw $a0, -152($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_8
	j function_option_at_CellularAutomaton_continue_label_9
	function_option_at_CellularAutomaton_error_label_8:
	li $v0, 4
	la $a0, data_47
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_9:
	lw $a0, -148($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -132($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -148($fp)
	lw $a1, 0($a0)
	sw $a1, -156($fp)
	lw $a0, -156($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -144($fp)
	addi $sp, $sp, 8
	la $a0, data_48 + 0
	sw $a0, -164($fp)
	lw $a0, -164($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -168($fp)
	addi $sp, $sp, 4
	lw $a0, -168($fp)
	sw $a0, -160($fp)
	lw $a0, 0($fp)
	sw $a0, -176($fp)
	lw $a0, -176($fp)
	li $a1, 0
	jal equals
	sw $v0, -180($fp)
	lw $a0, -180($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_10
	j function_option_at_CellularAutomaton_continue_label_11
	function_option_at_CellularAutomaton_error_label_10:
	li $v0, 4
	la $a0, data_49
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_11:
	lw $a0, -176($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -160($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -176($fp)
	lw $a1, 0($a0)
	sw $a1, -184($fp)
	lw $a0, -184($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -172($fp)
	addi $sp, $sp, 8
	la $a0, data_50 + 0
	sw $a0, -192($fp)
	lw $a0, -192($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -196($fp)
	addi $sp, $sp, 4
	lw $a0, -196($fp)
	sw $a0, -188($fp)
	lw $a0, 0($fp)
	sw $a0, -204($fp)
	lw $a0, -204($fp)
	li $a1, 0
	jal equals
	sw $v0, -208($fp)
	lw $a0, -208($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_12
	j function_option_at_CellularAutomaton_continue_label_13
	function_option_at_CellularAutomaton_error_label_12:
	li $v0, 4
	la $a0, data_51
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_13:
	lw $a0, -204($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -188($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -204($fp)
	lw $a1, 0($a0)
	sw $a1, -212($fp)
	lw $a0, -212($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -200($fp)
	addi $sp, $sp, 8
	la $a0, data_52 + 0
	sw $a0, -220($fp)
	lw $a0, -220($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -224($fp)
	addi $sp, $sp, 4
	lw $a0, -224($fp)
	sw $a0, -216($fp)
	lw $a0, 0($fp)
	sw $a0, -232($fp)
	lw $a0, -232($fp)
	li $a1, 0
	jal equals
	sw $v0, -236($fp)
	lw $a0, -236($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_14
	j function_option_at_CellularAutomaton_continue_label_15
	function_option_at_CellularAutomaton_error_label_14:
	li $v0, 4
	la $a0, data_53
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_15:
	lw $a0, -232($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -216($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -232($fp)
	lw $a1, 0($a0)
	sw $a1, -240($fp)
	lw $a0, -240($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -228($fp)
	addi $sp, $sp, 8
	la $a0, data_54 + 0
	sw $a0, -248($fp)
	lw $a0, -248($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -252($fp)
	addi $sp, $sp, 4
	lw $a0, -252($fp)
	sw $a0, -244($fp)
	lw $a0, 0($fp)
	sw $a0, -260($fp)
	lw $a0, -260($fp)
	li $a1, 0
	jal equals
	sw $v0, -264($fp)
	lw $a0, -264($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_16
	j function_option_at_CellularAutomaton_continue_label_17
	function_option_at_CellularAutomaton_error_label_16:
	li $v0, 4
	la $a0, data_55
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_17:
	lw $a0, -260($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -244($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -260($fp)
	lw $a1, 0($a0)
	sw $a1, -268($fp)
	lw $a0, -268($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -256($fp)
	addi $sp, $sp, 8
	la $a0, data_56 + 0
	sw $a0, -276($fp)
	lw $a0, -276($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -280($fp)
	addi $sp, $sp, 4
	lw $a0, -280($fp)
	sw $a0, -272($fp)
	lw $a0, 0($fp)
	sw $a0, -288($fp)
	lw $a0, -288($fp)
	li $a1, 0
	jal equals
	sw $v0, -292($fp)
	lw $a0, -292($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_18
	j function_option_at_CellularAutomaton_continue_label_19
	function_option_at_CellularAutomaton_error_label_18:
	li $v0, 4
	la $a0, data_57
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_19:
	lw $a0, -288($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -272($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -288($fp)
	lw $a1, 0($a0)
	sw $a1, -296($fp)
	lw $a0, -296($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -284($fp)
	addi $sp, $sp, 8
	la $a0, data_58 + 0
	sw $a0, -304($fp)
	lw $a0, -304($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -308($fp)
	addi $sp, $sp, 4
	lw $a0, -308($fp)
	sw $a0, -300($fp)
	lw $a0, 0($fp)
	sw $a0, -316($fp)
	lw $a0, -316($fp)
	li $a1, 0
	jal equals
	sw $v0, -320($fp)
	lw $a0, -320($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_20
	j function_option_at_CellularAutomaton_continue_label_21
	function_option_at_CellularAutomaton_error_label_20:
	li $v0, 4
	la $a0, data_59
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_21:
	lw $a0, -316($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -300($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -316($fp)
	lw $a1, 0($a0)
	sw $a1, -324($fp)
	lw $a0, -324($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -312($fp)
	addi $sp, $sp, 8
	la $a0, data_60 + 0
	sw $a0, -332($fp)
	lw $a0, -332($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -336($fp)
	addi $sp, $sp, 4
	lw $a0, -336($fp)
	sw $a0, -328($fp)
	lw $a0, 0($fp)
	sw $a0, -344($fp)
	lw $a0, -344($fp)
	li $a1, 0
	jal equals
	sw $v0, -348($fp)
	lw $a0, -348($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_22
	j function_option_at_CellularAutomaton_continue_label_23
	function_option_at_CellularAutomaton_error_label_22:
	li $v0, 4
	la $a0, data_61
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_23:
	lw $a0, -344($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -328($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -344($fp)
	lw $a1, 0($a0)
	sw $a1, -352($fp)
	lw $a0, -352($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -340($fp)
	addi $sp, $sp, 8
	la $a0, data_62 + 0
	sw $a0, -360($fp)
	lw $a0, -360($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -364($fp)
	addi $sp, $sp, 4
	lw $a0, -364($fp)
	sw $a0, -356($fp)
	lw $a0, 0($fp)
	sw $a0, -372($fp)
	lw $a0, -372($fp)
	li $a1, 0
	jal equals
	sw $v0, -376($fp)
	lw $a0, -376($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_24
	j function_option_at_CellularAutomaton_continue_label_25
	function_option_at_CellularAutomaton_error_label_24:
	li $v0, 4
	la $a0, data_63
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_25:
	lw $a0, -372($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -356($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -372($fp)
	lw $a1, 0($a0)
	sw $a1, -380($fp)
	lw $a0, -380($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -368($fp)
	addi $sp, $sp, 8
	la $a0, data_64 + 0
	sw $a0, -388($fp)
	lw $a0, -388($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -392($fp)
	addi $sp, $sp, 4
	lw $a0, -392($fp)
	sw $a0, -384($fp)
	lw $a0, 0($fp)
	sw $a0, -400($fp)
	lw $a0, -400($fp)
	li $a1, 0
	jal equals
	sw $v0, -404($fp)
	lw $a0, -404($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_26
	j function_option_at_CellularAutomaton_continue_label_27
	function_option_at_CellularAutomaton_error_label_26:
	li $v0, 4
	la $a0, data_65
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_27:
	lw $a0, -400($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -384($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -400($fp)
	lw $a1, 0($a0)
	sw $a1, -408($fp)
	lw $a0, -408($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -396($fp)
	addi $sp, $sp, 8
	la $a0, data_66 + 0
	sw $a0, -416($fp)
	lw $a0, -416($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -420($fp)
	addi $sp, $sp, 4
	lw $a0, -420($fp)
	sw $a0, -412($fp)
	lw $a0, 0($fp)
	sw $a0, -428($fp)
	lw $a0, -428($fp)
	li $a1, 0
	jal equals
	sw $v0, -432($fp)
	lw $a0, -432($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_28
	j function_option_at_CellularAutomaton_continue_label_29
	function_option_at_CellularAutomaton_error_label_28:
	li $v0, 4
	la $a0, data_67
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_29:
	lw $a0, -428($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -412($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -428($fp)
	lw $a1, 0($a0)
	sw $a1, -436($fp)
	lw $a0, -436($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -424($fp)
	addi $sp, $sp, 8
	la $a0, data_68 + 0
	sw $a0, -444($fp)
	lw $a0, -444($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -448($fp)
	addi $sp, $sp, 4
	lw $a0, -448($fp)
	sw $a0, -440($fp)
	lw $a0, 0($fp)
	sw $a0, -456($fp)
	lw $a0, -456($fp)
	li $a1, 0
	jal equals
	sw $v0, -460($fp)
	lw $a0, -460($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_30
	j function_option_at_CellularAutomaton_continue_label_31
	function_option_at_CellularAutomaton_error_label_30:
	li $v0, 4
	la $a0, data_69
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_31:
	lw $a0, -456($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -440($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -456($fp)
	lw $a1, 0($a0)
	sw $a1, -464($fp)
	lw $a0, -464($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -452($fp)
	addi $sp, $sp, 8
	la $a0, data_70 + 0
	sw $a0, -472($fp)
	lw $a0, -472($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -476($fp)
	addi $sp, $sp, 4
	lw $a0, -476($fp)
	sw $a0, -468($fp)
	lw $a0, 0($fp)
	sw $a0, -484($fp)
	lw $a0, -484($fp)
	li $a1, 0
	jal equals
	sw $v0, -488($fp)
	lw $a0, -488($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_32
	j function_option_at_CellularAutomaton_continue_label_33
	function_option_at_CellularAutomaton_error_label_32:
	li $v0, 4
	la $a0, data_71
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_33:
	lw $a0, -484($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -468($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -484($fp)
	lw $a1, 0($a0)
	sw $a1, -492($fp)
	lw $a0, -492($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -480($fp)
	addi $sp, $sp, 8
	la $a0, data_72 + 0
	sw $a0, -500($fp)
	lw $a0, -500($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -504($fp)
	addi $sp, $sp, 4
	lw $a0, -504($fp)
	sw $a0, -496($fp)
	lw $a0, 0($fp)
	sw $a0, -512($fp)
	lw $a0, -512($fp)
	li $a1, 0
	jal equals
	sw $v0, -516($fp)
	lw $a0, -516($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_34
	j function_option_at_CellularAutomaton_continue_label_35
	function_option_at_CellularAutomaton_error_label_34:
	li $v0, 4
	la $a0, data_73
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_35:
	lw $a0, -512($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -496($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -512($fp)
	lw $a1, 0($a0)
	sw $a1, -520($fp)
	lw $a0, -520($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -508($fp)
	addi $sp, $sp, 8
	la $a0, data_74 + 0
	sw $a0, -528($fp)
	lw $a0, -528($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -532($fp)
	addi $sp, $sp, 4
	lw $a0, -532($fp)
	sw $a0, -524($fp)
	lw $a0, 0($fp)
	sw $a0, -540($fp)
	lw $a0, -540($fp)
	li $a1, 0
	jal equals
	sw $v0, -544($fp)
	lw $a0, -544($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_36
	j function_option_at_CellularAutomaton_continue_label_37
	function_option_at_CellularAutomaton_error_label_36:
	li $v0, 4
	la $a0, data_75
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_37:
	lw $a0, -540($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -524($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -540($fp)
	lw $a1, 0($a0)
	sw $a1, -548($fp)
	lw $a0, -548($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -536($fp)
	addi $sp, $sp, 8
	la $a0, data_76 + 0
	sw $a0, -556($fp)
	lw $a0, -556($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -560($fp)
	addi $sp, $sp, 4
	lw $a0, -560($fp)
	sw $a0, -552($fp)
	lw $a0, 0($fp)
	sw $a0, -568($fp)
	lw $a0, -568($fp)
	li $a1, 0
	jal equals
	sw $v0, -572($fp)
	lw $a0, -572($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_38
	j function_option_at_CellularAutomaton_continue_label_39
	function_option_at_CellularAutomaton_error_label_38:
	li $v0, 4
	la $a0, data_77
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_39:
	lw $a0, -568($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -552($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -568($fp)
	lw $a1, 0($a0)
	sw $a1, -576($fp)
	lw $a0, -576($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -564($fp)
	addi $sp, $sp, 8
	la $a0, data_78 + 0
	sw $a0, -584($fp)
	lw $a0, -584($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -588($fp)
	addi $sp, $sp, 4
	lw $a0, -588($fp)
	sw $a0, -580($fp)
	lw $a0, 0($fp)
	sw $a0, -596($fp)
	lw $a0, -596($fp)
	li $a1, 0
	jal equals
	sw $v0, -600($fp)
	lw $a0, -600($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_40
	j function_option_at_CellularAutomaton_continue_label_41
	function_option_at_CellularAutomaton_error_label_40:
	li $v0, 4
	la $a0, data_79
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_41:
	lw $a0, -596($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -580($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -596($fp)
	lw $a1, 0($a0)
	sw $a1, -604($fp)
	lw $a0, -604($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -592($fp)
	addi $sp, $sp, 8
	la $a0, data_80 + 0
	sw $a0, -612($fp)
	lw $a0, -612($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -616($fp)
	addi $sp, $sp, 4
	lw $a0, -616($fp)
	sw $a0, -608($fp)
	lw $a0, 0($fp)
	sw $a0, -624($fp)
	lw $a0, -624($fp)
	li $a1, 0
	jal equals
	sw $v0, -628($fp)
	lw $a0, -628($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_42
	j function_option_at_CellularAutomaton_continue_label_43
	function_option_at_CellularAutomaton_error_label_42:
	li $v0, 4
	la $a0, data_81
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_43:
	lw $a0, -624($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -608($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -624($fp)
	lw $a1, 0($a0)
	sw $a1, -632($fp)
	lw $a0, -632($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -620($fp)
	addi $sp, $sp, 8
	la $a0, data_82 + 0
	sw $a0, -640($fp)
	lw $a0, -640($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -644($fp)
	addi $sp, $sp, 4
	lw $a0, -644($fp)
	sw $a0, -636($fp)
	lw $a0, 0($fp)
	sw $a0, -652($fp)
	lw $a0, -652($fp)
	li $a1, 0
	jal equals
	sw $v0, -656($fp)
	lw $a0, -656($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_44
	j function_option_at_CellularAutomaton_continue_label_45
	function_option_at_CellularAutomaton_error_label_44:
	li $v0, 4
	la $a0, data_83
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_45:
	lw $a0, -652($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -636($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -652($fp)
	lw $a1, 0($a0)
	sw $a1, -660($fp)
	lw $a0, -660($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -648($fp)
	addi $sp, $sp, 8
	lw $a0, 0($fp)
	sw $a0, -668($fp)
	lw $a0, -668($fp)
	li $a1, 0
	jal equals
	sw $v0, -672($fp)
	lw $a0, -672($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_46
	j function_option_at_CellularAutomaton_continue_label_47
	function_option_at_CellularAutomaton_error_label_46:
	li $v0, 4
	la $a0, data_84
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_47:
	lw $a0, -668($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -668($fp)
	lw $a1, 0($a0)
	sw $a1, -676($fp)
	lw $a0, -676($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 24
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -664($fp)
	addi $sp, $sp, 4
	lw $a0, -664($fp)
	sw $a0, -16($fp)
	la $a0, data_1 + 0
	sw $a0, -684($fp)
	lw $a0, -684($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -688($fp)
	addi $sp, $sp, 4
	lw $a0, -688($fp)
	sw $a0, -680($fp)
	lw $a0, 0($fp)
	sw $a0, -696($fp)
	lw $a0, -696($fp)
	li $a1, 0
	jal equals
	sw $v0, -700($fp)
	lw $a0, -700($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_error_label_48
	j function_option_at_CellularAutomaton_continue_label_49
	function_option_at_CellularAutomaton_error_label_48:
	li $v0, 4
	la $a0, data_85
	syscall
	li $v0, 10
	syscall
	function_option_at_CellularAutomaton_continue_label_49:
	lw $a0, -696($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -680($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -696($fp)
	lw $a1, 0($a0)
	sw $a1, -704($fp)
	lw $a0, -704($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -692($fp)
	addi $sp, $sp, 8
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -752($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -720($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -724($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -728($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -732($fp)
	lw $a0, -720($fp)
	lw $a1, -724($fp)
	jal equals
	sw $v0, -736($fp)
	lw $a0, -736($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_53
	lw $a0, -720($fp)
	lw $a1, -728($fp)
	jal equals
	sw $v0, -736($fp)
	lw $a0, -736($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_53
	lw $a0, -720($fp)
	lw $a1, -732($fp)
	jal equals
	sw $v0, -736($fp)
	lw $a0, -736($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_54
	j function_option_at_CellularAutomaton_reference_label_55
	function_option_at_CellularAutomaton_int_label_53:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -740($fp)
	lw $a0, -752($fp)
	lw $a1, 12($a0)
	sw $a1, -744($fp)
	lw $a0, -740($fp)
	lw $a1, -744($fp)
	jal equals
	sw $v0, -716($fp)
	j function_option_at_CellularAutomaton_continue_label_56
	function_option_at_CellularAutomaton_string_label_54:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -740($fp)
	lw $a0, -752($fp)
	lw $a1, 12($a0)
	sw $a1, -744($fp)
	lw $a0, -740($fp)
	lw $a1, -744($fp)
	jal equal_str
	sw $v0, -716($fp)
	j function_option_at_CellularAutomaton_continue_label_56
	function_option_at_CellularAutomaton_reference_label_55:
	lw $a0, -16($fp)
	lw $a1, -752($fp)
	jal equals
	sw $v0, -716($fp)
	function_option_at_CellularAutomaton_continue_label_56:
	lw $a0, -716($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -748($fp)
	addi $sp, $sp, 4
	lw $a0, -748($fp)
	lw $a1, 12($a0)
	sw $a1, -712($fp)
	lw $a0, -712($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_50
	j function_option_at_CellularAutomaton_else_label_51
	function_option_at_CellularAutomaton_then_label_50:
	la $a0, data_86 + 0
	sw $a0, -756($fp)
	lw $a0, -756($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -760($fp)
	addi $sp, $sp, 4
	lw $a0, -760($fp)
	sw $a0, -708($fp)
	j function_option_at_CellularAutomaton_continue_label_52
	function_option_at_CellularAutomaton_else_label_51:
	li $a0, 2
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -808($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -776($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -780($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -784($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -788($fp)
	lw $a0, -776($fp)
	lw $a1, -780($fp)
	jal equals
	sw $v0, -792($fp)
	lw $a0, -792($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_60
	lw $a0, -776($fp)
	lw $a1, -784($fp)
	jal equals
	sw $v0, -792($fp)
	lw $a0, -792($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_60
	lw $a0, -776($fp)
	lw $a1, -788($fp)
	jal equals
	sw $v0, -792($fp)
	lw $a0, -792($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_61
	j function_option_at_CellularAutomaton_reference_label_62
	function_option_at_CellularAutomaton_int_label_60:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -796($fp)
	lw $a0, -808($fp)
	lw $a1, 12($a0)
	sw $a1, -800($fp)
	lw $a0, -796($fp)
	lw $a1, -800($fp)
	jal equals
	sw $v0, -772($fp)
	j function_option_at_CellularAutomaton_continue_label_63
	function_option_at_CellularAutomaton_string_label_61:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -796($fp)
	lw $a0, -808($fp)
	lw $a1, 12($a0)
	sw $a1, -800($fp)
	lw $a0, -796($fp)
	lw $a1, -800($fp)
	jal equal_str
	sw $v0, -772($fp)
	j function_option_at_CellularAutomaton_continue_label_63
	function_option_at_CellularAutomaton_reference_label_62:
	lw $a0, -16($fp)
	lw $a1, -808($fp)
	jal equals
	sw $v0, -772($fp)
	function_option_at_CellularAutomaton_continue_label_63:
	lw $a0, -772($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -804($fp)
	addi $sp, $sp, 4
	lw $a0, -804($fp)
	lw $a1, 12($a0)
	sw $a1, -768($fp)
	lw $a0, -768($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_57
	j function_option_at_CellularAutomaton_else_label_58
	function_option_at_CellularAutomaton_then_label_57:
	la $a0, data_87 + 0
	sw $a0, -812($fp)
	lw $a0, -812($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -816($fp)
	addi $sp, $sp, 4
	lw $a0, -816($fp)
	sw $a0, -764($fp)
	j function_option_at_CellularAutomaton_continue_label_59
	function_option_at_CellularAutomaton_else_label_58:
	li $a0, 3
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -864($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -832($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -836($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -840($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -844($fp)
	lw $a0, -832($fp)
	lw $a1, -836($fp)
	jal equals
	sw $v0, -848($fp)
	lw $a0, -848($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_67
	lw $a0, -832($fp)
	lw $a1, -840($fp)
	jal equals
	sw $v0, -848($fp)
	lw $a0, -848($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_67
	lw $a0, -832($fp)
	lw $a1, -844($fp)
	jal equals
	sw $v0, -848($fp)
	lw $a0, -848($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_68
	j function_option_at_CellularAutomaton_reference_label_69
	function_option_at_CellularAutomaton_int_label_67:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -852($fp)
	lw $a0, -864($fp)
	lw $a1, 12($a0)
	sw $a1, -856($fp)
	lw $a0, -852($fp)
	lw $a1, -856($fp)
	jal equals
	sw $v0, -828($fp)
	j function_option_at_CellularAutomaton_continue_label_70
	function_option_at_CellularAutomaton_string_label_68:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -852($fp)
	lw $a0, -864($fp)
	lw $a1, 12($a0)
	sw $a1, -856($fp)
	lw $a0, -852($fp)
	lw $a1, -856($fp)
	jal equal_str
	sw $v0, -828($fp)
	j function_option_at_CellularAutomaton_continue_label_70
	function_option_at_CellularAutomaton_reference_label_69:
	lw $a0, -16($fp)
	lw $a1, -864($fp)
	jal equals
	sw $v0, -828($fp)
	function_option_at_CellularAutomaton_continue_label_70:
	lw $a0, -828($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -860($fp)
	addi $sp, $sp, 4
	lw $a0, -860($fp)
	lw $a1, 12($a0)
	sw $a1, -824($fp)
	lw $a0, -824($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_64
	j function_option_at_CellularAutomaton_else_label_65
	function_option_at_CellularAutomaton_then_label_64:
	la $a0, data_88 + 0
	sw $a0, -868($fp)
	lw $a0, -868($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -872($fp)
	addi $sp, $sp, 4
	lw $a0, -872($fp)
	sw $a0, -820($fp)
	j function_option_at_CellularAutomaton_continue_label_66
	function_option_at_CellularAutomaton_else_label_65:
	li $a0, 4
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -920($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -888($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -892($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -896($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -900($fp)
	lw $a0, -888($fp)
	lw $a1, -892($fp)
	jal equals
	sw $v0, -904($fp)
	lw $a0, -904($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_74
	lw $a0, -888($fp)
	lw $a1, -896($fp)
	jal equals
	sw $v0, -904($fp)
	lw $a0, -904($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_74
	lw $a0, -888($fp)
	lw $a1, -900($fp)
	jal equals
	sw $v0, -904($fp)
	lw $a0, -904($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_75
	j function_option_at_CellularAutomaton_reference_label_76
	function_option_at_CellularAutomaton_int_label_74:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -908($fp)
	lw $a0, -920($fp)
	lw $a1, 12($a0)
	sw $a1, -912($fp)
	lw $a0, -908($fp)
	lw $a1, -912($fp)
	jal equals
	sw $v0, -884($fp)
	j function_option_at_CellularAutomaton_continue_label_77
	function_option_at_CellularAutomaton_string_label_75:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -908($fp)
	lw $a0, -920($fp)
	lw $a1, 12($a0)
	sw $a1, -912($fp)
	lw $a0, -908($fp)
	lw $a1, -912($fp)
	jal equal_str
	sw $v0, -884($fp)
	j function_option_at_CellularAutomaton_continue_label_77
	function_option_at_CellularAutomaton_reference_label_76:
	lw $a0, -16($fp)
	lw $a1, -920($fp)
	jal equals
	sw $v0, -884($fp)
	function_option_at_CellularAutomaton_continue_label_77:
	lw $a0, -884($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -916($fp)
	addi $sp, $sp, 4
	lw $a0, -916($fp)
	lw $a1, 12($a0)
	sw $a1, -880($fp)
	lw $a0, -880($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_71
	j function_option_at_CellularAutomaton_else_label_72
	function_option_at_CellularAutomaton_then_label_71:
	la $a0, data_89 + 0
	sw $a0, -924($fp)
	lw $a0, -924($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -928($fp)
	addi $sp, $sp, 4
	lw $a0, -928($fp)
	sw $a0, -876($fp)
	j function_option_at_CellularAutomaton_continue_label_73
	function_option_at_CellularAutomaton_else_label_72:
	li $a0, 5
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -976($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -944($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -948($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -952($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -956($fp)
	lw $a0, -944($fp)
	lw $a1, -948($fp)
	jal equals
	sw $v0, -960($fp)
	lw $a0, -960($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_81
	lw $a0, -944($fp)
	lw $a1, -952($fp)
	jal equals
	sw $v0, -960($fp)
	lw $a0, -960($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_81
	lw $a0, -944($fp)
	lw $a1, -956($fp)
	jal equals
	sw $v0, -960($fp)
	lw $a0, -960($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_82
	j function_option_at_CellularAutomaton_reference_label_83
	function_option_at_CellularAutomaton_int_label_81:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -964($fp)
	lw $a0, -976($fp)
	lw $a1, 12($a0)
	sw $a1, -968($fp)
	lw $a0, -964($fp)
	lw $a1, -968($fp)
	jal equals
	sw $v0, -940($fp)
	j function_option_at_CellularAutomaton_continue_label_84
	function_option_at_CellularAutomaton_string_label_82:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -964($fp)
	lw $a0, -976($fp)
	lw $a1, 12($a0)
	sw $a1, -968($fp)
	lw $a0, -964($fp)
	lw $a1, -968($fp)
	jal equal_str
	sw $v0, -940($fp)
	j function_option_at_CellularAutomaton_continue_label_84
	function_option_at_CellularAutomaton_reference_label_83:
	lw $a0, -16($fp)
	lw $a1, -976($fp)
	jal equals
	sw $v0, -940($fp)
	function_option_at_CellularAutomaton_continue_label_84:
	lw $a0, -940($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -972($fp)
	addi $sp, $sp, 4
	lw $a0, -972($fp)
	lw $a1, 12($a0)
	sw $a1, -936($fp)
	lw $a0, -936($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_78
	j function_option_at_CellularAutomaton_else_label_79
	function_option_at_CellularAutomaton_then_label_78:
	la $a0, data_90 + 0
	sw $a0, -980($fp)
	lw $a0, -980($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -984($fp)
	addi $sp, $sp, 4
	lw $a0, -984($fp)
	sw $a0, -932($fp)
	j function_option_at_CellularAutomaton_continue_label_80
	function_option_at_CellularAutomaton_else_label_79:
	li $a0, 6
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1032($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1000($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1004($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1008($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1012($fp)
	lw $a0, -1000($fp)
	lw $a1, -1004($fp)
	jal equals
	sw $v0, -1016($fp)
	lw $a0, -1016($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_88
	lw $a0, -1000($fp)
	lw $a1, -1008($fp)
	jal equals
	sw $v0, -1016($fp)
	lw $a0, -1016($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_88
	lw $a0, -1000($fp)
	lw $a1, -1012($fp)
	jal equals
	sw $v0, -1016($fp)
	lw $a0, -1016($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_89
	j function_option_at_CellularAutomaton_reference_label_90
	function_option_at_CellularAutomaton_int_label_88:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1020($fp)
	lw $a0, -1032($fp)
	lw $a1, 12($a0)
	sw $a1, -1024($fp)
	lw $a0, -1020($fp)
	lw $a1, -1024($fp)
	jal equals
	sw $v0, -996($fp)
	j function_option_at_CellularAutomaton_continue_label_91
	function_option_at_CellularAutomaton_string_label_89:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1020($fp)
	lw $a0, -1032($fp)
	lw $a1, 12($a0)
	sw $a1, -1024($fp)
	lw $a0, -1020($fp)
	lw $a1, -1024($fp)
	jal equal_str
	sw $v0, -996($fp)
	j function_option_at_CellularAutomaton_continue_label_91
	function_option_at_CellularAutomaton_reference_label_90:
	lw $a0, -16($fp)
	lw $a1, -1032($fp)
	jal equals
	sw $v0, -996($fp)
	function_option_at_CellularAutomaton_continue_label_91:
	lw $a0, -996($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1028($fp)
	addi $sp, $sp, 4
	lw $a0, -1028($fp)
	lw $a1, 12($a0)
	sw $a1, -992($fp)
	lw $a0, -992($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_85
	j function_option_at_CellularAutomaton_else_label_86
	function_option_at_CellularAutomaton_then_label_85:
	la $a0, data_91 + 0
	sw $a0, -1036($fp)
	lw $a0, -1036($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1040($fp)
	addi $sp, $sp, 4
	lw $a0, -1040($fp)
	sw $a0, -988($fp)
	j function_option_at_CellularAutomaton_continue_label_87
	function_option_at_CellularAutomaton_else_label_86:
	li $a0, 7
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1088($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1056($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1060($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1064($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1068($fp)
	lw $a0, -1056($fp)
	lw $a1, -1060($fp)
	jal equals
	sw $v0, -1072($fp)
	lw $a0, -1072($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_95
	lw $a0, -1056($fp)
	lw $a1, -1064($fp)
	jal equals
	sw $v0, -1072($fp)
	lw $a0, -1072($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_95
	lw $a0, -1056($fp)
	lw $a1, -1068($fp)
	jal equals
	sw $v0, -1072($fp)
	lw $a0, -1072($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_96
	j function_option_at_CellularAutomaton_reference_label_97
	function_option_at_CellularAutomaton_int_label_95:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1076($fp)
	lw $a0, -1088($fp)
	lw $a1, 12($a0)
	sw $a1, -1080($fp)
	lw $a0, -1076($fp)
	lw $a1, -1080($fp)
	jal equals
	sw $v0, -1052($fp)
	j function_option_at_CellularAutomaton_continue_label_98
	function_option_at_CellularAutomaton_string_label_96:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1076($fp)
	lw $a0, -1088($fp)
	lw $a1, 12($a0)
	sw $a1, -1080($fp)
	lw $a0, -1076($fp)
	lw $a1, -1080($fp)
	jal equal_str
	sw $v0, -1052($fp)
	j function_option_at_CellularAutomaton_continue_label_98
	function_option_at_CellularAutomaton_reference_label_97:
	lw $a0, -16($fp)
	lw $a1, -1088($fp)
	jal equals
	sw $v0, -1052($fp)
	function_option_at_CellularAutomaton_continue_label_98:
	lw $a0, -1052($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1084($fp)
	addi $sp, $sp, 4
	lw $a0, -1084($fp)
	lw $a1, 12($a0)
	sw $a1, -1048($fp)
	lw $a0, -1048($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_92
	j function_option_at_CellularAutomaton_else_label_93
	function_option_at_CellularAutomaton_then_label_92:
	la $a0, data_92 + 0
	sw $a0, -1092($fp)
	lw $a0, -1092($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1096($fp)
	addi $sp, $sp, 4
	lw $a0, -1096($fp)
	sw $a0, -1044($fp)
	j function_option_at_CellularAutomaton_continue_label_94
	function_option_at_CellularAutomaton_else_label_93:
	li $a0, 8
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1144($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1112($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1116($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1120($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1124($fp)
	lw $a0, -1112($fp)
	lw $a1, -1116($fp)
	jal equals
	sw $v0, -1128($fp)
	lw $a0, -1128($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_102
	lw $a0, -1112($fp)
	lw $a1, -1120($fp)
	jal equals
	sw $v0, -1128($fp)
	lw $a0, -1128($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_102
	lw $a0, -1112($fp)
	lw $a1, -1124($fp)
	jal equals
	sw $v0, -1128($fp)
	lw $a0, -1128($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_103
	j function_option_at_CellularAutomaton_reference_label_104
	function_option_at_CellularAutomaton_int_label_102:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1132($fp)
	lw $a0, -1144($fp)
	lw $a1, 12($a0)
	sw $a1, -1136($fp)
	lw $a0, -1132($fp)
	lw $a1, -1136($fp)
	jal equals
	sw $v0, -1108($fp)
	j function_option_at_CellularAutomaton_continue_label_105
	function_option_at_CellularAutomaton_string_label_103:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1132($fp)
	lw $a0, -1144($fp)
	lw $a1, 12($a0)
	sw $a1, -1136($fp)
	lw $a0, -1132($fp)
	lw $a1, -1136($fp)
	jal equal_str
	sw $v0, -1108($fp)
	j function_option_at_CellularAutomaton_continue_label_105
	function_option_at_CellularAutomaton_reference_label_104:
	lw $a0, -16($fp)
	lw $a1, -1144($fp)
	jal equals
	sw $v0, -1108($fp)
	function_option_at_CellularAutomaton_continue_label_105:
	lw $a0, -1108($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1140($fp)
	addi $sp, $sp, 4
	lw $a0, -1140($fp)
	lw $a1, 12($a0)
	sw $a1, -1104($fp)
	lw $a0, -1104($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_99
	j function_option_at_CellularAutomaton_else_label_100
	function_option_at_CellularAutomaton_then_label_99:
	la $a0, data_93 + 0
	sw $a0, -1148($fp)
	lw $a0, -1148($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1152($fp)
	addi $sp, $sp, 4
	lw $a0, -1152($fp)
	sw $a0, -1100($fp)
	j function_option_at_CellularAutomaton_continue_label_101
	function_option_at_CellularAutomaton_else_label_100:
	li $a0, 9
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1200($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1168($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1172($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1176($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1180($fp)
	lw $a0, -1168($fp)
	lw $a1, -1172($fp)
	jal equals
	sw $v0, -1184($fp)
	lw $a0, -1184($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_109
	lw $a0, -1168($fp)
	lw $a1, -1176($fp)
	jal equals
	sw $v0, -1184($fp)
	lw $a0, -1184($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_109
	lw $a0, -1168($fp)
	lw $a1, -1180($fp)
	jal equals
	sw $v0, -1184($fp)
	lw $a0, -1184($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_110
	j function_option_at_CellularAutomaton_reference_label_111
	function_option_at_CellularAutomaton_int_label_109:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1188($fp)
	lw $a0, -1200($fp)
	lw $a1, 12($a0)
	sw $a1, -1192($fp)
	lw $a0, -1188($fp)
	lw $a1, -1192($fp)
	jal equals
	sw $v0, -1164($fp)
	j function_option_at_CellularAutomaton_continue_label_112
	function_option_at_CellularAutomaton_string_label_110:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1188($fp)
	lw $a0, -1200($fp)
	lw $a1, 12($a0)
	sw $a1, -1192($fp)
	lw $a0, -1188($fp)
	lw $a1, -1192($fp)
	jal equal_str
	sw $v0, -1164($fp)
	j function_option_at_CellularAutomaton_continue_label_112
	function_option_at_CellularAutomaton_reference_label_111:
	lw $a0, -16($fp)
	lw $a1, -1200($fp)
	jal equals
	sw $v0, -1164($fp)
	function_option_at_CellularAutomaton_continue_label_112:
	lw $a0, -1164($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1196($fp)
	addi $sp, $sp, 4
	lw $a0, -1196($fp)
	lw $a1, 12($a0)
	sw $a1, -1160($fp)
	lw $a0, -1160($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_106
	j function_option_at_CellularAutomaton_else_label_107
	function_option_at_CellularAutomaton_then_label_106:
	la $a0, data_94 + 0
	sw $a0, -1204($fp)
	lw $a0, -1204($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1208($fp)
	addi $sp, $sp, 4
	lw $a0, -1208($fp)
	sw $a0, -1156($fp)
	j function_option_at_CellularAutomaton_continue_label_108
	function_option_at_CellularAutomaton_else_label_107:
	li $a0, 10
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1256($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1224($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1228($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1232($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1236($fp)
	lw $a0, -1224($fp)
	lw $a1, -1228($fp)
	jal equals
	sw $v0, -1240($fp)
	lw $a0, -1240($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_116
	lw $a0, -1224($fp)
	lw $a1, -1232($fp)
	jal equals
	sw $v0, -1240($fp)
	lw $a0, -1240($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_116
	lw $a0, -1224($fp)
	lw $a1, -1236($fp)
	jal equals
	sw $v0, -1240($fp)
	lw $a0, -1240($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_117
	j function_option_at_CellularAutomaton_reference_label_118
	function_option_at_CellularAutomaton_int_label_116:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1244($fp)
	lw $a0, -1256($fp)
	lw $a1, 12($a0)
	sw $a1, -1248($fp)
	lw $a0, -1244($fp)
	lw $a1, -1248($fp)
	jal equals
	sw $v0, -1220($fp)
	j function_option_at_CellularAutomaton_continue_label_119
	function_option_at_CellularAutomaton_string_label_117:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1244($fp)
	lw $a0, -1256($fp)
	lw $a1, 12($a0)
	sw $a1, -1248($fp)
	lw $a0, -1244($fp)
	lw $a1, -1248($fp)
	jal equal_str
	sw $v0, -1220($fp)
	j function_option_at_CellularAutomaton_continue_label_119
	function_option_at_CellularAutomaton_reference_label_118:
	lw $a0, -16($fp)
	lw $a1, -1256($fp)
	jal equals
	sw $v0, -1220($fp)
	function_option_at_CellularAutomaton_continue_label_119:
	lw $a0, -1220($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1252($fp)
	addi $sp, $sp, 4
	lw $a0, -1252($fp)
	lw $a1, 12($a0)
	sw $a1, -1216($fp)
	lw $a0, -1216($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_113
	j function_option_at_CellularAutomaton_else_label_114
	function_option_at_CellularAutomaton_then_label_113:
	la $a0, data_95 + 0
	sw $a0, -1260($fp)
	lw $a0, -1260($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1264($fp)
	addi $sp, $sp, 4
	lw $a0, -1264($fp)
	sw $a0, -1212($fp)
	j function_option_at_CellularAutomaton_continue_label_115
	function_option_at_CellularAutomaton_else_label_114:
	li $a0, 11
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1312($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1280($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1284($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1288($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1292($fp)
	lw $a0, -1280($fp)
	lw $a1, -1284($fp)
	jal equals
	sw $v0, -1296($fp)
	lw $a0, -1296($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_123
	lw $a0, -1280($fp)
	lw $a1, -1288($fp)
	jal equals
	sw $v0, -1296($fp)
	lw $a0, -1296($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_123
	lw $a0, -1280($fp)
	lw $a1, -1292($fp)
	jal equals
	sw $v0, -1296($fp)
	lw $a0, -1296($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_124
	j function_option_at_CellularAutomaton_reference_label_125
	function_option_at_CellularAutomaton_int_label_123:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1300($fp)
	lw $a0, -1312($fp)
	lw $a1, 12($a0)
	sw $a1, -1304($fp)
	lw $a0, -1300($fp)
	lw $a1, -1304($fp)
	jal equals
	sw $v0, -1276($fp)
	j function_option_at_CellularAutomaton_continue_label_126
	function_option_at_CellularAutomaton_string_label_124:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1300($fp)
	lw $a0, -1312($fp)
	lw $a1, 12($a0)
	sw $a1, -1304($fp)
	lw $a0, -1300($fp)
	lw $a1, -1304($fp)
	jal equal_str
	sw $v0, -1276($fp)
	j function_option_at_CellularAutomaton_continue_label_126
	function_option_at_CellularAutomaton_reference_label_125:
	lw $a0, -16($fp)
	lw $a1, -1312($fp)
	jal equals
	sw $v0, -1276($fp)
	function_option_at_CellularAutomaton_continue_label_126:
	lw $a0, -1276($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1308($fp)
	addi $sp, $sp, 4
	lw $a0, -1308($fp)
	lw $a1, 12($a0)
	sw $a1, -1272($fp)
	lw $a0, -1272($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_120
	j function_option_at_CellularAutomaton_else_label_121
	function_option_at_CellularAutomaton_then_label_120:
	la $a0, data_96 + 0
	sw $a0, -1316($fp)
	lw $a0, -1316($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1320($fp)
	addi $sp, $sp, 4
	lw $a0, -1320($fp)
	sw $a0, -1268($fp)
	j function_option_at_CellularAutomaton_continue_label_122
	function_option_at_CellularAutomaton_else_label_121:
	li $a0, 12
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1368($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1336($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1340($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1344($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1348($fp)
	lw $a0, -1336($fp)
	lw $a1, -1340($fp)
	jal equals
	sw $v0, -1352($fp)
	lw $a0, -1352($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_130
	lw $a0, -1336($fp)
	lw $a1, -1344($fp)
	jal equals
	sw $v0, -1352($fp)
	lw $a0, -1352($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_130
	lw $a0, -1336($fp)
	lw $a1, -1348($fp)
	jal equals
	sw $v0, -1352($fp)
	lw $a0, -1352($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_131
	j function_option_at_CellularAutomaton_reference_label_132
	function_option_at_CellularAutomaton_int_label_130:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1356($fp)
	lw $a0, -1368($fp)
	lw $a1, 12($a0)
	sw $a1, -1360($fp)
	lw $a0, -1356($fp)
	lw $a1, -1360($fp)
	jal equals
	sw $v0, -1332($fp)
	j function_option_at_CellularAutomaton_continue_label_133
	function_option_at_CellularAutomaton_string_label_131:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1356($fp)
	lw $a0, -1368($fp)
	lw $a1, 12($a0)
	sw $a1, -1360($fp)
	lw $a0, -1356($fp)
	lw $a1, -1360($fp)
	jal equal_str
	sw $v0, -1332($fp)
	j function_option_at_CellularAutomaton_continue_label_133
	function_option_at_CellularAutomaton_reference_label_132:
	lw $a0, -16($fp)
	lw $a1, -1368($fp)
	jal equals
	sw $v0, -1332($fp)
	function_option_at_CellularAutomaton_continue_label_133:
	lw $a0, -1332($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1364($fp)
	addi $sp, $sp, 4
	lw $a0, -1364($fp)
	lw $a1, 12($a0)
	sw $a1, -1328($fp)
	lw $a0, -1328($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_127
	j function_option_at_CellularAutomaton_else_label_128
	function_option_at_CellularAutomaton_then_label_127:
	la $a0, data_97 + 0
	sw $a0, -1372($fp)
	lw $a0, -1372($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1376($fp)
	addi $sp, $sp, 4
	lw $a0, -1376($fp)
	sw $a0, -1324($fp)
	j function_option_at_CellularAutomaton_continue_label_129
	function_option_at_CellularAutomaton_else_label_128:
	li $a0, 13
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1424($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1392($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1396($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1400($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1404($fp)
	lw $a0, -1392($fp)
	lw $a1, -1396($fp)
	jal equals
	sw $v0, -1408($fp)
	lw $a0, -1408($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_137
	lw $a0, -1392($fp)
	lw $a1, -1400($fp)
	jal equals
	sw $v0, -1408($fp)
	lw $a0, -1408($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_137
	lw $a0, -1392($fp)
	lw $a1, -1404($fp)
	jal equals
	sw $v0, -1408($fp)
	lw $a0, -1408($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_138
	j function_option_at_CellularAutomaton_reference_label_139
	function_option_at_CellularAutomaton_int_label_137:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1412($fp)
	lw $a0, -1424($fp)
	lw $a1, 12($a0)
	sw $a1, -1416($fp)
	lw $a0, -1412($fp)
	lw $a1, -1416($fp)
	jal equals
	sw $v0, -1388($fp)
	j function_option_at_CellularAutomaton_continue_label_140
	function_option_at_CellularAutomaton_string_label_138:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1412($fp)
	lw $a0, -1424($fp)
	lw $a1, 12($a0)
	sw $a1, -1416($fp)
	lw $a0, -1412($fp)
	lw $a1, -1416($fp)
	jal equal_str
	sw $v0, -1388($fp)
	j function_option_at_CellularAutomaton_continue_label_140
	function_option_at_CellularAutomaton_reference_label_139:
	lw $a0, -16($fp)
	lw $a1, -1424($fp)
	jal equals
	sw $v0, -1388($fp)
	function_option_at_CellularAutomaton_continue_label_140:
	lw $a0, -1388($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1420($fp)
	addi $sp, $sp, 4
	lw $a0, -1420($fp)
	lw $a1, 12($a0)
	sw $a1, -1384($fp)
	lw $a0, -1384($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_134
	j function_option_at_CellularAutomaton_else_label_135
	function_option_at_CellularAutomaton_then_label_134:
	la $a0, data_98 + 0
	sw $a0, -1428($fp)
	lw $a0, -1428($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1432($fp)
	addi $sp, $sp, 4
	lw $a0, -1432($fp)
	sw $a0, -1380($fp)
	j function_option_at_CellularAutomaton_continue_label_136
	function_option_at_CellularAutomaton_else_label_135:
	li $a0, 14
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1480($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1448($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1452($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1456($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1460($fp)
	lw $a0, -1448($fp)
	lw $a1, -1452($fp)
	jal equals
	sw $v0, -1464($fp)
	lw $a0, -1464($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_144
	lw $a0, -1448($fp)
	lw $a1, -1456($fp)
	jal equals
	sw $v0, -1464($fp)
	lw $a0, -1464($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_144
	lw $a0, -1448($fp)
	lw $a1, -1460($fp)
	jal equals
	sw $v0, -1464($fp)
	lw $a0, -1464($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_145
	j function_option_at_CellularAutomaton_reference_label_146
	function_option_at_CellularAutomaton_int_label_144:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1468($fp)
	lw $a0, -1480($fp)
	lw $a1, 12($a0)
	sw $a1, -1472($fp)
	lw $a0, -1468($fp)
	lw $a1, -1472($fp)
	jal equals
	sw $v0, -1444($fp)
	j function_option_at_CellularAutomaton_continue_label_147
	function_option_at_CellularAutomaton_string_label_145:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1468($fp)
	lw $a0, -1480($fp)
	lw $a1, 12($a0)
	sw $a1, -1472($fp)
	lw $a0, -1468($fp)
	lw $a1, -1472($fp)
	jal equal_str
	sw $v0, -1444($fp)
	j function_option_at_CellularAutomaton_continue_label_147
	function_option_at_CellularAutomaton_reference_label_146:
	lw $a0, -16($fp)
	lw $a1, -1480($fp)
	jal equals
	sw $v0, -1444($fp)
	function_option_at_CellularAutomaton_continue_label_147:
	lw $a0, -1444($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1476($fp)
	addi $sp, $sp, 4
	lw $a0, -1476($fp)
	lw $a1, 12($a0)
	sw $a1, -1440($fp)
	lw $a0, -1440($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_141
	j function_option_at_CellularAutomaton_else_label_142
	function_option_at_CellularAutomaton_then_label_141:
	la $a0, data_99 + 0
	sw $a0, -1484($fp)
	lw $a0, -1484($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1488($fp)
	addi $sp, $sp, 4
	lw $a0, -1488($fp)
	sw $a0, -1436($fp)
	j function_option_at_CellularAutomaton_continue_label_143
	function_option_at_CellularAutomaton_else_label_142:
	li $a0, 15
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1536($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1504($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1508($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1512($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1516($fp)
	lw $a0, -1504($fp)
	lw $a1, -1508($fp)
	jal equals
	sw $v0, -1520($fp)
	lw $a0, -1520($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_151
	lw $a0, -1504($fp)
	lw $a1, -1512($fp)
	jal equals
	sw $v0, -1520($fp)
	lw $a0, -1520($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_151
	lw $a0, -1504($fp)
	lw $a1, -1516($fp)
	jal equals
	sw $v0, -1520($fp)
	lw $a0, -1520($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_152
	j function_option_at_CellularAutomaton_reference_label_153
	function_option_at_CellularAutomaton_int_label_151:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1524($fp)
	lw $a0, -1536($fp)
	lw $a1, 12($a0)
	sw $a1, -1528($fp)
	lw $a0, -1524($fp)
	lw $a1, -1528($fp)
	jal equals
	sw $v0, -1500($fp)
	j function_option_at_CellularAutomaton_continue_label_154
	function_option_at_CellularAutomaton_string_label_152:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1524($fp)
	lw $a0, -1536($fp)
	lw $a1, 12($a0)
	sw $a1, -1528($fp)
	lw $a0, -1524($fp)
	lw $a1, -1528($fp)
	jal equal_str
	sw $v0, -1500($fp)
	j function_option_at_CellularAutomaton_continue_label_154
	function_option_at_CellularAutomaton_reference_label_153:
	lw $a0, -16($fp)
	lw $a1, -1536($fp)
	jal equals
	sw $v0, -1500($fp)
	function_option_at_CellularAutomaton_continue_label_154:
	lw $a0, -1500($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1532($fp)
	addi $sp, $sp, 4
	lw $a0, -1532($fp)
	lw $a1, 12($a0)
	sw $a1, -1496($fp)
	lw $a0, -1496($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_148
	j function_option_at_CellularAutomaton_else_label_149
	function_option_at_CellularAutomaton_then_label_148:
	la $a0, data_100 + 0
	sw $a0, -1540($fp)
	lw $a0, -1540($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1544($fp)
	addi $sp, $sp, 4
	lw $a0, -1544($fp)
	sw $a0, -1492($fp)
	j function_option_at_CellularAutomaton_continue_label_150
	function_option_at_CellularAutomaton_else_label_149:
	li $a0, 16
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1592($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1560($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1564($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1568($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1572($fp)
	lw $a0, -1560($fp)
	lw $a1, -1564($fp)
	jal equals
	sw $v0, -1576($fp)
	lw $a0, -1576($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_158
	lw $a0, -1560($fp)
	lw $a1, -1568($fp)
	jal equals
	sw $v0, -1576($fp)
	lw $a0, -1576($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_158
	lw $a0, -1560($fp)
	lw $a1, -1572($fp)
	jal equals
	sw $v0, -1576($fp)
	lw $a0, -1576($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_159
	j function_option_at_CellularAutomaton_reference_label_160
	function_option_at_CellularAutomaton_int_label_158:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1580($fp)
	lw $a0, -1592($fp)
	lw $a1, 12($a0)
	sw $a1, -1584($fp)
	lw $a0, -1580($fp)
	lw $a1, -1584($fp)
	jal equals
	sw $v0, -1556($fp)
	j function_option_at_CellularAutomaton_continue_label_161
	function_option_at_CellularAutomaton_string_label_159:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1580($fp)
	lw $a0, -1592($fp)
	lw $a1, 12($a0)
	sw $a1, -1584($fp)
	lw $a0, -1580($fp)
	lw $a1, -1584($fp)
	jal equal_str
	sw $v0, -1556($fp)
	j function_option_at_CellularAutomaton_continue_label_161
	function_option_at_CellularAutomaton_reference_label_160:
	lw $a0, -16($fp)
	lw $a1, -1592($fp)
	jal equals
	sw $v0, -1556($fp)
	function_option_at_CellularAutomaton_continue_label_161:
	lw $a0, -1556($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1588($fp)
	addi $sp, $sp, 4
	lw $a0, -1588($fp)
	lw $a1, 12($a0)
	sw $a1, -1552($fp)
	lw $a0, -1552($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_155
	j function_option_at_CellularAutomaton_else_label_156
	function_option_at_CellularAutomaton_then_label_155:
	la $a0, data_101 + 0
	sw $a0, -1596($fp)
	lw $a0, -1596($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1600($fp)
	addi $sp, $sp, 4
	lw $a0, -1600($fp)
	sw $a0, -1548($fp)
	j function_option_at_CellularAutomaton_continue_label_157
	function_option_at_CellularAutomaton_else_label_156:
	li $a0, 17
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1648($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1616($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1620($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1624($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1628($fp)
	lw $a0, -1616($fp)
	lw $a1, -1620($fp)
	jal equals
	sw $v0, -1632($fp)
	lw $a0, -1632($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_165
	lw $a0, -1616($fp)
	lw $a1, -1624($fp)
	jal equals
	sw $v0, -1632($fp)
	lw $a0, -1632($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_165
	lw $a0, -1616($fp)
	lw $a1, -1628($fp)
	jal equals
	sw $v0, -1632($fp)
	lw $a0, -1632($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_166
	j function_option_at_CellularAutomaton_reference_label_167
	function_option_at_CellularAutomaton_int_label_165:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1636($fp)
	lw $a0, -1648($fp)
	lw $a1, 12($a0)
	sw $a1, -1640($fp)
	lw $a0, -1636($fp)
	lw $a1, -1640($fp)
	jal equals
	sw $v0, -1612($fp)
	j function_option_at_CellularAutomaton_continue_label_168
	function_option_at_CellularAutomaton_string_label_166:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1636($fp)
	lw $a0, -1648($fp)
	lw $a1, 12($a0)
	sw $a1, -1640($fp)
	lw $a0, -1636($fp)
	lw $a1, -1640($fp)
	jal equal_str
	sw $v0, -1612($fp)
	j function_option_at_CellularAutomaton_continue_label_168
	function_option_at_CellularAutomaton_reference_label_167:
	lw $a0, -16($fp)
	lw $a1, -1648($fp)
	jal equals
	sw $v0, -1612($fp)
	function_option_at_CellularAutomaton_continue_label_168:
	lw $a0, -1612($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1644($fp)
	addi $sp, $sp, 4
	lw $a0, -1644($fp)
	lw $a1, 12($a0)
	sw $a1, -1608($fp)
	lw $a0, -1608($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_162
	j function_option_at_CellularAutomaton_else_label_163
	function_option_at_CellularAutomaton_then_label_162:
	la $a0, data_102 + 0
	sw $a0, -1652($fp)
	lw $a0, -1652($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1656($fp)
	addi $sp, $sp, 4
	lw $a0, -1656($fp)
	sw $a0, -1604($fp)
	j function_option_at_CellularAutomaton_continue_label_164
	function_option_at_CellularAutomaton_else_label_163:
	li $a0, 18
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1704($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1672($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1676($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1680($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1684($fp)
	lw $a0, -1672($fp)
	lw $a1, -1676($fp)
	jal equals
	sw $v0, -1688($fp)
	lw $a0, -1688($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_172
	lw $a0, -1672($fp)
	lw $a1, -1680($fp)
	jal equals
	sw $v0, -1688($fp)
	lw $a0, -1688($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_172
	lw $a0, -1672($fp)
	lw $a1, -1684($fp)
	jal equals
	sw $v0, -1688($fp)
	lw $a0, -1688($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_173
	j function_option_at_CellularAutomaton_reference_label_174
	function_option_at_CellularAutomaton_int_label_172:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1692($fp)
	lw $a0, -1704($fp)
	lw $a1, 12($a0)
	sw $a1, -1696($fp)
	lw $a0, -1692($fp)
	lw $a1, -1696($fp)
	jal equals
	sw $v0, -1668($fp)
	j function_option_at_CellularAutomaton_continue_label_175
	function_option_at_CellularAutomaton_string_label_173:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1692($fp)
	lw $a0, -1704($fp)
	lw $a1, 12($a0)
	sw $a1, -1696($fp)
	lw $a0, -1692($fp)
	lw $a1, -1696($fp)
	jal equal_str
	sw $v0, -1668($fp)
	j function_option_at_CellularAutomaton_continue_label_175
	function_option_at_CellularAutomaton_reference_label_174:
	lw $a0, -16($fp)
	lw $a1, -1704($fp)
	jal equals
	sw $v0, -1668($fp)
	function_option_at_CellularAutomaton_continue_label_175:
	lw $a0, -1668($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1700($fp)
	addi $sp, $sp, 4
	lw $a0, -1700($fp)
	lw $a1, 12($a0)
	sw $a1, -1664($fp)
	lw $a0, -1664($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_169
	j function_option_at_CellularAutomaton_else_label_170
	function_option_at_CellularAutomaton_then_label_169:
	la $a0, data_103 + 0
	sw $a0, -1708($fp)
	lw $a0, -1708($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1712($fp)
	addi $sp, $sp, 4
	lw $a0, -1712($fp)
	sw $a0, -1660($fp)
	j function_option_at_CellularAutomaton_continue_label_171
	function_option_at_CellularAutomaton_else_label_170:
	li $a0, 19
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1760($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1728($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1732($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1736($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1740($fp)
	lw $a0, -1728($fp)
	lw $a1, -1732($fp)
	jal equals
	sw $v0, -1744($fp)
	lw $a0, -1744($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_179
	lw $a0, -1728($fp)
	lw $a1, -1736($fp)
	jal equals
	sw $v0, -1744($fp)
	lw $a0, -1744($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_179
	lw $a0, -1728($fp)
	lw $a1, -1740($fp)
	jal equals
	sw $v0, -1744($fp)
	lw $a0, -1744($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_180
	j function_option_at_CellularAutomaton_reference_label_181
	function_option_at_CellularAutomaton_int_label_179:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1748($fp)
	lw $a0, -1760($fp)
	lw $a1, 12($a0)
	sw $a1, -1752($fp)
	lw $a0, -1748($fp)
	lw $a1, -1752($fp)
	jal equals
	sw $v0, -1724($fp)
	j function_option_at_CellularAutomaton_continue_label_182
	function_option_at_CellularAutomaton_string_label_180:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1748($fp)
	lw $a0, -1760($fp)
	lw $a1, 12($a0)
	sw $a1, -1752($fp)
	lw $a0, -1748($fp)
	lw $a1, -1752($fp)
	jal equal_str
	sw $v0, -1724($fp)
	j function_option_at_CellularAutomaton_continue_label_182
	function_option_at_CellularAutomaton_reference_label_181:
	lw $a0, -16($fp)
	lw $a1, -1760($fp)
	jal equals
	sw $v0, -1724($fp)
	function_option_at_CellularAutomaton_continue_label_182:
	lw $a0, -1724($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1756($fp)
	addi $sp, $sp, 4
	lw $a0, -1756($fp)
	lw $a1, 12($a0)
	sw $a1, -1720($fp)
	lw $a0, -1720($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_176
	j function_option_at_CellularAutomaton_else_label_177
	function_option_at_CellularAutomaton_then_label_176:
	la $a0, data_104 + 0
	sw $a0, -1764($fp)
	lw $a0, -1764($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1768($fp)
	addi $sp, $sp, 4
	lw $a0, -1768($fp)
	sw $a0, -1716($fp)
	j function_option_at_CellularAutomaton_continue_label_178
	function_option_at_CellularAutomaton_else_label_177:
	li $a0, 20
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1816($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1784($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1788($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1792($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1796($fp)
	lw $a0, -1784($fp)
	lw $a1, -1788($fp)
	jal equals
	sw $v0, -1800($fp)
	lw $a0, -1800($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_186
	lw $a0, -1784($fp)
	lw $a1, -1792($fp)
	jal equals
	sw $v0, -1800($fp)
	lw $a0, -1800($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_186
	lw $a0, -1784($fp)
	lw $a1, -1796($fp)
	jal equals
	sw $v0, -1800($fp)
	lw $a0, -1800($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_187
	j function_option_at_CellularAutomaton_reference_label_188
	function_option_at_CellularAutomaton_int_label_186:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1804($fp)
	lw $a0, -1816($fp)
	lw $a1, 12($a0)
	sw $a1, -1808($fp)
	lw $a0, -1804($fp)
	lw $a1, -1808($fp)
	jal equals
	sw $v0, -1780($fp)
	j function_option_at_CellularAutomaton_continue_label_189
	function_option_at_CellularAutomaton_string_label_187:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1804($fp)
	lw $a0, -1816($fp)
	lw $a1, 12($a0)
	sw $a1, -1808($fp)
	lw $a0, -1804($fp)
	lw $a1, -1808($fp)
	jal equal_str
	sw $v0, -1780($fp)
	j function_option_at_CellularAutomaton_continue_label_189
	function_option_at_CellularAutomaton_reference_label_188:
	lw $a0, -16($fp)
	lw $a1, -1816($fp)
	jal equals
	sw $v0, -1780($fp)
	function_option_at_CellularAutomaton_continue_label_189:
	lw $a0, -1780($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1812($fp)
	addi $sp, $sp, 4
	lw $a0, -1812($fp)
	lw $a1, 12($a0)
	sw $a1, -1776($fp)
	lw $a0, -1776($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_183
	j function_option_at_CellularAutomaton_else_label_184
	function_option_at_CellularAutomaton_then_label_183:
	la $a0, data_105 + 0
	sw $a0, -1820($fp)
	lw $a0, -1820($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1824($fp)
	addi $sp, $sp, 4
	lw $a0, -1824($fp)
	sw $a0, -1772($fp)
	j function_option_at_CellularAutomaton_continue_label_185
	function_option_at_CellularAutomaton_else_label_184:
	li $a0, 21
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -1872($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -1840($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -1844($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -1848($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -1852($fp)
	lw $a0, -1840($fp)
	lw $a1, -1844($fp)
	jal equals
	sw $v0, -1856($fp)
	lw $a0, -1856($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_193
	lw $a0, -1840($fp)
	lw $a1, -1848($fp)
	jal equals
	sw $v0, -1856($fp)
	lw $a0, -1856($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_int_label_193
	lw $a0, -1840($fp)
	lw $a1, -1852($fp)
	jal equals
	sw $v0, -1856($fp)
	lw $a0, -1856($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_string_label_194
	j function_option_at_CellularAutomaton_reference_label_195
	function_option_at_CellularAutomaton_int_label_193:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1860($fp)
	lw $a0, -1872($fp)
	lw $a1, 12($a0)
	sw $a1, -1864($fp)
	lw $a0, -1860($fp)
	lw $a1, -1864($fp)
	jal equals
	sw $v0, -1836($fp)
	j function_option_at_CellularAutomaton_continue_label_196
	function_option_at_CellularAutomaton_string_label_194:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -1860($fp)
	lw $a0, -1872($fp)
	lw $a1, 12($a0)
	sw $a1, -1864($fp)
	lw $a0, -1860($fp)
	lw $a1, -1864($fp)
	jal equal_str
	sw $v0, -1836($fp)
	j function_option_at_CellularAutomaton_continue_label_196
	function_option_at_CellularAutomaton_reference_label_195:
	lw $a0, -16($fp)
	lw $a1, -1872($fp)
	jal equals
	sw $v0, -1836($fp)
	function_option_at_CellularAutomaton_continue_label_196:
	lw $a0, -1836($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -1868($fp)
	addi $sp, $sp, 4
	lw $a0, -1868($fp)
	lw $a1, 12($a0)
	sw $a1, -1832($fp)
	lw $a0, -1832($fp)
	bne $a0 $zero function_option_at_CellularAutomaton_then_label_190
	j function_option_at_CellularAutomaton_else_label_191
	function_option_at_CellularAutomaton_then_label_190:
	la $a0, data_106 + 0
	sw $a0, -1876($fp)
	lw $a0, -1876($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1880($fp)
	addi $sp, $sp, 4
	lw $a0, -1880($fp)
	sw $a0, -1828($fp)
	j function_option_at_CellularAutomaton_continue_label_192
	function_option_at_CellularAutomaton_else_label_191:
	la $a0, data_107 + 0
	sw $a0, -1884($fp)
	lw $a0, -1884($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -1888($fp)
	addi $sp, $sp, 4
	lw $a0, -1888($fp)
	sw $a0, -1828($fp)
	function_option_at_CellularAutomaton_continue_label_192:
	lw $a0, -1828($fp)
	sw $a0, -1772($fp)
	function_option_at_CellularAutomaton_continue_label_185:
	lw $a0, -1772($fp)
	sw $a0, -1716($fp)
	function_option_at_CellularAutomaton_continue_label_178:
	lw $a0, -1716($fp)
	sw $a0, -1660($fp)
	function_option_at_CellularAutomaton_continue_label_171:
	lw $a0, -1660($fp)
	sw $a0, -1604($fp)
	function_option_at_CellularAutomaton_continue_label_164:
	lw $a0, -1604($fp)
	sw $a0, -1548($fp)
	function_option_at_CellularAutomaton_continue_label_157:
	lw $a0, -1548($fp)
	sw $a0, -1492($fp)
	function_option_at_CellularAutomaton_continue_label_150:
	lw $a0, -1492($fp)
	sw $a0, -1436($fp)
	function_option_at_CellularAutomaton_continue_label_143:
	lw $a0, -1436($fp)
	sw $a0, -1380($fp)
	function_option_at_CellularAutomaton_continue_label_136:
	lw $a0, -1380($fp)
	sw $a0, -1324($fp)
	function_option_at_CellularAutomaton_continue_label_129:
	lw $a0, -1324($fp)
	sw $a0, -1268($fp)
	function_option_at_CellularAutomaton_continue_label_122:
	lw $a0, -1268($fp)
	sw $a0, -1212($fp)
	function_option_at_CellularAutomaton_continue_label_115:
	lw $a0, -1212($fp)
	sw $a0, -1156($fp)
	function_option_at_CellularAutomaton_continue_label_108:
	lw $a0, -1156($fp)
	sw $a0, -1100($fp)
	function_option_at_CellularAutomaton_continue_label_101:
	lw $a0, -1100($fp)
	sw $a0, -1044($fp)
	function_option_at_CellularAutomaton_continue_label_94:
	lw $a0, -1044($fp)
	sw $a0, -988($fp)
	function_option_at_CellularAutomaton_continue_label_87:
	lw $a0, -988($fp)
	sw $a0, -932($fp)
	function_option_at_CellularAutomaton_continue_label_80:
	lw $a0, -932($fp)
	sw $a0, -876($fp)
	function_option_at_CellularAutomaton_continue_label_73:
	lw $a0, -876($fp)
	sw $a0, -820($fp)
	function_option_at_CellularAutomaton_continue_label_66:
	lw $a0, -820($fp)
	sw $a0, -764($fp)
	function_option_at_CellularAutomaton_continue_label_59:
	lw $a0, -764($fp)
	sw $a0, -708($fp)
	function_option_at_CellularAutomaton_continue_label_52:
	lw $a0, -708($fp)
	sw $a0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 1880
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_prompt_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -168
	li $a0, 2
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -16($fp)
	la $a0, data_108 + 0
	sw $a0, -24($fp)
	lw $a0, -24($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -28($fp)
	addi $sp, $sp, 4
	lw $a0, -28($fp)
	sw $a0, -20($fp)
	lw $a0, 0($fp)
	sw $a0, -36($fp)
	lw $a0, -36($fp)
	li $a1, 0
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_prompt_at_CellularAutomaton_error_label_0
	j function_prompt_at_CellularAutomaton_continue_label_1
	function_prompt_at_CellularAutomaton_error_label_0:
	li $v0, 4
	la $a0, data_109
	syscall
	li $v0, 10
	syscall
	function_prompt_at_CellularAutomaton_continue_label_1:
	lw $a0, -36($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -36($fp)
	lw $a1, 0($a0)
	sw $a1, -44($fp)
	lw $a0, -44($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -32($fp)
	addi $sp, $sp, 8
	la $a0, data_110 + 0
	sw $a0, -52($fp)
	lw $a0, -52($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $a0, -56($fp)
	sw $a0, -48($fp)
	lw $a0, 0($fp)
	sw $a0, -64($fp)
	lw $a0, -64($fp)
	li $a1, 0
	jal equals
	sw $v0, -68($fp)
	lw $a0, -68($fp)
	bne $a0 $zero function_prompt_at_CellularAutomaton_error_label_2
	j function_prompt_at_CellularAutomaton_continue_label_3
	function_prompt_at_CellularAutomaton_error_label_2:
	li $v0, 4
	la $a0, data_111
	syscall
	li $v0, 10
	syscall
	function_prompt_at_CellularAutomaton_continue_label_3:
	lw $a0, -64($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -48($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -64($fp)
	lw $a1, 0($a0)
	sw $a1, -72($fp)
	lw $a0, -72($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -60($fp)
	addi $sp, $sp, 8
	lw $a0, 0($fp)
	sw $a0, -80($fp)
	lw $a0, -80($fp)
	li $a1, 0
	jal equals
	sw $v0, -84($fp)
	lw $a0, -84($fp)
	bne $a0 $zero function_prompt_at_CellularAutomaton_error_label_4
	j function_prompt_at_CellularAutomaton_continue_label_5
	function_prompt_at_CellularAutomaton_error_label_4:
	li $v0, 4
	la $a0, data_112
	syscall
	li $v0, 10
	syscall
	function_prompt_at_CellularAutomaton_continue_label_5:
	lw $a0, -80($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -80($fp)
	lw $a1, 0($a0)
	sw $a1, -88($fp)
	lw $a0, -88($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 20
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -76($fp)
	addi $sp, $sp, 4
	lw $a0, -76($fp)
	sw $a0, -16($fp)
	la $a0, data_1 + 0
	sw $a0, -96($fp)
	lw $a0, -96($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -100($fp)
	addi $sp, $sp, 4
	lw $a0, -100($fp)
	sw $a0, -92($fp)
	lw $a0, 0($fp)
	sw $a0, -108($fp)
	lw $a0, -108($fp)
	li $a1, 0
	jal equals
	sw $v0, -112($fp)
	lw $a0, -112($fp)
	bne $a0 $zero function_prompt_at_CellularAutomaton_error_label_6
	j function_prompt_at_CellularAutomaton_continue_label_7
	function_prompt_at_CellularAutomaton_error_label_6:
	li $v0, 4
	la $a0, data_113
	syscall
	li $v0, 10
	syscall
	function_prompt_at_CellularAutomaton_continue_label_7:
	lw $a0, -108($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -92($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -108($fp)
	lw $a1, 0($a0)
	sw $a1, -116($fp)
	lw $a0, -116($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -104($fp)
	addi $sp, $sp, 8
	la $a0, data_114 + 0
	sw $a0, -164($fp)
	lw $a0, -164($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -168($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -132($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -136($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -140($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -144($fp)
	lw $a0, -132($fp)
	lw $a1, -136($fp)
	jal equals
	sw $v0, -148($fp)
	lw $a0, -148($fp)
	bne $a0 $zero function_prompt_at_CellularAutomaton_int_label_11
	lw $a0, -132($fp)
	lw $a1, -140($fp)
	jal equals
	sw $v0, -148($fp)
	lw $a0, -148($fp)
	bne $a0 $zero function_prompt_at_CellularAutomaton_int_label_11
	lw $a0, -132($fp)
	lw $a1, -144($fp)
	jal equals
	sw $v0, -148($fp)
	lw $a0, -148($fp)
	bne $a0 $zero function_prompt_at_CellularAutomaton_string_label_12
	j function_prompt_at_CellularAutomaton_reference_label_13
	function_prompt_at_CellularAutomaton_int_label_11:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -152($fp)
	lw $a0, -168($fp)
	lw $a1, 12($a0)
	sw $a1, -156($fp)
	lw $a0, -152($fp)
	lw $a1, -156($fp)
	jal equals
	sw $v0, -128($fp)
	j function_prompt_at_CellularAutomaton_continue_label_14
	function_prompt_at_CellularAutomaton_string_label_12:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -152($fp)
	lw $a0, -168($fp)
	lw $a1, 12($a0)
	sw $a1, -156($fp)
	lw $a0, -152($fp)
	lw $a1, -156($fp)
	jal equal_str
	sw $v0, -128($fp)
	j function_prompt_at_CellularAutomaton_continue_label_14
	function_prompt_at_CellularAutomaton_reference_label_13:
	lw $a0, -16($fp)
	lw $a1, -168($fp)
	jal equals
	sw $v0, -128($fp)
	function_prompt_at_CellularAutomaton_continue_label_14:
	lw $a0, -128($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -160($fp)
	addi $sp, $sp, 4
	lw $a0, -160($fp)
	lw $a1, 12($a0)
	sw $a1, -124($fp)
	lw $a0, -124($fp)
	bne $a0 $zero function_prompt_at_CellularAutomaton_then_label_8
	j function_prompt_at_CellularAutomaton_else_label_9
	function_prompt_at_CellularAutomaton_then_label_8:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -172($fp)
	addi $sp, $sp, 4
	lw $a0, -172($fp)
	sw $a0, -120($fp)
	j function_prompt_at_CellularAutomaton_continue_label_10
	function_prompt_at_CellularAutomaton_else_label_9:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -176($fp)
	addi $sp, $sp, 4
	lw $a0, -176($fp)
	sw $a0, -120($fp)
	function_prompt_at_CellularAutomaton_continue_label_10:
	lw $a0, -120($fp)
	sw $a0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 168
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_prompt2_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -168
	li $a0, 2
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -16($fp)
	la $a0, data_115 + 0
	sw $a0, -24($fp)
	lw $a0, -24($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -28($fp)
	addi $sp, $sp, 4
	lw $a0, -28($fp)
	sw $a0, -20($fp)
	lw $a0, 0($fp)
	sw $a0, -36($fp)
	lw $a0, -36($fp)
	li $a1, 0
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_prompt2_at_CellularAutomaton_error_label_0
	j function_prompt2_at_CellularAutomaton_continue_label_1
	function_prompt2_at_CellularAutomaton_error_label_0:
	li $v0, 4
	la $a0, data_116
	syscall
	li $v0, 10
	syscall
	function_prompt2_at_CellularAutomaton_continue_label_1:
	lw $a0, -36($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -36($fp)
	lw $a1, 0($a0)
	sw $a1, -44($fp)
	lw $a0, -44($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -32($fp)
	addi $sp, $sp, 8
	la $a0, data_117 + 0
	sw $a0, -52($fp)
	lw $a0, -52($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $a0, -56($fp)
	sw $a0, -48($fp)
	lw $a0, 0($fp)
	sw $a0, -64($fp)
	lw $a0, -64($fp)
	li $a1, 0
	jal equals
	sw $v0, -68($fp)
	lw $a0, -68($fp)
	bne $a0 $zero function_prompt2_at_CellularAutomaton_error_label_2
	j function_prompt2_at_CellularAutomaton_continue_label_3
	function_prompt2_at_CellularAutomaton_error_label_2:
	li $v0, 4
	la $a0, data_118
	syscall
	li $v0, 10
	syscall
	function_prompt2_at_CellularAutomaton_continue_label_3:
	lw $a0, -64($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -48($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -64($fp)
	lw $a1, 0($a0)
	sw $a1, -72($fp)
	lw $a0, -72($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -60($fp)
	addi $sp, $sp, 8
	la $a0, data_119 + 0
	sw $a0, -80($fp)
	lw $a0, -80($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -84($fp)
	addi $sp, $sp, 4
	lw $a0, -84($fp)
	sw $a0, -76($fp)
	lw $a0, 0($fp)
	sw $a0, -92($fp)
	lw $a0, -92($fp)
	li $a1, 0
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_prompt2_at_CellularAutomaton_error_label_4
	j function_prompt2_at_CellularAutomaton_continue_label_5
	function_prompt2_at_CellularAutomaton_error_label_4:
	li $v0, 4
	la $a0, data_120
	syscall
	li $v0, 10
	syscall
	function_prompt2_at_CellularAutomaton_continue_label_5:
	lw $a0, -92($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -76($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -92($fp)
	lw $a1, 0($a0)
	sw $a1, -100($fp)
	lw $a0, -100($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -88($fp)
	addi $sp, $sp, 8
	lw $a0, 0($fp)
	sw $a0, -108($fp)
	lw $a0, -108($fp)
	li $a1, 0
	jal equals
	sw $v0, -112($fp)
	lw $a0, -112($fp)
	bne $a0 $zero function_prompt2_at_CellularAutomaton_error_label_6
	j function_prompt2_at_CellularAutomaton_continue_label_7
	function_prompt2_at_CellularAutomaton_error_label_6:
	li $v0, 4
	la $a0, data_121
	syscall
	li $v0, 10
	syscall
	function_prompt2_at_CellularAutomaton_continue_label_7:
	lw $a0, -108($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -108($fp)
	lw $a1, 0($a0)
	sw $a1, -116($fp)
	lw $a0, -116($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 20
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -104($fp)
	addi $sp, $sp, 4
	lw $a0, -104($fp)
	sw $a0, -16($fp)
	la $a0, data_122 + 0
	sw $a0, -164($fp)
	lw $a0, -164($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -168($fp)
	addi $sp, $sp, 4
	lw $t0, -16($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -132($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -136($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -140($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -144($fp)
	lw $a0, -132($fp)
	lw $a1, -136($fp)
	jal equals
	sw $v0, -148($fp)
	lw $a0, -148($fp)
	bne $a0 $zero function_prompt2_at_CellularAutomaton_int_label_11
	lw $a0, -132($fp)
	lw $a1, -140($fp)
	jal equals
	sw $v0, -148($fp)
	lw $a0, -148($fp)
	bne $a0 $zero function_prompt2_at_CellularAutomaton_int_label_11
	lw $a0, -132($fp)
	lw $a1, -144($fp)
	jal equals
	sw $v0, -148($fp)
	lw $a0, -148($fp)
	bne $a0 $zero function_prompt2_at_CellularAutomaton_string_label_12
	j function_prompt2_at_CellularAutomaton_reference_label_13
	function_prompt2_at_CellularAutomaton_int_label_11:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -152($fp)
	lw $a0, -168($fp)
	lw $a1, 12($a0)
	sw $a1, -156($fp)
	lw $a0, -152($fp)
	lw $a1, -156($fp)
	jal equals
	sw $v0, -128($fp)
	j function_prompt2_at_CellularAutomaton_continue_label_14
	function_prompt2_at_CellularAutomaton_string_label_12:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -152($fp)
	lw $a0, -168($fp)
	lw $a1, 12($a0)
	sw $a1, -156($fp)
	lw $a0, -152($fp)
	lw $a1, -156($fp)
	jal equal_str
	sw $v0, -128($fp)
	j function_prompt2_at_CellularAutomaton_continue_label_14
	function_prompt2_at_CellularAutomaton_reference_label_13:
	lw $a0, -16($fp)
	lw $a1, -168($fp)
	jal equals
	sw $v0, -128($fp)
	function_prompt2_at_CellularAutomaton_continue_label_14:
	lw $a0, -128($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -160($fp)
	addi $sp, $sp, 4
	lw $a0, -160($fp)
	lw $a1, 12($a0)
	sw $a1, -124($fp)
	lw $a0, -124($fp)
	bne $a0 $zero function_prompt2_at_CellularAutomaton_then_label_8
	j function_prompt2_at_CellularAutomaton_else_label_9
	function_prompt2_at_CellularAutomaton_then_label_8:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -172($fp)
	addi $sp, $sp, 4
	lw $a0, -172($fp)
	sw $a0, -120($fp)
	j function_prompt2_at_CellularAutomaton_continue_label_10
	function_prompt2_at_CellularAutomaton_else_label_9:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -176($fp)
	addi $sp, $sp, 4
	lw $a0, -176($fp)
	sw $a0, -120($fp)
	function_prompt2_at_CellularAutomaton_continue_label_10:
	lw $a0, -120($fp)
	sw $a0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 168
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	li $a0, 6
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_attr_at_CellularAutomaton
	sw $v0, -16($fp)
	addi $sp, $sp, 4
	lw $v0, -12($fp)
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_attr_at_CellularAutomaton:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	lw $a0, 0($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_attr_at_Board
	sw $v0, -12($fp)
	addi $sp, $sp, 4
	li $a0, 2
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -16($fp)
	lw $a0, 0($fp)
	lw $a1, -16($fp)
	sw $a1, 24($a0)
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_main_at_Main:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -228
	li $a0, 4
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -16($fp)
	li $a0, 2
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -24($fp)
	la $a0, data_123 + 0
	sw $a0, -32($fp)
	lw $a0, -32($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -36($fp)
	addi $sp, $sp, 4
	lw $a0, -36($fp)
	sw $a0, -28($fp)
	lw $a0, 0($fp)
	sw $a0, -44($fp)
	lw $a0, -44($fp)
	li $a1, 0
	jal equals
	sw $v0, -48($fp)
	lw $a0, -48($fp)
	bne $a0 $zero function_main_at_Main_error_label_0
	j function_main_at_Main_continue_label_1
	function_main_at_Main_error_label_0:
	li $v0, 4
	la $a0, data_124
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_1:
	lw $a0, -44($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -28($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -44($fp)
	lw $a1, 0($a0)
	sw $a1, -52($fp)
	lw $a0, -52($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -40($fp)
	addi $sp, $sp, 8
	la $a0, data_125 + 0
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -64($fp)
	addi $sp, $sp, 4
	lw $a0, -64($fp)
	sw $a0, -56($fp)
	lw $a0, 0($fp)
	sw $a0, -72($fp)
	lw $a0, -72($fp)
	li $a1, 0
	jal equals
	sw $v0, -76($fp)
	lw $a0, -76($fp)
	bne $a0 $zero function_main_at_Main_error_label_2
	j function_main_at_Main_continue_label_3
	function_main_at_Main_error_label_2:
	li $v0, 4
	la $a0, data_126
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_3:
	lw $a0, -72($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -56($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -72($fp)
	lw $a1, 0($a0)
	sw $a1, -80($fp)
	lw $a0, -80($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -68($fp)
	addi $sp, $sp, 8
	function_main_at_Main_while_label_4:
	lw $a0, 0($fp)
	sw $a0, -92($fp)
	lw $a0, -92($fp)
	li $a1, 0
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_main_at_Main_error_label_7
	j function_main_at_Main_continue_label_8
	function_main_at_Main_error_label_7:
	li $v0, 4
	la $a0, data_127
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_8:
	lw $a0, -92($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -92($fp)
	lw $a1, 0($a0)
	sw $a1, -100($fp)
	lw $a0, -100($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 104
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -88($fp)
	addi $sp, $sp, 4
	lw $a0, -88($fp)
	lw $a1, 12($a0)
	sw $a1, -84($fp)
	lw $a0, -84($fp)
	bne $a0 $zero function_main_at_Main_loop_label_5
	j function_main_at_Main_pool_label_6
	function_main_at_Main_loop_label_5:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -104($fp)
	addi $sp, $sp, 4
	lw $a0, -104($fp)
	sw $a0, -16($fp)
	lw $a0, 0($fp)
	sw $a0, -112($fp)
	lw $a0, -112($fp)
	li $a1, 0
	jal equals
	sw $v0, -116($fp)
	lw $a0, -116($fp)
	bne $a0 $zero function_main_at_Main_error_label_9
	j function_main_at_Main_continue_label_10
	function_main_at_Main_error_label_9:
	li $v0, 4
	la $a0, data_128
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_10:
	lw $a0, -112($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -112($fp)
	lw $a1, 0($a0)
	sw $a1, -120($fp)
	lw $a0, -120($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 96
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -108($fp)
	addi $sp, $sp, 4
	lw $a0, -108($fp)
	sw $a0, -24($fp)
	lw $a0, -24($fp)
	sw $a0, -124($fp)
	jal init_at_CellularAutomaton
	sw $v0, -136($fp)
	lw $a0, -136($fp)
	sw $a0, -132($fp)
	lw $a0, -132($fp)
	li $a1, 0
	jal equals
	sw $v0, -140($fp)
	lw $a0, -140($fp)
	bne $a0 $zero function_main_at_Main_error_label_11
	j function_main_at_Main_continue_label_12
	function_main_at_Main_error_label_11:
	li $v0, 4
	la $a0, data_129
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_12:
	lw $a0, -132($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -124($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -132($fp)
	lw $a1, 0($a0)
	sw $a1, -144($fp)
	lw $a0, -144($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 36
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -128($fp)
	addi $sp, $sp, 8
	lw $a0, 0($fp)
	lw $a1, -128($fp)
	sw $a1, 28($a0)
	lw $a0, 0($fp)
	lw $a1, 28($a0)
	sw $a1, -156($fp)
	lw $a0, -156($fp)
	sw $a0, -152($fp)
	lw $a0, -152($fp)
	li $a1, 0
	jal equals
	sw $v0, -160($fp)
	lw $a0, -160($fp)
	bne $a0 $zero function_main_at_Main_error_label_13
	j function_main_at_Main_continue_label_14
	function_main_at_Main_error_label_13:
	li $v0, 4
	la $a0, data_130
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_14:
	lw $a0, -152($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -152($fp)
	lw $a1, 0($a0)
	sw $a1, -164($fp)
	lw $a0, -164($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 40
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -148($fp)
	addi $sp, $sp, 4
	function_main_at_Main_while_label_15:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -168($fp)
	lw $a0, -168($fp)
	bne $a0 $zero function_main_at_Main_loop_label_16
	j function_main_at_Main_pool_label_17
	function_main_at_Main_loop_label_16:
	lw $a0, 0($fp)
	sw $a0, -184($fp)
	lw $a0, -184($fp)
	li $a1, 0
	jal equals
	sw $v0, -188($fp)
	lw $a0, -188($fp)
	bne $a0 $zero function_main_at_Main_error_label_21
	j function_main_at_Main_continue_label_22
	function_main_at_Main_error_label_21:
	li $v0, 4
	la $a0, data_131
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_22:
	lw $a0, -184($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -184($fp)
	lw $a1, 0($a0)
	sw $a1, -192($fp)
	lw $a0, -192($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 100
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -180($fp)
	addi $sp, $sp, 4
	lw $a0, -180($fp)
	lw $a1, 12($a0)
	sw $a1, -176($fp)
	lw $a0, -176($fp)
	bne $a0 $zero function_main_at_Main_then_label_18
	j function_main_at_Main_else_label_19
	function_main_at_Main_then_label_18:
	lw $a0, 0($fp)
	lw $a1, 28($a0)
	sw $a1, -204($fp)
	lw $a0, -204($fp)
	sw $a0, -200($fp)
	lw $a0, -200($fp)
	li $a1, 0
	jal equals
	sw $v0, -208($fp)
	lw $a0, -208($fp)
	bne $a0 $zero function_main_at_Main_error_label_23
	j function_main_at_Main_continue_label_24
	function_main_at_Main_error_label_23:
	li $v0, 4
	la $a0, data_132
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_24:
	lw $a0, -200($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -200($fp)
	lw $a1, 0($a0)
	sw $a1, -212($fp)
	lw $a0, -212($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 92
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -196($fp)
	addi $sp, $sp, 4
	lw $a0, 0($fp)
	lw $a1, 28($a0)
	sw $a1, -224($fp)
	lw $a0, -224($fp)
	sw $a0, -220($fp)
	lw $a0, -220($fp)
	li $a1, 0
	jal equals
	sw $v0, -228($fp)
	lw $a0, -228($fp)
	bne $a0 $zero function_main_at_Main_error_label_25
	j function_main_at_Main_continue_label_26
	function_main_at_Main_error_label_25:
	li $v0, 4
	la $a0, data_133
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_26:
	lw $a0, -220($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -220($fp)
	lw $a1, 0($a0)
	sw $a1, -232($fp)
	lw $a0, -232($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 40
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -216($fp)
	addi $sp, $sp, 4
	lw $a0, -216($fp)
	sw $a0, -172($fp)
	j function_main_at_Main_continue_label_20
	function_main_at_Main_else_label_19:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -236($fp)
	addi $sp, $sp, 4
	lw $a0, -236($fp)
	sw $a0, -16($fp)
	lw $a0, -236($fp)
	sw $a0, -172($fp)
	function_main_at_Main_continue_label_20:
	j function_main_at_Main_while_label_15
	function_main_at_Main_pool_label_17:
	j function_main_at_Main_while_label_4
	function_main_at_Main_pool_label_6:
	lw $a0, 0($fp)
	sw $a0, -20($fp)
	lw $a0, -20($fp)
	sw $a0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 228
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_at_Main:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	li $a0, 7
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_attr_at_Main
	sw $v0, -16($fp)
	addi $sp, $sp, 4
	lw $v0, -12($fp)
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_attr_at_Main:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	lw $a0, 0($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_attr_at_CellularAutomaton
	sw $v0, -12($fp)
	addi $sp, $sp, 4
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra

header_size = 12 #in bytes
header_size_slot = 0
header_next_slot = 4
header_reachable_slot = 8
alloc_size       = 2048
total_alloc_size =  2060 #alloc_size + header_size
neg_header_size = -12 #-header_size
free_list = 0
used_list = header_size
state_size = 4
stack_base = -4
init_alloc_size = 28 #(header_size*2) +  state_size
object_mark = -1
meta_data_object_size = 4   #in words
object_expanded = -2
reachable = 1
new_line = 10
str_size_treshold = 1024
int_type = 0
string_type = 0
type_number = 0

free_block:
    addiu $sp $sp -28
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)
    sw $a0 12($sp)
    sw $ra 16($sp)
    sw $t3 20($sp)
    sw $t4 24($sp)

    move $t0 $a0
    
    addiu $t1 $gp free_list        

    addiu $t3 $gp used_list         

free_block_loop_used_list:         
    beq $t4 $t0 free_block_loop_free_list
    move $t3 $t4
    j free_block_loop_used_list


free_block_loop_free_list:         
    lw $t2 header_next_slot($t1)
    beq $t2 $zero free_block_founded_prev
    bge $t2 $t0 free_block_founded_prev
    move $t1 $t2
    j free_block_loop_free_list

free_block_founded_prev:        
    # Remove the block from the used-list
    lw $t4 header_next_slot($t0)
    sw $t4 header_next_slot($t3)
    
    # Add the block to the free-list
    sw $t2 header_next_slot($t0)
    sw $t0 header_next_slot($t1)

free_block_end:
   
    move $a0 $t0
    jal expand_block
    move $a0 $t1
    jal expand_block

    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    lw $a0 12($sp)
    lw $ra 16($sp)
    lw $t3 20($sp)
    lw $t4 24($sp)
    addiu $sp $sp 28

    jr $ra


expand_block:
    addiu $sp $sp -16
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)
    sw $t3 12($sp)

    
    addiu $t0 $gp free_list    

    beq $t0 $a0 expand_block_end  
    move $t0 $a0

   
    lw $t1 header_next_slot($t0)
    lw $t2 header_size_slot($t0)
    move $t3 $t2
    addiu $t2 $t2 header_size
    addu $t2 $t2 $t0
    beq $t2 $t1 expand_block_expand
    j expand_block_end

expand_block_expand:    
    lw $t2 header_size_slot($t1)
    addi $t2 $t2 header_size
    add $t2 $t2 $t3
    sw $t2 header_size_slot($t0)
    lw $t1 header_next_slot($t1)
    sw $t1 header_next_slot($t0)
    
expand_block_end:
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    lw $t3 12($sp)
    addiu $sp $sp 16

    jr $ra


extend_heap:
    addiu $sp $sp -12
    sw $a0 0($sp)
    sw $a1 4($sp)
    sw $t0 8($sp)

    
    li $v0 9
    addiu $a0 $a1 header_size
    syscall
    
    
    move $t0 $a1 
    sw $t0 header_size_slot($v0)
    sw $zero header_next_slot($v0)
    sw $zero header_reachable_slot($v0)

    
    lw $t0, 0($sp)
    sw $v0 header_next_slot($t0)

    move $a0 $t0
    lw $a1 4($sp)
    lw $t0 8($sp)
    addiu $sp $sp 12

    jr $ra


  
split_block:
    addiu $sp $sp -16
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $a0 8($sp)
    sw $a1 12($sp)

   
    lw $t0 header_size_slot($a0)
    bgt $a1 $t0 split_block_error_small
    
    
    sub $t0 $t0 $a1
    li $t1 header_size
    ble $t0 $t1 split_block_same_size

    
    addu $t0 $a0 $a1
    addiu $t0 $t0 header_size     

    #Update headers of the two blocks
    lw $t1 header_next_slot($a0)    
    sw $t1 header_next_slot($t0)
    sw $t0 header_next_slot($a0)

    lw $t1 header_size_slot($a0)    
    sub $t1 $t1 $a1

    addi $t1 $t1 neg_header_size
    sw $t1 header_size_slot($t0)
    sw $a1 header_size_slot($a0)
    move $v0 $a0
    j split_block_end

split_block_same_size:
    move $v0 $a0
    j split_block_end

split_block_error_small:
    j split_block_end

split_block_end:
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $a0 8($sp)
    lw $a1 12($sp)
    addiu $sp $sp 16

    jr $ra

malloc:
    move $v0 $zero
    addiu $sp $sp -28
    sw $t1 0($sp)
    sw $t0 4($sp)
    sw $a0 8($sp)
    sw $a1 12($sp)
    sw $ra 16($sp)
    sw $t2 20($sp)
    sw $t3 24($sp)
    
    addiu $t0 $gp free_list
    j malloc_loop

malloc_end:

    move $a0 $v0
    lw $a1 8($sp)                  
    jal split_block

    lw $t1 header_next_slot($v0)
    sw $t1 header_next_slot($t3)

    addiu $t1 $gp used_list
    lw $a0 header_next_slot($t1)

    sw $a0 header_next_slot($v0)
    sw $v0 header_next_slot($t1)
    
    addiu $v0 $v0 header_size

    lw $t3 24($sp)
    lw $t2 20($sp)
    lw $ra 16($sp)
    lw $a1 12($sp)
    lw $a0 8($sp)
    lw $t0 4($sp)
    lw $t1 0($sp)
    addiu $sp $sp 28

    jr $ra

malloc_loop:
    move $t2 $t0                        
    lw $t0 header_next_slot($t0)        
    beq $t0 $zero malloc_search_end     
    j malloc_check_valid_block

malloc_search_end:
    beq $v0 $zero malloc_alloc_new_block  
    j malloc_end

malloc_alloc_new_block:
    li $t1 alloc_size               
    move $t3 $t2
    move $a1 $a0                    
    move $a0 $t2                    
    bge $a1 $t1 malloc_big_block   
    li $a1 alloc_size         
    jal extend_heap
    
    j malloc_end

malloc_big_block:
    #addiu $a1 $a1 header_size              
    jal extend_heap
    j malloc_end



malloc_check_valid_block:
    lw $t1 header_size_slot($t0)      
    bge $t1 $a0 malloc_valid_block    
    j malloc_loop

malloc_valid_block:
    beq $v0 $zero malloc_first_valid_block  
    bge $t1 $v1 malloc_loop                 
    move $v0 $t0                        
    move $v1 $t1                        
    move $t3 $t2
    j malloc_loop


malloc_first_valid_block:
    move $v0 $t0                        
    move $v1 $t1                        
    move $t3 $t2 
    j malloc_loop


copy:
    addiu $sp $sp -16
    sw $a0 0($sp)
    sw $a1 4($sp)
    sw $a2 8($sp)
    sw $t0 12($sp)

copy_loop:
    beq $a2 $zero copy_end
    lw $t0 0($a0)
    sw $t0 0($a1)
    addiu $a0 $a0 4
    addiu $a1 $a1 4
    addi $a2 $a2 -4
    j copy_loop 

copy_end:
    lw $a0 0($sp)
    lw $a1 4($sp)
    lw $a2 8($sp)
    lw $t0 12($sp)
    addiu $sp $sp 16

    jr $ra


use_block:
    addiu $sp $sp -12
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)

    addiu $t0 $gp free_list

use_block_loop:
    move $t1 $t0
    lw $t0 header_next_slot($t0)
    beq $t0 $zero use_block_end
    beq $t0 $a0 use_block_founded
    j use_block_loop

use_block_founded:
    lw $t2 header_next_slot($t0)
    sw $t2 header_next_slot($t1)

    addiu $t1 $gp used_list
    lw $t2 header_next_slot($t1)
    sw $t0 header_next_slot($t1)
    sw $t2 header_next_slot($t0)

use_block_end:
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    addiu $sp $sp 12

    jr $ra
equals:
    beq $a0 $a1 equals_equal
    li $v0 0
    j equals_end
    
equals_equal:
    li $v0 1

equals_end:
    jr $ra



less_equal:
    ble $a0 $a1 less_equal_true
    li $v0 0
    j less_equal_end

less_equal_true:
    li $v0 1

less_equal_end:
    jr $ra


less:
    blt $a0 $a1 less_true
    li $v0 0
    j less_end

less_true:
    li $v0 1

less_end:
    jr $ra
len:
    addiu $sp $sp -8
    sw $t0 0($sp)
    sw $t1 4($sp)

    move $t0 $a0
    move $v0 $zero

len_loop:
    lb $t1 0($t0)
    beq $t1 $zero len_end
    addi $v0 $v0 1
    addiu $t0 $t0 1
    j len_loop

len_end:
    lw $t0 0($sp)
    lw $t1 4($sp)
    addiu $sp $sp 8

    jr $ra

concat:
    addiu $sp $sp -24
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)
    sw $a0 12($sp)
    sw $a1 16($sp)
    sw $ra 20($sp)

    move $t0 $a0
    move $t1 $a1


    addiu $a0 $a2 1
    li $t2 4
    div $a0 $t2
    mfhi $a0
    bne $a0 $zero concat_allign_size
    addiu $a0 $a2 1

concat_size_alligned:
    jal malloc
    move $t2 $v0
    j concat_copy_first_loop

concat_allign_size:
    sub $t2 $t2 $a0
    add $a0 $a2 $t2
    addiu $a0 $a0 1
    j concat_size_alligned

concat_copy_first_loop:
    lb $a0 0($t0)
    beq $a0 $zero concat_copy_second_loop
    sb $a0 0($t2)
    addiu $t0 $t0 1
    addiu $t2 $t2 1
    j concat_copy_first_loop

concat_copy_second_loop:
    lb $a0 0($t1)
    beq $a0 $zero concat_end
    sb $a0 0($t2)
    addiu $t1 $t1 1
    addiu $t2 $t2 1
    j concat_copy_second_loop

concat_end:
    sb $zero 0($t2)
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    lw $a0 12($sp)
    lw $a1 16($sp)
    lw $ra 20($sp)
    addiu $sp $sp 24

    jr $ra


substr:
    addiu $sp $sp -24
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)
    sw $t3 12($sp)
    sw $a0 16($sp)
    sw $ra 20($sp)

    move $t0 $a0
    li $t1 4
    addiu $t3 $a2 1
    div $t3 $t1
 
    mfhi $t2
    bne $t2 $zero substr_allign_size
    move $t1 $t3
    j substr_new_block

substr_allign_size:
    sub $t1 $t1 $t2
    add $t1 $t1 $t3

substr_new_block:
    move $a0 $t1
    jal malloc
    move $t3 $v0
    move $t1 $zero
    addu $t0 $t0 $a1

substr_copy_loop:
    beq $t1 $a2 substr_end
    lb $t2 0($t0)
    sb $t2 0($t3)
    addiu $t0 $t0 1
    addiu $t3 $t3 1
    addiu $t1 $t1 1
    j substr_copy_loop

substr_end:
    sb $zero 0($t3)
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    lw $t3 12($sp)
    lw $a0 16($sp)
    lw $ra 20($sp)
    addiu $sp $sp 24

    jr $ra


equal_str:
    addiu $sp $sp -16
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)
    sw $t3 12($sp)

    move $t0 $a0
    move $t1 $a1

equal_str_loop:
    lb $t2 0($t0)
    lb $t3 0($t1)
    bne $t2 $t3 equal_str_not_equal
    beq $t2 $zero equal_str_equal

    addiu $t0 $t0 1
    addiu $t1 $t1 1
    j equal_str_loop

equal_str_not_equal:
    move $v0 $zero
    j equal_str_end

equal_str_equal:
    li $v0 1

equal_str_end:
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    lw $t3 12($sp)
    addiu $sp $sp 16

    jr $ra
    
read_str:
    addiu $sp $sp -36
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)
    sw $t3 12($sp)
	sw $t4 16($sp)
	sw $t5 20($sp)
    sw $a0 24($sp)
    sw $a1 28($sp)
    sw $ra 32($sp)
	
    addiu $t0 $gp free_list
    move $t1 $zero
    move $t2 $t0

read_str_larger_block_loop:
    lw $t0 header_next_slot($t0)
    beq $t0 $zero read_str_reading
    lw $t3 header_size_slot($t0)
    bge $t1 $t3 read_str_larger_block_loop
    move $t1 $t3
    move $t2 $t0
    j read_str_larger_block_loop

read_str_reading:
    beq $t1 $zero read_str_new_block
    move $a1 $t1
    li $v0 8
    addiu $a0 $t2 header_size
    syscall
    move $t0 $a0
    move $t1 $zero

read_str_look_nl:
    lb $t2 0($t0)
    beq $t2 new_line read_str_nl_founded
    beq $t2 $zero read_str_zero_founded#read_str_no_nl
    addi $t1 $t1 1
    addi $t0 $t0 1
    j read_str_look_nl

read_str_zero_founded:
    blt $t1 $t3 read_str_nl_founded
    j read_str_no_nl

read_str_nl_founded:
    sb $zero 0($t0)
    addi $t1 $t1 1
	li $t2 4
	div $t1 $t2
	mfhi $t3
	beq $t3 $zero read_str_nl_founded_alligned
	sub $t2 $t2 $t3
	add $t1 $t1 $t2
read_str_nl_founded_alligned:
    move $a1 $t1
    addiu $a0 $a0 neg_header_size
    jal split_block
    jal use_block

    addiu $v0 $a0 header_size
	j read_str_end


read_str_no_nl:
	addi $t1 $t1 1
    blt $t1 str_size_treshold read_str_dup
	addi $t1 $t1 alloc_size
	j read_str_extend_heap
read_str_dup:
	sll $t1 $t1 1
read_str_extend_heap:
	move $a1 $t1
	move $t0 $a0
	addiu $a0 $gp free_list

read_str_last_block_loop:
	lw $t1 header_next_slot($a0)
	beq $t1 $zero read_str_last_block_founded
	lw $a0 header_next_slot($a0)
	j read_str_last_block_loop

read_str_last_block_founded:
	jal extend_heap
	jal expand_block
	lw $t1 header_next_slot($a0)
	bne $t1 $zero read_str_copy_prev
	move $t1 $a0

read_str_copy_prev:
	lw $t3 header_size_slot($t1)
	move $t2 $zero
	move $t5 $t1
	addiu $t1 $t1 header_size

read_str_copy_loop:
	lb $t4 0($t0)
	beq $t4 $zero read_str_copy_end
	sb $t4 0($t1)
	addi $t2 $t2 1
	addi $t0 $t0 1
	addi $t1 $t1 1
	j read_str_copy_loop

read_str_copy_end:
	sub $t3 $t3 $t2
	move $a0 $t1
	move $a1 $t3
	li $v0 8
	syscall
	move $t0 $a0
	move $t1 $t2
	addiu $a0 $t5 header_size
	j read_str_look_nl

	
read_str_end:
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    lw $t3 12($sp)
	lw $t4 16($sp)
	lw $t5 20($sp)
    lw $a0 24($sp)
    lw $a1 28($sp)
    lw $ra 32($sp)
    addiu $sp $sp 36

    jr $ra


read_str_new_block:
    addiu $t0 $gp free_list

read_str_new_block_search_last:
    lw $t1 header_next_slot($t0)
    beq $t1 $zero read_str_new_block_create
    move $t0 $t1
    j read_str_new_block_search_last

read_str_new_block_create:
    move $a0 $t0
    li $a1 alloc_size
    jal extend_heap
    jal expand_block
    lw $t2 header_next_slot($a0)
    beq $t2 $zero read_str_new_block_expanded
    lw $t1 header_size_slot($t2)
    j read_str_reading

read_str_new_block_expanded:
    move $t2 $a0
    lw $t1 header_size_slot($a0)
    j read_str_reading