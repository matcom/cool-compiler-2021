.data
default_str: .asciiz ""
.word 0
data_1: .asciiz "Object"
.word 0
data_2: .asciiz "IO"
.word 0
data_3: .asciiz "String"
.word 0
data_4: .asciiz "Int"
.word 0
data_5: .asciiz "Bool"
.word 0
data_6: .asciiz "CellularAutomaton"
.word 0
data_7: .asciiz "Main"
.word 0
data_8: .asciiz "
"
.word 0
data_9: .asciiz ""
.word 0
data_10: .asciiz "Abort called from class "
.word 0
data_11: .asciiz "Index out of range exception"
.word 0
data_12: .asciiz "\n"
.word 0
data_13: .asciiz "Function call in a void instance"
.word 0
data_14: .asciiz "Function call in a void instance"
.word 0
data_15: .asciiz "Function call in a void instance"
.word 0
data_16: .asciiz "Function call in a void instance"
.word 0
data_17: .asciiz "Function call in a void instance"
.word 0
data_18: .asciiz "Function call in a void instance"
.word 0
data_19: .asciiz "Function call in a void instance"
.word 0
data_20: .asciiz "Function call in a void instance"
.word 0
data_21: .asciiz "Function call in a void instance"
.word 0
data_22: .asciiz "Function call in a void instance"
.word 0
data_23: .asciiz "Function call in a void instance"
.word 0
data_24: .asciiz "X"
.word 0
data_25: .asciiz "Function call in a void instance"
.word 0
data_26: .asciiz "X"
.word 0
data_27: .asciiz "Function call in a void instance"
.word 0
data_28: .asciiz "X"
.word 0
data_29: .asciiz "."
.word 0
data_30: .asciiz "X"
.word 0
data_31: .asciiz "Function call in a void instance"
.word 0
data_32: .asciiz "Function call in a void instance"
.word 0
data_33: .asciiz "Function call in a void instance"
.word 0
data_34: .asciiz "         X         "
.word 0
data_35: .asciiz "Function call in a void instance"
.word 0
data_36: .asciiz "Function call in a void instance"
.word 0
data_37: .asciiz "Function call in a void instance"
.word 0
data_38: .asciiz "Function call in a void instance"


types_table:
.word data_1
.word data_2
.word data_3
.word data_4
.word data_5
.word data_6
.word data_7

prototype_table:
 .word type_1_prototype
 .word type_2_prototype
 .word type_3_prototype
 .word type_4_prototype
 .word type_5_prototype
 .word type_6_prototype
 .word type_7_prototype

type_1_dispatch:
.word function_abort_at_Object
.word function_type_name_at_Object
.word function_copy_at_Object
.word __ctor_Object

type_1_prototype:
.word 0
.word 4
.word type_1_dispatch
.word	-1


type_2_dispatch:
.word function_abort_at_Object
.word function_type_name_at_Object
.word function_copy_at_Object
.word function_out_string_at_IO
.word function_out_int_at_IO
.word function_in_string_at_IO
.word function_in_int_at_IO
.word __ctor_IO

type_2_prototype:
.word 1
.word 4
.word type_2_dispatch
.word	-1


type_3_dispatch:
.word function_abort_at_Object
.word function_type_name_at_Object
.word function_copy_at_Object
.word function_length_at_String
.word function_concat_at_String
.word function_substr_at_String
.word __ctor_String

type_3_prototype:
.word 2
.word 6
.word type_3_dispatch
.word 0
.word 0
.word	-1


type_4_dispatch:
.word function_abort_at_Object
.word function_type_name_at_Object
.word function_copy_at_Object
.word __ctor_Int

type_4_prototype:
.word 3
.word 5
.word type_4_dispatch
.word 0
.word	-1


type_5_dispatch:
.word function_abort_at_Object
.word function_type_name_at_Object
.word function_copy_at_Object
.word __ctor_Bool

type_5_prototype:
.word 4
.word 5
.word type_5_dispatch
.word 0
.word	-1


type_6_dispatch:
.word function_abort_at_Object
.word function_copy_at_Object
.word function_type_name_at_Object
.word function_in_int_at_IO
.word function_in_string_at_IO
.word function_out_int_at_IO
.word function_out_string_at_IO
.word function_cell_at_CellularAutomaton
.word function_cell_at_next_evolution_at_CellularAutomaton
.word function_cell_left_neighbor_at_CellularAutomaton
.word function_cell_right_neighbor_at_CellularAutomaton
.word function_evolve_at_CellularAutomaton
.word function_init_at_CellularAutomaton
.word function_num_cells_at_CellularAutomaton
.word function_print_at_CellularAutomaton
.word __attributes_ctor_CellularAutomaton
.word __ctor_CellularAutomaton

type_6_prototype:
.word 5
.word 5
.word type_6_dispatch
.word 0
.word	-1


type_7_dispatch:
.word function_abort_at_Object
.word function_copy_at_Object
.word function_type_name_at_Object
.word function_main_at_Main
.word __attributes_ctor_Main
.word __ctor_Main

type_7_prototype:
.word 6
.word 5
.word type_7_dispatch
.word 0
.word	-1


.text
.globl main
__ctor_Object:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -4
li $t0 0
sll $t0 $t0 2
la $t1 prototype_table
add $t1 $t1 $t0
lw $t1 0($t1)
lw $a0 4($t1)
sll $a0 $a0 2
jal allocate
move $a2 $a0
move $a0 $t1
move $a1 $v0
jal copy
sw $v0 -12($fp)
lw $v0 -12($fp)
addi $sp $sp 4
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_abort_at_Object:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -4
la $t0 data_10
sw $t0 -12($fp)
li $v0 4
lw $a0 -12($fp)
syscall
lw $t0 0($fp)
lw $t1 0($t0)
sll $t1 $t1 2
la $t0 types_table
add $t0 $t0 $t1
lw $t1 0($t0)
sw $t1 -12($fp)
li $v0 4
lw $a0 -12($fp)
syscall
la $t0 data_8
sw $t0 -12($fp)
li $v0 4
lw $a0 -12($fp)
syscall
li $v0 10
syscall
addi $sp $sp 4
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_type_name_at_Object:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -8
lw $t0 0($fp)
lw $t1 0($t0)
sll $t1 $t1 2
la $t0 types_table
add $t0 $t0 $t1
lw $t1 0($t0)
sw $t1 -16($fp)
lw $t0 -16($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_String
addi $sp $sp 4
sw $v0 -12($fp)
lw $v0 -12($fp)
addi $sp $sp 8
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_copy_at_Object:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -4
lw $t0 0($fp)
lw $a0 4($t0)
sll $a0 $a0 2
jal allocate
move $a2 $a0
move $a0 $t0
move $a1 $v0
jal copy
sw $v0 -12($fp)
lw $v0 -12($fp)
addi $sp $sp 4
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

__ctor_IO:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -4
li $t0 1
sll $t0 $t0 2
la $t1 prototype_table
add $t1 $t1 $t0
lw $t1 0($t1)
lw $a0 4($t1)
sll $a0 $a0 2
jal allocate
move $a2 $a0
move $a0 $t1
move $a1 $v0
jal copy
sw $v0 -12($fp)
lw $v0 -12($fp)
addi $sp $sp 4
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_out_string_at_IO:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -4
lw $t0 0($fp)
lw $t1 12($t0)
sw $t1 -12($fp)
li $v0 4
lw $a0 -12($fp)
syscall
lw $v0 4($fp)
addi $sp $sp 4
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_out_int_at_IO:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -4
lw $t0 0($fp)
lw $t1 12($t0)
sw $t1 -12($fp)
li $v0 1
lw $a0 -12($fp)
syscall
lw $v0 4($fp)
addi $sp $sp 4
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_in_string_at_IO:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -8
jal read_string
sw $v0 -16($fp)
lw $t0 -16($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_String
addi $sp $sp 4
sw $v0 -12($fp)
lw $v0 -12($fp)
addi $sp $sp 8
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_in_int_at_IO:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -8
li $v0 5
syscall
sw $v0 -16($fp)
lw $t0 -16($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -12($fp)
lw $v0 -12($fp)
addi $sp $sp 8
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

__ctor_String:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -12
li $t0 2
sll $t0 $t0 2
la $t1 prototype_table
add $t1 $t1 $t0
lw $t1 0($t1)
lw $a0 4($t1)
sll $a0 $a0 2
jal allocate
move $a2 $a0
move $a0 $t1
move $a1 $v0
jal copy
sw $v0 -20($fp)
lw $t0 -20($fp)
lw $t1 0($fp)
sw $t1 12($t0)
lw $a0 0($fp)
jal length
sw $v0 -16($fp)
lw $t0 -16($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -12($fp)
lw $t0 -20($fp)
lw $t1 -12($fp)
sw $t1 16($t0)
lw $v0 -20($fp)
addi $sp $sp 12
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_length_at_String:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -4
lw $t0 0($fp)
lw $t1 16($t0)
sw $t1 -12($fp)
lw $v0 -12($fp)
addi $sp $sp 4
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_concat_at_String:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -24
lw $t0 4($fp)
lw $t1 12($t0)
sw $t1 -32($fp)
lw $t0 0($fp)
lw $t1 12($t0)
sw $t1 -28($fp)
lw $t0 4($fp)
lw $t1 16($t0)
sw $t1 -24($fp)
lw $t0 0($fp)
lw $t1 16($t0)
sw $t1 -20($fp)
lw $t0 -24($fp)
lw $t1 12($t0)
sw $t1 -24($fp)
lw $t0 -20($fp)
lw $t1 12($t0)
sw $t1 -20($fp)
lw $t0 -24($fp)
lw $t1 -20($fp)
add $t0 $t0 $t1
sw $t0 -24($fp)
lw $a0 -32($fp)
lw $a1 -28($fp)
lw $a2 -24($fp)
jal concat
sw $v0 -16($fp)
lw $t0 -16($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_String
addi $sp $sp 4
sw $v0 -12($fp)
lw $v0 -12($fp)
addi $sp $sp 24
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_substr_at_String:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -36
lw $t0 8($fp)
lw $t1 12($t0)
sw $t1 -16($fp)
lw $t0 4($fp)
lw $t1 12($t0)
sw $t1 -40($fp)
lw $t0 0($fp)
lw $t1 12($t0)
sw $t1 -36($fp)
lw $t0 8($fp)
lw $t1 16($t0)
sw $t1 -32($fp)
lw $t0 -32($fp)
lw $t1 12($t0)
sw $t1 -28($fp)
lw $t0 -36($fp)
lw $t1 -40($fp)
add $t0 $t0 $t1
sw $t0 -24($fp)
lw $t0 -28($fp)
lw $t1 -24($fp)
slt $t1 $t0 $t1
sw $t1 -20($fp)
lw $t0 -20($fp)
bne $t0 $zero label_1
j label_2
label_1:
li $v0 4
la $a0 data_11
syscall
li $v0 10
syscall
label_2:
lw $a0 -16($fp)
lw $a1 -40($fp)
lw $a2 -36($fp)
jal substr
sw $v0 -44($fp)
lw $t0 -44($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_String
addi $sp $sp 4
sw $v0 -12($fp)
lw $v0 -12($fp)
addi $sp $sp 36
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

__ctor_Int:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -4
li $t0 3
sll $t0 $t0 2
la $t1 prototype_table
add $t1 $t1 $t0
lw $t1 0($t1)
lw $a0 4($t1)
sll $a0 $a0 2
jal allocate
move $a2 $a0
move $a0 $t1
move $a1 $v0
jal copy
sw $v0 -12($fp)
lw $t0 -12($fp)
lw $t1 0($fp)
sw $t1 12($t0)
lw $v0 -12($fp)
addi $sp $sp 4
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

__ctor_Bool:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -4
li $t0 4
sll $t0 $t0 2
la $t1 prototype_table
add $t1 $t1 $t0
lw $t1 0($t1)
lw $a0 4($t1)
sll $a0 $a0 2
jal allocate
move $a2 $a0
move $a0 $t1
move $a1 $v0
jal copy
sw $v0 -12($fp)
lw $t0 -12($fp)
lw $t1 0($fp)
sw $t1 12($t0)
lw $v0 -12($fp)
addi $sp $sp 4
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

main:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -4
jal __ctor_Main
sw $v0 -12($fp)
lw $t0 -12($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal function_main_at_Main
addi $sp $sp 4
sw $v0 -12($fp)
li $v0 0
addi $sp $sp 4
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
li $v0 10
syscall

__attributes_ctor_CellularAutomaton:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -4
la $t0 data_9
sw $t0 -12($fp)
lw $t0 -12($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_String
addi $sp $sp 4
sw $v0 -12($fp)
lw $t0 0($fp)
lw $t1 -12($fp)
sw $t1 12($t0)
lw $v0 0($fp)
addi $sp $sp 4
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_init_at_CellularAutomaton:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp 0
lw $t0 0($fp)
lw $t1 4($fp)
addi $t1 $t1 12
sw $t0 0($t1)
lw $v0 4($fp)
addi $sp $sp 0
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_print_at_CellularAutomaton:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -24
la $t0 data_12
sw $t0 -32($fp)
lw $t0 -32($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_String
addi $sp $sp 4
sw $v0 -28($fp)
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
li $t1 0
seq $t0 $t0 $t1
sw $t0 -24($fp)
lw $t0 -24($fp)
bne $t0 $zero label_3
j label_4
label_3:
li $v0 4
la $a0 data_13
syscall
li $v0 10
syscall
label_4:
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 -28($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 16($t0)
jalr $ra $t0
addi $sp $sp 8
sw $v0 -20($fp)
lw $t0 0($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -16($fp)
lw $t0 -16($fp)
bne $t0 $zero label_5
j label_6
label_5:
li $v0 4
la $a0 data_14
syscall
li $v0 10
syscall
label_6:
lw $t0 0($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 -20($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 24($t0)
jalr $ra $t0
addi $sp $sp 8
sw $v0 -12($fp)
lw $v0 0($fp)
addi $sp $sp 24
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_num_cells_at_CellularAutomaton:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -8
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
li $t1 0
seq $t0 $t0 $t1
sw $t0 -16($fp)
lw $t0 -16($fp)
bne $t0 $zero label_7
j label_8
label_7:
li $v0 4
la $a0 data_15
syscall
li $v0 10
syscall
label_8:
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
addi $sp $sp -4
sw $t0 0($sp)
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 12($t0)
jalr $ra $t0
addi $sp $sp 4
sw $v0 -12($fp)
lw $v0 -12($fp)
addi $sp $sp 8
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_cell_at_CellularAutomaton:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -12
li $t0 1
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -20($fp)
lw $t4 4($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
li $t1 0
seq $t0 $t0 $t1
sw $t0 -16($fp)
lw $t0 -16($fp)
bne $t0 $zero label_9
j label_10
label_9:
li $v0 4
la $a0 data_16
syscall
li $v0 10
syscall
label_10:
lw $t4 4($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 -20($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t4 4($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 20($t0)
jalr $ra $t0
addi $sp $sp 12
sw $v0 -12($fp)
lw $v0 -12($fp)
addi $sp $sp 12
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_cell_left_neighbor_at_CellularAutomaton:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -112
li $t0 0
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -76($fp)
lw $t0 0($fp)
lw $t1 0($t0)
sll $t1 $t1 2
la $t0 types_table
add $t0 $t0 $t1
lw $t1 0($t0)
sw $t1 -104($fp)
la $t0 types_table
addi $t0 $t0 12
lw $t0 0($t0)
sw $t0 -96($fp)
la $t0 types_table
addi $t0 $t0 8
lw $t0 0($t0)
sw $t0 -88($fp)
la $t0 types_table
addi $t0 $t0 16
lw $t0 0($t0)
sw $t0 -92($fp)
lw $t0 -104($fp)
lw $t1 -96($fp)
seq $t0 $t0 $t1
sw $t0 -84($fp)
lw $t0 -84($fp)
bne $t0 $zero label_11
lw $t0 -104($fp)
lw $t1 -88($fp)
seq $t0 $t0 $t1
sw $t0 -84($fp)
lw $t0 -84($fp)
bne $t0 $zero label_12
lw $t0 -104($fp)
lw $t1 -92($fp)
seq $t0 $t0 $t1
sw $t0 -84($fp)
lw $t0 -84($fp)
bne $t0 $zero label_13
lw $t0 0($fp)
lw $t1 -76($fp)
seq $t0 $t0 $t1
sw $t0 -80($fp)
j label_14
label_11:
lw $t0 0($fp)
lw $t1 12($t0)
sw $t1 -108($fp)
lw $t0 -76($fp)
lw $t1 12($t0)
sw $t1 -100($fp)
lw $t0 -108($fp)
lw $t1 -100($fp)
seq $t0 $t0 $t1
sw $t0 -80($fp)
j label_14
label_12:
lw $t0 0($fp)
lw $t1 12($t0)
sw $t1 -108($fp)
lw $t0 -76($fp)
lw $t1 12($t0)
sw $t1 -100($fp)
lw $t0 -108($fp)
move $a0 $t0
lw $t0 -100($fp)
move $a1 $t0
jal equal_str
sw $v0 -80($fp)
j label_14
label_13:
lw $t0 0($fp)
lw $t1 12($t0)
sw $t1 -108($fp)
lw $t0 -76($fp)
lw $t1 12($t0)
sw $t1 -100($fp)
lw $t0 -108($fp)
lw $t1 -100($fp)
seq $t0 $t0 $t1
sw $t0 -80($fp)
j label_14
label_14:
lw $t0 -80($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Bool
addi $sp $sp 4
sw $v0 -112($fp)
lw $t0 -112($fp)
lw $t1 12($t0)
sw $t1 -116($fp)
lw $t0 -116($fp)
bne $t0 $zero label_17
lw $t0 0($fp)
lw $t1 12($t0)
sw $t1 -68($fp)
li $t0 1
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -56($fp)
lw $t0 -56($fp)
lw $t1 12($t0)
sw $t1 -64($fp)
lw $t0 -68($fp)
lw $t1 -64($fp)
sub $t0 $t0 $t1
sw $t0 -60($fp)
lw $t0 -60($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -72($fp)
lw $t0 4($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -52($fp)
lw $t0 -52($fp)
bne $t0 $zero label_15
j label_16
label_15:
li $v0 4
la $a0 data_17
syscall
li $v0 10
syscall
label_16:
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 -72($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 28($t0)
jalr $ra $t0
addi $sp $sp 8
sw $v0 -48($fp)
lw $t0 -48($fp)
sw $t0 -120($fp)
j label_22
label_17:
lw $t0 4($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -28($fp)
lw $t0 -28($fp)
bne $t0 $zero label_18
j label_19
label_18:
li $v0 4
la $a0 data_18
syscall
li $v0 10
syscall
label_19:
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 52($t0)
jalr $ra $t0
addi $sp $sp 4
sw $v0 -24($fp)
lw $t0 -24($fp)
lw $t1 12($t0)
sw $t1 -40($fp)
li $t0 1
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -20($fp)
lw $t0 -20($fp)
lw $t1 12($t0)
sw $t1 -36($fp)
lw $t0 -40($fp)
lw $t1 -36($fp)
sub $t0 $t0 $t1
sw $t0 -32($fp)
lw $t0 -32($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -44($fp)
lw $t0 4($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -16($fp)
lw $t0 -16($fp)
bne $t0 $zero label_20
j label_21
label_20:
li $v0 4
la $a0 data_19
syscall
li $v0 10
syscall
label_21:
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 -44($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 28($t0)
jalr $ra $t0
addi $sp $sp 8
sw $v0 -12($fp)
lw $t0 -12($fp)
sw $t0 -120($fp)
label_22:
lw $v0 -120($fp)
addi $sp $sp 112
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_cell_right_neighbor_at_CellularAutomaton:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -112
lw $t0 4($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -60($fp)
lw $t0 -60($fp)
bne $t0 $zero label_23
j label_24
label_23:
li $v0 4
la $a0 data_20
syscall
li $v0 10
syscall
label_24:
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 52($t0)
jalr $ra $t0
addi $sp $sp 4
sw $v0 -56($fp)
lw $t0 -56($fp)
lw $t1 12($t0)
sw $t1 -72($fp)
li $t0 1
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -52($fp)
lw $t0 -52($fp)
lw $t1 12($t0)
sw $t1 -68($fp)
lw $t0 -72($fp)
lw $t1 -68($fp)
sub $t0 $t0 $t1
sw $t0 -64($fp)
lw $t0 -64($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -76($fp)
lw $t0 0($fp)
lw $t1 0($t0)
sll $t1 $t1 2
la $t0 types_table
add $t0 $t0 $t1
lw $t1 0($t0)
sw $t1 -104($fp)
la $t0 types_table
addi $t0 $t0 12
lw $t0 0($t0)
sw $t0 -96($fp)
la $t0 types_table
addi $t0 $t0 8
lw $t0 0($t0)
sw $t0 -88($fp)
la $t0 types_table
addi $t0 $t0 16
lw $t0 0($t0)
sw $t0 -92($fp)
lw $t0 -104($fp)
lw $t1 -96($fp)
seq $t0 $t0 $t1
sw $t0 -84($fp)
lw $t0 -84($fp)
bne $t0 $zero label_25
lw $t0 -104($fp)
lw $t1 -88($fp)
seq $t0 $t0 $t1
sw $t0 -84($fp)
lw $t0 -84($fp)
bne $t0 $zero label_26
lw $t0 -104($fp)
lw $t1 -92($fp)
seq $t0 $t0 $t1
sw $t0 -84($fp)
lw $t0 -84($fp)
bne $t0 $zero label_27
lw $t0 0($fp)
lw $t1 -76($fp)
seq $t0 $t0 $t1
sw $t0 -80($fp)
j label_28
label_25:
lw $t0 0($fp)
lw $t1 12($t0)
sw $t1 -108($fp)
lw $t0 -76($fp)
lw $t1 12($t0)
sw $t1 -100($fp)
lw $t0 -108($fp)
lw $t1 -100($fp)
seq $t0 $t0 $t1
sw $t0 -80($fp)
j label_28
label_26:
lw $t0 0($fp)
lw $t1 12($t0)
sw $t1 -108($fp)
lw $t0 -76($fp)
lw $t1 12($t0)
sw $t1 -100($fp)
lw $t0 -108($fp)
move $a0 $t0
lw $t0 -100($fp)
move $a1 $t0
jal equal_str
sw $v0 -80($fp)
j label_28
label_27:
lw $t0 0($fp)
lw $t1 12($t0)
sw $t1 -108($fp)
lw $t0 -76($fp)
lw $t1 12($t0)
sw $t1 -100($fp)
lw $t0 -108($fp)
lw $t1 -100($fp)
seq $t0 $t0 $t1
sw $t0 -80($fp)
j label_28
label_28:
lw $t0 -80($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Bool
addi $sp $sp 4
sw $v0 -112($fp)
lw $t0 -112($fp)
lw $t1 12($t0)
sw $t1 -116($fp)
lw $t0 -116($fp)
bne $t0 $zero label_31
lw $t0 0($fp)
lw $t1 12($t0)
sw $t1 -44($fp)
li $t0 1
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -32($fp)
lw $t0 -32($fp)
lw $t1 12($t0)
sw $t1 -40($fp)
lw $t0 -44($fp)
lw $t1 -40($fp)
add $t0 $t0 $t1
sw $t0 -36($fp)
lw $t0 -36($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -48($fp)
lw $t0 4($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -28($fp)
lw $t0 -28($fp)
bne $t0 $zero label_29
j label_30
label_29:
li $v0 4
la $a0 data_21
syscall
li $v0 10
syscall
label_30:
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 -48($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 28($t0)
jalr $ra $t0
addi $sp $sp 8
sw $v0 -24($fp)
lw $t0 -24($fp)
sw $t0 -120($fp)
j label_34
label_31:
li $t0 0
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -20($fp)
lw $t0 4($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -16($fp)
lw $t0 -16($fp)
bne $t0 $zero label_32
j label_33
label_32:
li $v0 4
la $a0 data_22
syscall
li $v0 10
syscall
label_33:
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 -20($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 28($t0)
jalr $ra $t0
addi $sp $sp 8
sw $v0 -12($fp)
lw $t0 -12($fp)
sw $t0 -120($fp)
label_34:
lw $v0 -120($fp)
addi $sp $sp 112
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_cell_at_next_evolution_at_CellularAutomaton:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -300
lw $t0 4($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -188($fp)
lw $t0 -188($fp)
bne $t0 $zero label_35
j label_36
label_35:
li $v0 4
la $a0 data_23
syscall
li $v0 10
syscall
label_36:
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 28($t0)
jalr $ra $t0
addi $sp $sp 8
sw $v0 -184($fp)
la $t0 data_24
sw $t0 -180($fp)
lw $t0 -180($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_String
addi $sp $sp 4
sw $v0 -176($fp)
lw $t0 -184($fp)
lw $t1 0($t0)
sll $t1 $t1 2
la $t0 types_table
add $t0 $t0 $t1
lw $t1 0($t0)
sw $t1 -216($fp)
la $t0 types_table
addi $t0 $t0 12
lw $t0 0($t0)
sw $t0 -208($fp)
la $t0 types_table
addi $t0 $t0 8
lw $t0 0($t0)
sw $t0 -200($fp)
la $t0 types_table
addi $t0 $t0 16
lw $t0 0($t0)
sw $t0 -204($fp)
lw $t0 -216($fp)
lw $t1 -208($fp)
seq $t0 $t0 $t1
sw $t0 -196($fp)
lw $t0 -196($fp)
bne $t0 $zero label_37
lw $t0 -216($fp)
lw $t1 -200($fp)
seq $t0 $t0 $t1
sw $t0 -196($fp)
lw $t0 -196($fp)
bne $t0 $zero label_38
lw $t0 -216($fp)
lw $t1 -204($fp)
seq $t0 $t0 $t1
sw $t0 -196($fp)
lw $t0 -196($fp)
bne $t0 $zero label_39
lw $t0 -184($fp)
lw $t1 -176($fp)
seq $t0 $t0 $t1
sw $t0 -192($fp)
j label_40
label_37:
lw $t0 -184($fp)
lw $t1 12($t0)
sw $t1 -220($fp)
lw $t0 -176($fp)
lw $t1 12($t0)
sw $t1 -212($fp)
lw $t0 -220($fp)
lw $t1 -212($fp)
seq $t0 $t0 $t1
sw $t0 -192($fp)
j label_40
label_38:
lw $t0 -184($fp)
lw $t1 12($t0)
sw $t1 -220($fp)
lw $t0 -176($fp)
lw $t1 12($t0)
sw $t1 -212($fp)
lw $t0 -220($fp)
move $a0 $t0
lw $t0 -212($fp)
move $a1 $t0
jal equal_str
sw $v0 -192($fp)
j label_40
label_39:
lw $t0 -184($fp)
lw $t1 12($t0)
sw $t1 -220($fp)
lw $t0 -176($fp)
lw $t1 12($t0)
sw $t1 -212($fp)
lw $t0 -220($fp)
lw $t1 -212($fp)
seq $t0 $t0 $t1
sw $t0 -192($fp)
j label_40
label_40:
lw $t0 -192($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Bool
addi $sp $sp 4
sw $v0 -224($fp)
lw $t0 -224($fp)
lw $t1 12($t0)
sw $t1 -228($fp)
lw $t0 -228($fp)
bne $t0 $zero label_41
li $t0 0
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -172($fp)
lw $t0 -172($fp)
sw $t0 -232($fp)
j label_42
label_41:
li $t0 1
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -168($fp)
lw $t0 -168($fp)
sw $t0 -232($fp)
label_42:
lw $t0 -232($fp)
lw $t1 12($t0)
sw $t1 -244($fp)
lw $t0 4($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -120($fp)
lw $t0 -120($fp)
bne $t0 $zero label_43
j label_44
label_43:
li $v0 4
la $a0 data_25
syscall
li $v0 10
syscall
label_44:
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 36($t0)
jalr $ra $t0
addi $sp $sp 8
sw $v0 -116($fp)
la $t0 data_26
sw $t0 -112($fp)
lw $t0 -112($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_String
addi $sp $sp 4
sw $v0 -108($fp)
lw $t0 -116($fp)
lw $t1 0($t0)
sll $t1 $t1 2
la $t0 types_table
add $t0 $t0 $t1
lw $t1 0($t0)
sw $t1 -148($fp)
la $t0 types_table
addi $t0 $t0 12
lw $t0 0($t0)
sw $t0 -140($fp)
la $t0 types_table
addi $t0 $t0 8
lw $t0 0($t0)
sw $t0 -132($fp)
la $t0 types_table
addi $t0 $t0 16
lw $t0 0($t0)
sw $t0 -136($fp)
lw $t0 -148($fp)
lw $t1 -140($fp)
seq $t0 $t0 $t1
sw $t0 -128($fp)
lw $t0 -128($fp)
bne $t0 $zero label_45
lw $t0 -148($fp)
lw $t1 -132($fp)
seq $t0 $t0 $t1
sw $t0 -128($fp)
lw $t0 -128($fp)
bne $t0 $zero label_46
lw $t0 -148($fp)
lw $t1 -136($fp)
seq $t0 $t0 $t1
sw $t0 -128($fp)
lw $t0 -128($fp)
bne $t0 $zero label_47
lw $t0 -116($fp)
lw $t1 -108($fp)
seq $t0 $t0 $t1
sw $t0 -124($fp)
j label_48
label_45:
lw $t0 -116($fp)
lw $t1 12($t0)
sw $t1 -152($fp)
lw $t0 -108($fp)
lw $t1 12($t0)
sw $t1 -144($fp)
lw $t0 -152($fp)
lw $t1 -144($fp)
seq $t0 $t0 $t1
sw $t0 -124($fp)
j label_48
label_46:
lw $t0 -116($fp)
lw $t1 12($t0)
sw $t1 -152($fp)
lw $t0 -108($fp)
lw $t1 12($t0)
sw $t1 -144($fp)
lw $t0 -152($fp)
move $a0 $t0
lw $t0 -144($fp)
move $a1 $t0
jal equal_str
sw $v0 -124($fp)
j label_48
label_47:
lw $t0 -116($fp)
lw $t1 12($t0)
sw $t1 -152($fp)
lw $t0 -108($fp)
lw $t1 12($t0)
sw $t1 -144($fp)
lw $t0 -152($fp)
lw $t1 -144($fp)
seq $t0 $t0 $t1
sw $t0 -124($fp)
j label_48
label_48:
lw $t0 -124($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Bool
addi $sp $sp 4
sw $v0 -156($fp)
lw $t0 -156($fp)
lw $t1 12($t0)
sw $t1 -160($fp)
lw $t0 -160($fp)
bne $t0 $zero label_49
li $t0 0
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -104($fp)
lw $t0 -104($fp)
sw $t0 -164($fp)
j label_50
label_49:
li $t0 1
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -100($fp)
lw $t0 -100($fp)
sw $t0 -164($fp)
label_50:
lw $t0 -164($fp)
lw $t1 12($t0)
sw $t1 -240($fp)
lw $t0 -244($fp)
lw $t1 -240($fp)
add $t0 $t0 $t1
sw $t0 -236($fp)
lw $t0 -236($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -248($fp)
lw $t0 -248($fp)
lw $t1 12($t0)
sw $t1 -260($fp)
lw $t0 4($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -52($fp)
lw $t0 -52($fp)
bne $t0 $zero label_51
j label_52
label_51:
li $v0 4
la $a0 data_27
syscall
li $v0 10
syscall
label_52:
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 4($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 40($t0)
jalr $ra $t0
addi $sp $sp 8
sw $v0 -48($fp)
la $t0 data_28
sw $t0 -44($fp)
lw $t0 -44($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_String
addi $sp $sp 4
sw $v0 -40($fp)
lw $t0 -48($fp)
lw $t1 0($t0)
sll $t1 $t1 2
la $t0 types_table
add $t0 $t0 $t1
lw $t1 0($t0)
sw $t1 -80($fp)
la $t0 types_table
addi $t0 $t0 12
lw $t0 0($t0)
sw $t0 -72($fp)
la $t0 types_table
addi $t0 $t0 8
lw $t0 0($t0)
sw $t0 -64($fp)
la $t0 types_table
addi $t0 $t0 16
lw $t0 0($t0)
sw $t0 -68($fp)
lw $t0 -80($fp)
lw $t1 -72($fp)
seq $t0 $t0 $t1
sw $t0 -60($fp)
lw $t0 -60($fp)
bne $t0 $zero label_53
lw $t0 -80($fp)
lw $t1 -64($fp)
seq $t0 $t0 $t1
sw $t0 -60($fp)
lw $t0 -60($fp)
bne $t0 $zero label_54
lw $t0 -80($fp)
lw $t1 -68($fp)
seq $t0 $t0 $t1
sw $t0 -60($fp)
lw $t0 -60($fp)
bne $t0 $zero label_55
lw $t0 -48($fp)
lw $t1 -40($fp)
seq $t0 $t0 $t1
sw $t0 -56($fp)
j label_56
label_53:
lw $t0 -48($fp)
lw $t1 12($t0)
sw $t1 -84($fp)
lw $t0 -40($fp)
lw $t1 12($t0)
sw $t1 -76($fp)
lw $t0 -84($fp)
lw $t1 -76($fp)
seq $t0 $t0 $t1
sw $t0 -56($fp)
j label_56
label_54:
lw $t0 -48($fp)
lw $t1 12($t0)
sw $t1 -84($fp)
lw $t0 -40($fp)
lw $t1 12($t0)
sw $t1 -76($fp)
lw $t0 -84($fp)
move $a0 $t0
lw $t0 -76($fp)
move $a1 $t0
jal equal_str
sw $v0 -56($fp)
j label_56
label_55:
lw $t0 -48($fp)
lw $t1 12($t0)
sw $t1 -84($fp)
lw $t0 -40($fp)
lw $t1 12($t0)
sw $t1 -76($fp)
lw $t0 -84($fp)
lw $t1 -76($fp)
seq $t0 $t0 $t1
sw $t0 -56($fp)
j label_56
label_56:
lw $t0 -56($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Bool
addi $sp $sp 4
sw $v0 -88($fp)
lw $t0 -88($fp)
lw $t1 12($t0)
sw $t1 -92($fp)
lw $t0 -92($fp)
bne $t0 $zero label_57
li $t0 0
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -36($fp)
lw $t0 -36($fp)
sw $t0 -96($fp)
j label_58
label_57:
li $t0 1
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -32($fp)
lw $t0 -32($fp)
sw $t0 -96($fp)
label_58:
lw $t0 -96($fp)
lw $t1 12($t0)
sw $t1 -256($fp)
lw $t0 -260($fp)
lw $t1 -256($fp)
add $t0 $t0 $t1
sw $t0 -252($fp)
lw $t0 -252($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -264($fp)
li $t0 1
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -28($fp)
lw $t0 -264($fp)
lw $t1 0($t0)
sll $t1 $t1 2
la $t0 types_table
add $t0 $t0 $t1
lw $t1 0($t0)
sw $t1 -292($fp)
la $t0 types_table
addi $t0 $t0 12
lw $t0 0($t0)
sw $t0 -284($fp)
la $t0 types_table
addi $t0 $t0 8
lw $t0 0($t0)
sw $t0 -276($fp)
la $t0 types_table
addi $t0 $t0 16
lw $t0 0($t0)
sw $t0 -280($fp)
lw $t0 -292($fp)
lw $t1 -284($fp)
seq $t0 $t0 $t1
sw $t0 -272($fp)
lw $t0 -272($fp)
bne $t0 $zero label_59
lw $t0 -292($fp)
lw $t1 -276($fp)
seq $t0 $t0 $t1
sw $t0 -272($fp)
lw $t0 -272($fp)
bne $t0 $zero label_60
lw $t0 -292($fp)
lw $t1 -280($fp)
seq $t0 $t0 $t1
sw $t0 -272($fp)
lw $t0 -272($fp)
bne $t0 $zero label_61
lw $t0 -264($fp)
lw $t1 -28($fp)
seq $t0 $t0 $t1
sw $t0 -268($fp)
j label_62
label_59:
lw $t0 -264($fp)
lw $t1 12($t0)
sw $t1 -296($fp)
lw $t0 -28($fp)
lw $t1 12($t0)
sw $t1 -288($fp)
lw $t0 -296($fp)
lw $t1 -288($fp)
seq $t0 $t0 $t1
sw $t0 -268($fp)
j label_62
label_60:
lw $t0 -264($fp)
lw $t1 12($t0)
sw $t1 -296($fp)
lw $t0 -28($fp)
lw $t1 12($t0)
sw $t1 -288($fp)
lw $t0 -296($fp)
move $a0 $t0
lw $t0 -288($fp)
move $a1 $t0
jal equal_str
sw $v0 -268($fp)
j label_62
label_61:
lw $t0 -264($fp)
lw $t1 12($t0)
sw $t1 -296($fp)
lw $t0 -28($fp)
lw $t1 12($t0)
sw $t1 -288($fp)
lw $t0 -296($fp)
lw $t1 -288($fp)
seq $t0 $t0 $t1
sw $t0 -268($fp)
j label_62
label_62:
lw $t0 -268($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Bool
addi $sp $sp 4
sw $v0 -300($fp)
lw $t0 -300($fp)
lw $t1 12($t0)
sw $t1 -304($fp)
lw $t0 -304($fp)
bne $t0 $zero label_63
la $t0 data_29
sw $t0 -24($fp)
lw $t0 -24($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_String
addi $sp $sp 4
sw $v0 -20($fp)
lw $t0 -20($fp)
sw $t0 -308($fp)
j label_64
label_63:
la $t0 data_30
sw $t0 -16($fp)
lw $t0 -16($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_String
addi $sp $sp 4
sw $v0 -12($fp)
lw $t0 -12($fp)
sw $t0 -308($fp)
label_64:
lw $v0 -308($fp)
addi $sp $sp 300
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_evolve_at_CellularAutomaton:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -76
li $t0 0
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -84($fp)
lw $t0 0($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -76($fp)
lw $t0 -76($fp)
bne $t0 $zero label_65
j label_66
label_65:
li $v0 4
la $a0 data_31
syscall
li $v0 10
syscall
label_66:
lw $t0 0($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 52($t0)
jalr $ra $t0
addi $sp $sp 4
sw $v0 -72($fp)
lw $t0 -72($fp)
sw $t0 -80($fp)
la $t0 data_9
sw $t0 -68($fp)
lw $t0 -68($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_String
addi $sp $sp 4
sw $v0 -68($fp)
label_67:
lw $t0 -84($fp)
lw $t1 12($t0)
sw $t1 -56($fp)
lw $t0 -80($fp)
lw $t1 12($t0)
sw $t1 -52($fp)
lw $t0 -56($fp)
lw $t1 -52($fp)
slt $t1 $t0 $t1
sw $t1 -48($fp)
lw $t0 -48($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Bool
addi $sp $sp 4
sw $v0 -60($fp)
lw $t0 -60($fp)
lw $t1 12($t0)
sw $t1 -64($fp)
lw $t0 -64($fp)
bne $t0 $zero label_68
j label_73
label_68:
lw $t0 0($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -44($fp)
lw $t0 -44($fp)
bne $t0 $zero label_69
j label_70
label_69:
li $v0 4
la $a0 data_32
syscall
li $v0 10
syscall
label_70:
lw $t0 0($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 -84($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 32($t0)
jalr $ra $t0
addi $sp $sp 8
sw $v0 -40($fp)
lw $t0 -68($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -36($fp)
lw $t0 -36($fp)
bne $t0 $zero label_71
j label_72
label_71:
li $v0 4
la $a0 data_33
syscall
li $v0 10
syscall
label_72:
lw $t0 -68($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 -40($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 -68($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 16($t0)
jalr $ra $t0
addi $sp $sp 8
sw $v0 -32($fp)
lw $t0 -32($fp)
sw $t0 -68($fp)
lw $t0 -84($fp)
lw $t1 12($t0)
sw $t1 -24($fp)
li $t0 1
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -12($fp)
lw $t0 -12($fp)
lw $t1 12($t0)
sw $t1 -20($fp)
lw $t0 -24($fp)
lw $t1 -20($fp)
add $t0 $t0 $t1
sw $t0 -16($fp)
lw $t0 -16($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -28($fp)
lw $t0 -28($fp)
sw $t0 -84($fp)
j label_67
label_73:
lw $t0 -68($fp)
lw $t1 0($fp)
addi $t1 $t1 12
sw $t0 0($t1)
lw $v0 0($fp)
addi $sp $sp 76
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

__ctor_CellularAutomaton:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -8
li $t0 5
sll $t0 $t0 2
la $t1 prototype_table
add $t1 $t1 $t0
lw $t1 0($t1)
lw $a0 4($t1)
sll $a0 $a0 2
jal allocate
move $a2 $a0
move $a0 $t1
move $a1 $v0
jal copy
sw $v0 -16($fp)
lw $t0 -16($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __attributes_ctor_CellularAutomaton
addi $sp $sp 4
sw $v0 -12($fp)
lw $v0 -12($fp)
addi $sp $sp 8
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

__attributes_ctor_Main:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -4
lw $t0 0($fp)
lw $t1 -12($fp)
sw $t1 12($t0)
lw $v0 0($fp)
addi $sp $sp 4
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

function_main_at_Main:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -96
la $t0 data_34
sw $t0 -104($fp)
lw $t0 -104($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_String
addi $sp $sp 4
sw $v0 -100($fp)
jal __ctor_CellularAutomaton
sw $v0 -96($fp)
lw $t0 -96($fp)
li $t1 0
seq $t0 $t0 $t1
sw $t0 -92($fp)
lw $t0 -92($fp)
bne $t0 $zero label_74
j label_75
label_74:
li $v0 4
la $a0 data_35
syscall
li $v0 10
syscall
label_75:
lw $t0 -96($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 -100($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 -96($fp)
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 48($t0)
jalr $ra $t0
addi $sp $sp 8
sw $v0 -88($fp)
lw $t0 -88($fp)
lw $t1 0($fp)
addi $t1 $t1 12
sw $t0 0($t1)
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
li $t1 0
seq $t0 $t0 $t1
sw $t0 -84($fp)
lw $t0 -84($fp)
bne $t0 $zero label_76
j label_77
label_76:
li $v0 4
la $a0 data_36
syscall
li $v0 10
syscall
label_77:
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
addi $sp $sp -4
sw $t0 0($sp)
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 56($t0)
jalr $ra $t0
addi $sp $sp 4
sw $v0 -80($fp)
li $t0 20
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -72($fp)
lw $t0 -72($fp)
sw $t0 -76($fp)
label_78:
li $t0 0
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -48($fp)
lw $t0 -48($fp)
lw $t1 12($t0)
sw $t1 -60($fp)
lw $t0 -76($fp)
lw $t1 12($t0)
sw $t1 -56($fp)
lw $t0 -60($fp)
lw $t1 -56($fp)
slt $t1 $t0 $t1
sw $t1 -52($fp)
lw $t0 -52($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Bool
addi $sp $sp 4
sw $v0 -64($fp)
lw $t0 -64($fp)
lw $t1 12($t0)
sw $t1 -68($fp)
lw $t0 -68($fp)
bne $t0 $zero label_79
j label_84
label_79:
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
li $t1 0
seq $t0 $t0 $t1
sw $t0 -44($fp)
lw $t0 -44($fp)
bne $t0 $zero label_80
j label_81
label_80:
li $v0 4
la $a0 data_37
syscall
li $v0 10
syscall
label_81:
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
addi $sp $sp -4
sw $t0 0($sp)
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 44($t0)
jalr $ra $t0
addi $sp $sp 4
sw $v0 -40($fp)
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
li $t1 0
seq $t0 $t0 $t1
sw $t0 -36($fp)
lw $t0 -36($fp)
bne $t0 $zero label_82
j label_83
label_82:
li $v0 4
la $a0 data_38
syscall
li $v0 10
syscall
label_83:
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
addi $sp $sp -4
sw $t0 0($sp)
lw $t4 0($fp)
lw $t4 12($t4)
addi $sp $sp -4
sw $t4 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
addi $sp $sp -4
sw $t0 0($sp)
lw $t0 0($sp)
addi $sp $sp 4
lw $t0 8($t0)
lw $t0 56($t0)
jalr $ra $t0
addi $sp $sp 4
sw $v0 -32($fp)
lw $t0 -76($fp)
lw $t1 12($t0)
sw $t1 -24($fp)
li $t0 1
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -12($fp)
lw $t0 -12($fp)
lw $t1 12($t0)
sw $t1 -20($fp)
lw $t0 -24($fp)
lw $t1 -20($fp)
sub $t0 $t0 $t1
sw $t0 -16($fp)
lw $t0 -16($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __ctor_Int
addi $sp $sp 4
sw $v0 -28($fp)
lw $t0 -28($fp)
sw $t0 -76($fp)
j label_78
label_84:
lw $v0 0($fp)
addi $sp $sp 96
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra

__ctor_Main:
addi $sp $sp -4
sw $ra 0($sp)
addi $sp $sp -4
sw $fp 0($sp)
addi $fp $sp 8
addi $sp $sp -8
li $t0 6
sll $t0 $t0 2
la $t1 prototype_table
add $t1 $t1 $t0
lw $t1 0($t1)
lw $a0 4($t1)
sll $a0 $a0 2
jal allocate
move $a2 $a0
move $a0 $t1
move $a1 $v0
jal copy
sw $v0 -16($fp)
lw $t0 -16($fp)
addi $sp $sp -4
sw $t0 0($sp)
jal __attributes_ctor_Main
addi $sp $sp 4
sw $v0 -12($fp)
lw $v0 -12($fp)
addi $sp $sp 8
lw $fp 0($sp)
addi $sp $sp 4
lw $ra 0($sp)
addi $sp $sp 4
jr $ra



equal_str:
addiu $sp $sp -24
sw $t0 0($sp)
sw $t1 4($sp)
sw $a0 8($sp)
sw $a1 12($sp)
sw $t2 16($sp)
sw $t3 20($sp)
move $t0 $a0
move $t1 $a1
while_equal_str:
lb $t2 0($t0)
lb $t3 0($t1)
bne $t2 $t3 equal_str_different_strings
beq $t2 $zero first_end_equal_str
beq $t3 $zero second_end_equal_str
addi $t1 $t1 1
addi $t0 $t0 1
j while_equal_str
equal_str_different_strings:
move $v0 $zero
j equal_str_end
first_end_equal_str:
beq $t3 $zero second_end_equal_str
move $v0 $zero
j equal_str_end
second_end_equal_str:
li $v0 1
equal_str_end:
lw $t0 0($sp)
lw $t1 4($sp)
lw $a0 8($sp)
lw $a1 12($sp)
lw $t2 16($sp)
lw $t3 20($sp)
addiu $sp $sp 24
jr $ra

allocate:
addiu $sp $sp -12
sw $a0 0($sp)
sw $t0 4($sp)
sw $t1 8($sp)
li $t0 4
div $a0 $t0
mfhi $t1
sub $t0 $t0 $t1
add $a0 $a0 $t0
li $v0 9
syscall
lw $a0 0($sp)
lw $t0 4($sp)
lw $t1 8($sp)
addiu $sp $sp 12
jr $ra

copy:
addiu $sp $sp -16
sw $a0 0($sp)
sw $a1 4($sp)
sw $a2 8($sp)
sw $t0 12($sp)
while_copy:
beq $a2 $zero copy_end
lw $t0 0($a0)
sw $t0 0($a1)
addiu $a0 $a0 4
addiu $a1 $a1 4
addi $a2 $a2 -4
j while_copy
copy_end:
lw $a0 0($sp)
lw $a1 4($sp)
lw $a2 8($sp)
lw $t0 12($sp)
addiu $sp $sp 16
jr $ra

read_string:
addiu $sp $sp -28
sw $ra 0($sp)
sw $t0 4($sp)
sw $t1 8($sp)
sw $a0 12($sp)
sw $a1 16($sp)
sw $a2 20($sp)
sw $t2 24($sp)
li $t0 8
addi $a0 $t0 4
jal allocate
move $t1 $v0
move $t2 $zero
while_read_string:
addu $a0 $t1 $t2
subu $a1 $t0 $t2
addu $t2 $t2 $a1
jal read_string_up_to
beq $v0 $zero read_string_not_finished
move $v0 $t1
j end_read_string
read_string_not_finished:
sll $t0 $t0 1
addi $a0 $t0 4
jal allocate
move $a0 $t1
move $t1 $v0
move $a1 $v0
move $a2 $t2
jal copy
j while_read_string
end_read_string:
lw $ra 0($sp)
lw $t0 4($sp)
lw $t1 8($sp)
lw $a0 12($sp)
lw $a1 16($sp)
lw $a2 20($sp)
lw $t2 24($sp)
addiu $sp $sp 28
jr $ra
read_string_up_to:
addiu $sp $sp -28
sw $ra 0($sp)
sw $t0 4($sp)
sw $t1 8($sp)
sw $t2 12($sp)
sw $t3 16($sp)
sw $t4 20($sp)
sw $t5 24($sp)
move $t0 $a0
move $t1 $zero
li $t2 10
addu $t3 $t0 $a1
addiu $a1 $a1 1
li $v0 8
syscall
lw $a0 0($a0)
beq $a0 $zero eol_terminated
li $v0 0
eol_check:
beq $t0 $t3 read_loop_continue
lb $t1 0($t0)
beq $t1 $t2 eol_terminated
addiu $t0 $t0 1
j eol_check
eol_terminated:
sb $zero 0($t0)
li $v0 1
read_loop_continue:
lw $ra 0($sp)
lw $t0 4($sp)
lw $t1 8($sp)
lw $t2 12($sp)
lw $t3 16($sp)
lw $t4 20($sp)
lw $t5 24($sp)
addiu $sp $sp 28
jr $ra

substr:
addiu $sp $sp -32
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $t3 12($sp)
sw $a0 16($sp)
sw $a1 20($sp)
sw $a2 24($sp)
sw $ra 28($sp)
move $t0 $a0
add $t0 $t0 $a1
li $t1 4
div $a2 $t1
mfhi $t2
bne $t2 $zero substr_allign_size
move $t1 $a2
j substr_new_chunk
substr_allign_size:
sub $t1 $t1 $t2
add $t1 $t1 $a2
substr_new_chunk:
move $a0 $t1
jal allocate
move $t3 $v0
move $t1 $zero
while_substr_copy:
beq $t1 $a2 substr_end
lb $t2 0($t0)
sb $t2 0($t3)
addiu $t0 $t0 1
addiu $t3 $t3 1
addiu $t1 $t1 1
j while_substr_copy
substr_end:
sb $zero 0($t3)
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $t3 12($sp)
lw $a0 16($sp)
lw $a1 20($sp)
lw $a2 24($sp)
lw $ra 28($sp)
addiu $sp $sp 32
jr $ra

concat:
addiu $sp $sp -24
sw $t0 0($sp)
sw $t1 4($sp)
sw $t2 8($sp)
sw $a0 12($sp)
sw $a1 16($sp)
sw $ra 20($sp)
move $t0 $a0
move $t1 $a1
addiu $a0 $a2 1
li $t2 4
div $a0 $t2
mfhi $a0
bne $a0 $zero concat_allign_size
addiu $a0 $a2 1
j concat_size_allignned
concat_allign_size:
sub $t2 $t2 $a0
add $a0 $a2 $t2
addiu $a0 $a0 1
concat_size_allignned:
jal allocate
move $t2 $v0
j first_while_concat_copy
first_while_concat_copy:
lb $a0 0($t0)
beq $a0 $zero second_while_concat_copy
sb $a0 0($t2)
addiu $t0 $t0 1
addiu $t2 $t2 1
j first_while_concat_copy
second_while_concat_copy:
lb $a0 0($t1)
beq $a0 $zero concat_end
sb $a0 0($t2)
addiu $t1 $t1 1
addiu $t2 $t2 1
j second_while_concat_copy
concat_end:
sb $zero 0($t2)
lw $t0 0($sp)
lw $t1 4($sp)
lw $t2 8($sp)
lw $a0 12($sp)
lw $a1 16($sp)
lw $ra 20($sp)
addiu $sp $sp 24
jr $ra

length:
addiu $sp $sp -8
sw $t0 0($sp)
sw $t1 4($sp)
move $t0 $a0
move $v0 $zero
while_len:
lb $t1 0($t0)
beq $t1 $zero len_end
addi $v0 $v0 1
addiu $t0 $t0 1
j while_len
len_end:
lw $t0 0($sp)
lw $t1 4($sp)
addiu $sp $sp 8
jr $ra