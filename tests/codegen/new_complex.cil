.types

  type Object {
    method Object_abort;
    method Object_type_name;
    method Object_copy;
  }
  type Int {
    method Object_abort;
    method Int_type_name;
    method Int_copy;
  }
  type Bool {
    method Object_abort;
    method Bool_type_name;
    method Bool_copy;
  }
  type String {
    method Object_abort;
    method String_type_name;
    method String_copy;
    method String_length;
    method String_concat;
    method String_substr;
  }
  type IO {
    method Object_abort;
    method IO_type_name;
    method IO_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
  }
  type Main {
    method Object_abort;
    method Main_type_name;
    method Main_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
    method Main_main;
  }
  type Complex {
    attribute x;
    attribute y;
    method Object_abort;
    method Complex_type_name;
    method Complex_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
    method Complex_init;
    method Complex_print;
    method Complex_reflect_0;
    method Complex_reflect_X;
    method Complex_reflect_Y;
    method Complex_equal;
    method Complex_x_value;
    method Complex_y_value;
  }

.data

  data_0_abort_msg = "Program Halted!";
  data_1_type_name_Object = "Object";
  data_2_type_name_Int = "Int";
  data_3_type_name_Bool = "Bool";
  data_4_type_name_String = "String";
  data_5_type_name_IO = "IO";
  data_6_type_name_Main = "Main";
  data_7_type_name_Complex = "Complex";
  data_8_sep_cat = " ++ ";
  data_9_eol = "\n";
  data_10_under = "_";
  data_11_meth = "init";
  data_12_meth = "reflect_X";
  data_13_meth = "reflect_0";
  data_14_string = "=)\n";
  data_15_meth = "out_string";
  data_16_string = "=(\n";
  data_17_meth = "reflect_Y";
  data_18_meth = "equal";
  data_19_meth = "out_int";
  data_20_string = "+";
  data_21_string = "I";
  data_22_meth = "x_value";
  data_23_meth = "y_value";

.code

  function Void___init {

    LOCAL local_self;

    local_self = ALLOCATE Void;
    RETURN local_self;
  }

  function main {

    LOCAL local_0;
    LOCAL local_1;

    local_0 = CALL Main___init;
    ARG local_0;
    local_1 = CALL Main_main;
  }

  function Object_abort {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_0_abort_msg;
    ARG local_0;
    local_1 = CALL String___init;
    print(str, local_1)
  }

  function Object_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_1_type_name_Object;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Object_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Object;
    RETURN local_copy;
  }

  function Int_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_2_type_name_Int;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Int_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Int;
    RETURN local_copy;
  }

  function Bool_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_3_type_name_Bool;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Bool_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Bool;
    RETURN local_copy;
  }

  function String_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_4_type_name_String;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function String_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE String;
    RETURN local_copy;
  }

  function IO_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_5_type_name_IO;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function IO_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE IO;
    RETURN local_copy;
  }

  function Main_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_6_type_name_Main;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Main_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Main;
    RETURN local_copy;
  }

  function Complex_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_7_type_name_Complex;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Complex_copy {
    PARAM param_self;

    LOCAL local_copy;
    LOCAL local_attr_copy;
    LOCAL local_attr_copy;

    local_copy = ALLOCATE Complex;
    local_attr_copy = GETATTR param_self 0;
    SETATTR local_copy 0 local_attr_copy;
    local_attr_copy = GETATTR param_self 1;
    SETATTR local_copy 1 local_attr_copy;
    RETURN local_copy;
  }

  function IO_out_string {
    PARAM param_self;
    PARAM param_str;


    print(str, param_str)
    RETURN param_self;
  }

  function IO_out_int {
    PARAM param_int;
    PARAM param_self;


    print(int, param_int)
    RETURN param_self;
  }

  function IO_in_string {
    PARAM param_self;

    LOCAL local_str;

    local_str = read(str)
    RETURN local_str;
  }

  function IO_in_int {
    PARAM param_self;

    LOCAL local_int;

    local_int = read(int)
    RETURN local_int;
  }

  function String_length {
    PARAM param_self;

    LOCAL local_str_attr;
    LOCAL local_length;
    LOCAL local_2;

    local_str_attr = GETATTR param_self 0;
    local_str_attr = length(local_length)
    ARG local_length;
    local_2 = CALL Int___init;
    RETURN local_2;
  }

  function String_concat {
    PARAM param_self;
    PARAM param_other;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_self_str_attr;
    LOCAL local_other_str_attr;
    LOCAL local_concat;
    LOCAL local_self_len;
    LOCAL local_other_len;
    LOCAL local_concat_len;
    LOCAL local_8;

    local_0 = LOAD data_8_sep_cat;
    ARG local_0;
    local_1 = CALL String___init;
    print(str, param_self)
    print(str, local_1)
    print(str, param_other)
    local_self_str_attr = GETATTR param_self 0;
    local_other_str_attr = GETATTR param_other 0;
    local_self_len = length(local_self_str_attr)
    local_other_len = length(local_other_str_attr)
    local_concat_len = local_self_len + local_other_len
    local_concat = concat(local_self_str_attr, local_other_str_attr, local_concat_len)
    ARG local_concat;
    local_8 = CALL String___init;
    RETURN local_8;
  }

  function String_substr {
    PARAM param_self;
    PARAM param_i;
    PARAM param_l;

    LOCAL local_self_str_local;
    LOCAL local_i_local;
    LOCAL local_l_local;
    LOCAL local_substr;
    LOCAL local_4;

    local_self_str_local = GETATTR param_self 0;
    local_i_local = GETATTR param_i 0;
    local_l_local = GETATTR param_l 0;
    local_substr = substr(local_self_str_local, local_i_local, local_l_local)
    ARG local_substr;
    local_4 = CALL String___init;
    RETURN local_4;
  }

  function Object___init {

    LOCAL local_self;

    local_self = ALLOCATE Object;
    RETURN local_self;
  }

  function Int___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE Int;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function Bool___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE Bool;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function String___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE String;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function Main___init {

    LOCAL local_self;

    local_self = ALLOCATE Main;
    RETURN local_self;
  }

  function Main_main {
    PARAM param_self;

    LOCAL local_c;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_tname_local;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_11;
    LOCAL local_12;
    LOCAL local_13;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_tname_local;
    LOCAL local_19;
    LOCAL local_20;
    LOCAL local_21;
    LOCAL local_22;
    LOCAL local_23;
    LOCAL local_24;
    LOCAL local_25;
    LOCAL local_26;
    LOCAL local_27;
    LOCAL local_tname_local;
    LOCAL local_29;
    LOCAL local_30;
    LOCAL local_31;
    LOCAL local_32;
    LOCAL local_33;
    LOCAL local_34;
    LOCAL local_35;
    LOCAL local_36;
    LOCAL local_37;
    LOCAL local_38;
    LOCAL local_39;
    LOCAL local_40;
    LOCAL local_41;
    LOCAL local_42;
    LOCAL local_43;
    LOCAL local_tname_local;
    LOCAL local_45;
    LOCAL local_46;
    LOCAL local_47;
    LOCAL local_48;
    LOCAL local_49;
    LOCAL local_50;
    LOCAL local_51;
    LOCAL local_52;
    LOCAL local_53;
    LOCAL local_54;
    LOCAL local_tname_local;
    LOCAL local_56;
    LOCAL local_57;
    LOCAL local_58;
    LOCAL local_59;
    LOCAL local_60;
    LOCAL local_61;
    LOCAL local_62;
    LOCAL local_63;
    LOCAL local_64;
    LOCAL local_65;
    LOCAL local_66;
    LOCAL local_tname_local;
    LOCAL local_68;
    LOCAL local_69;
    LOCAL local_70;
    LOCAL local_71;
    LOCAL local_72;
    LOCAL local_73;
    LOCAL local_74;
    LOCAL local_tname_local;
    LOCAL local_76;
    LOCAL local_77;
    LOCAL local_78;
    LOCAL local_79;
    LOCAL local_80;
    LOCAL local_81;
    LOCAL local_82;
    LOCAL local_83;
    LOCAL local_tname_local;
    LOCAL local_85;
    LOCAL local_86;
    LOCAL local_87;
    LOCAL local_88;
    LOCAL local_89;
    LOCAL local_90;
    LOCAL local_91;
    LOCAL local_tname_local;
    LOCAL local_93;
    LOCAL local_94;
    LOCAL local_95;
    LOCAL local_96;
    LOCAL local_97;
    LOCAL local_98;
    LOCAL local_99;
    LOCAL local_100;
    LOCAL local_101;
    LOCAL local_102;
    LOCAL local_103;
    LOCAL local_tname_local;
    LOCAL local_105;
    LOCAL local_106;
    LOCAL local_107;
    LOCAL local_108;
    LOCAL local_109;
    LOCAL local_110;
    LOCAL local_111;
    LOCAL local_112;
    LOCAL local_113;
    LOCAL local_114;
    LOCAL local_tname_local;
    LOCAL local_116;
    LOCAL local_117;
    LOCAL local_118;
    LOCAL local_119;
    LOCAL local_120;
    LOCAL local_121;

    local_2 = CALL Complex___init;
    local_3 = LOAD 1;
    ARG local_3;
    local_4 = CALL Int___init;
    local_5 = LOAD 1;
    ARG local_5;
    local_6 = CALL Int___init;
    local_7 = TYPEOF local_2;
    local_9 = LOAD data_9_eol;
    ARG local_9;
    local_10 = CALL String___init;
    local_11 = LOAD data_10_under;
    ARG local_11;
    local_12 = CALL String___init;
    local_13 = LOAD data_11_meth;
    ARG local_13;
    local_14 = CALL String___init;
    local_tname_local = VCALL local_7 1;
    print(str, local_tname_local)
    print(str, local_12)
    print(str, local_14)
    print(str, local_10)
    ARG local_2;
    ARG local_4;
    ARG local_6;
    local_1 = VCALL local_7 7;
    local_c = local_1;
    local_17 = TYPEOF local_c;
    local_19 = LOAD data_9_eol;
    ARG local_19;
    local_20 = CALL String___init;
    local_21 = LOAD data_10_under;
    ARG local_21;
    local_22 = CALL String___init;
    local_23 = LOAD data_12_meth;
    ARG local_23;
    local_24 = CALL String___init;
    local_tname_local = VCALL local_17 1;
    print(str, local_tname_local)
    print(str, local_22)
    print(str, local_24)
    print(str, local_20)
    ARG local_c;
    local_16 = VCALL local_17 10;
    local_25 = GETATTR local_16 0;
    local_27 = TYPEOF local_c;
    local_29 = LOAD data_9_eol;
    ARG local_29;
    local_30 = CALL String___init;
    local_31 = LOAD data_10_under;
    ARG local_31;
    local_32 = CALL String___init;
    local_33 = LOAD data_13_meth;
    ARG local_33;
    local_34 = CALL String___init;
    local_tname_local = VCALL local_27 1;
    print(str, local_tname_local)
    print(str, local_32)
    print(str, local_34)
    print(str, local_30)
    ARG local_c;
    local_26 = VCALL local_27 9;
    local_35 = GETATTR local_26 0;
    local_36 = local_25 - local_35
    local_36 = local_36 * local_36
    local_37 = LOAD 1;
    local_36 = local_37 - local_36
    ARG local_36;
    local_38 = CALL Bool___init;
    local_39 = GETATTR local_38 0;
    IF local_39 GOTO label_then_0;
    GOTO label_else_0;
    LABEL label_then_0;
    local_41 = LOAD data_14_string;
    ARG local_41;
    local_42 = CALL String___init;
    local_43 = TYPEOF param_self;
    local_45 = LOAD data_9_eol;
    ARG local_45;
    local_46 = CALL String___init;
    local_47 = LOAD data_10_under;
    ARG local_47;
    local_48 = CALL String___init;
    local_49 = LOAD data_15_meth;
    ARG local_49;
    local_50 = CALL String___init;
    local_tname_local = VCALL local_43 1;
    print(str, local_tname_local)
    print(str, local_48)
    print(str, local_50)
    print(str, local_46)
    ARG param_self;
    ARG local_42;
    local_40 = VCALL local_43 3;
    local_15 = local_40;
    GOTO label_continue_0;
    LABEL label_else_0;
    local_52 = LOAD data_16_string;
    ARG local_52;
    local_53 = CALL String___init;
    local_54 = TYPEOF param_self;
    local_56 = LOAD data_9_eol;
    ARG local_56;
    local_57 = CALL String___init;
    local_58 = LOAD data_10_under;
    ARG local_58;
    local_59 = CALL String___init;
    local_60 = LOAD data_15_meth;
    ARG local_60;
    local_61 = CALL String___init;
    local_tname_local = VCALL local_54 1;
    print(str, local_tname_local)
    print(str, local_59)
    print(str, local_61)
    print(str, local_57)
    ARG param_self;
    ARG local_53;
    local_51 = VCALL local_54 3;
    local_15 = local_51;
    LABEL label_continue_0;
    local_66 = TYPEOF local_c;
    local_68 = LOAD data_9_eol;
    ARG local_68;
    local_69 = CALL String___init;
    local_70 = LOAD data_10_under;
    ARG local_70;
    local_71 = CALL String___init;
    local_72 = LOAD data_12_meth;
    ARG local_72;
    local_73 = CALL String___init;
    local_tname_local = VCALL local_66 1;
    print(str, local_tname_local)
    print(str, local_71)
    print(str, local_73)
    print(str, local_69)
    ARG local_c;
    local_65 = VCALL local_66 10;
    local_74 = TYPEOF local_65;
    local_76 = LOAD data_9_eol;
    ARG local_76;
    local_77 = CALL String___init;
    local_78 = LOAD data_10_under;
    ARG local_78;
    local_79 = CALL String___init;
    local_80 = LOAD data_17_meth;
    ARG local_80;
    local_81 = CALL String___init;
    local_tname_local = VCALL local_74 1;
    print(str, local_tname_local)
    print(str, local_79)
    print(str, local_81)
    print(str, local_77)
    ARG local_65;
    local_64 = VCALL local_74 11;
    local_83 = TYPEOF local_c;
    local_85 = LOAD data_9_eol;
    ARG local_85;
    local_86 = CALL String___init;
    local_87 = LOAD data_10_under;
    ARG local_87;
    local_88 = CALL String___init;
    local_89 = LOAD data_13_meth;
    ARG local_89;
    local_90 = CALL String___init;
    local_tname_local = VCALL local_83 1;
    print(str, local_tname_local)
    print(str, local_88)
    print(str, local_90)
    print(str, local_86)
    ARG local_c;
    local_82 = VCALL local_83 9;
    local_91 = TYPEOF local_64;
    local_93 = LOAD data_9_eol;
    ARG local_93;
    local_94 = CALL String___init;
    local_95 = LOAD data_10_under;
    ARG local_95;
    local_96 = CALL String___init;
    local_97 = LOAD data_18_meth;
    ARG local_97;
    local_98 = CALL String___init;
    local_tname_local = VCALL local_91 1;
    print(str, local_tname_local)
    print(str, local_96)
    print(str, local_98)
    print(str, local_94)
    ARG local_64;
    ARG local_82;
    local_63 = VCALL local_91 12;
    local_99 = GETATTR local_63 0;
    IF local_99 GOTO label_then_1;
    GOTO label_else_1;
    LABEL label_then_1;
    local_101 = LOAD data_14_string;
    ARG local_101;
    local_102 = CALL String___init;
    local_103 = TYPEOF param_self;
    local_105 = LOAD data_9_eol;
    ARG local_105;
    local_106 = CALL String___init;
    local_107 = LOAD data_10_under;
    ARG local_107;
    local_108 = CALL String___init;
    local_109 = LOAD data_15_meth;
    ARG local_109;
    local_110 = CALL String___init;
    local_tname_local = VCALL local_103 1;
    print(str, local_tname_local)
    print(str, local_108)
    print(str, local_110)
    print(str, local_106)
    ARG param_self;
    ARG local_102;
    local_100 = VCALL local_103 3;
    local_62 = local_100;
    GOTO label_continue_1;
    LABEL label_else_1;
    local_112 = LOAD data_16_string;
    ARG local_112;
    local_113 = CALL String___init;
    local_114 = TYPEOF param_self;
    local_116 = LOAD data_9_eol;
    ARG local_116;
    local_117 = CALL String___init;
    local_118 = LOAD data_10_under;
    ARG local_118;
    local_119 = CALL String___init;
    local_120 = LOAD data_15_meth;
    ARG local_120;
    local_121 = CALL String___init;
    local_tname_local = VCALL local_114 1;
    print(str, local_tname_local)
    print(str, local_119)
    print(str, local_121)
    print(str, local_117)
    ARG param_self;
    ARG local_113;
    local_111 = VCALL local_114 3;
    local_62 = local_111;
    LABEL label_continue_1;
    RETURN local_62;
  }

  function Complex___init {

    LOCAL local_self;
    LOCAL local_x;
    LOCAL local_y;

    local_self = ALLOCATE Complex;
    ARG local_self;
    local_x = CALL Complex_x___init;
    SETATTR local_self 0 local_x;
    ARG local_self;
    local_y = CALL Complex_y___init;
    SETATTR local_self 1 local_y;
    RETURN local_self;
  }

  function Complex_x___init {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD 0;
    ARG local_0;
    local_1 = CALL Int___init;
    RETURN local_1;
  }

  function Complex_y___init {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD 0;
    ARG local_0;
    local_1 = CALL Int___init;
    RETURN local_1;
  }

  function Complex_init {
    PARAM param_self;
    PARAM param_a;
    PARAM param_b;

    LOCAL local_x;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_y;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_11;

    local_x = GETATTR param_self 0;
    local_1 = GETATTR local_x 0;
    local_2 = GETATTR param_a 0;
    local_3 = local_1 - local_2
    local_3 = local_3 * local_3
    local_4 = LOAD 1;
    local_3 = local_4 - local_3
    ARG local_3;
    local_5 = CALL Bool___init;
    local_y = GETATTR param_self 1;
    local_7 = GETATTR local_y 0;
    local_8 = GETATTR param_b 0;
    local_9 = local_7 - local_8
    local_9 = local_9 * local_9
    local_10 = LOAD 1;
    local_9 = local_10 - local_9
    ARG local_9;
    local_11 = CALL Bool___init;
    RETURN param_self;
  }

  function Complex_print {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_y;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_x;
    LOCAL local_12;
    LOCAL local_tname_local;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_18;
    LOCAL local_19;
    LOCAL local_20;
    LOCAL local_21;
    LOCAL local_22;
    LOCAL local_23;
    LOCAL local_24;
    LOCAL local_tname_local;
    LOCAL local_26;
    LOCAL local_27;
    LOCAL local_28;
    LOCAL local_29;
    LOCAL local_30;
    LOCAL local_31;
    LOCAL local_32;
    LOCAL local_33;
    LOCAL local_34;
    LOCAL local_tname_local;
    LOCAL local_36;
    LOCAL local_37;
    LOCAL local_38;
    LOCAL local_39;
    LOCAL local_40;
    LOCAL local_41;
    LOCAL local_42;
    LOCAL local_tname_local;
    LOCAL local_44;
    LOCAL local_45;
    LOCAL local_46;
    LOCAL local_47;
    LOCAL local_48;
    LOCAL local_49;
    LOCAL local_50;
    LOCAL local_51;
    LOCAL local_52;
    LOCAL local_tname_local;
    LOCAL local_54;
    LOCAL local_55;
    LOCAL local_56;
    LOCAL local_57;
    LOCAL local_58;
    LOCAL local_59;

    local_y = GETATTR param_self 1;
    local_2 = GETATTR local_y 0;
    local_3 = LOAD 0;
    ARG local_3;
    local_4 = CALL Int___init;
    local_5 = GETATTR local_4 0;
    local_6 = local_2 - local_5
    local_6 = local_6 * local_6
    local_7 = LOAD 1;
    local_6 = local_7 - local_6
    ARG local_6;
    local_8 = CALL Bool___init;
    local_9 = GETATTR local_8 0;
    IF local_9 GOTO label_then_2;
    GOTO label_else_2;
    LABEL label_then_2;
    local_x = GETATTR param_self 0;
    local_12 = TYPEOF param_self;
    local_14 = LOAD data_9_eol;
    ARG local_14;
    local_15 = CALL String___init;
    local_16 = LOAD data_10_under;
    ARG local_16;
    local_17 = CALL String___init;
    local_18 = LOAD data_19_meth;
    ARG local_18;
    local_19 = CALL String___init;
    local_tname_local = VCALL local_12 1;
    print(str, local_tname_local)
    print(str, local_17)
    print(str, local_19)
    print(str, local_15)
    ARG param_self;
    ARG local_x;
    local_10 = VCALL local_12 4;
    local_0 = local_10;
    GOTO label_continue_2;
    LABEL label_else_2;
    local_24 = TYPEOF param_self;
    local_26 = LOAD data_9_eol;
    ARG local_26;
    local_27 = CALL String___init;
    local_28 = LOAD data_10_under;
    ARG local_28;
    local_29 = CALL String___init;
    local_30 = LOAD data_19_meth;
    ARG local_30;
    local_31 = CALL String___init;
    local_tname_local = VCALL local_24 1;
    print(str, local_tname_local)
    print(str, local_29)
    print(str, local_31)
    print(str, local_27)
    ARG param_self;
    ARG local_x;
    local_23 = VCALL local_24 4;
    local_32 = LOAD data_20_string;
    ARG local_32;
    local_33 = CALL String___init;
    local_34 = TYPEOF local_23;
    local_36 = LOAD data_9_eol;
    ARG local_36;
    local_37 = CALL String___init;
    local_38 = LOAD data_10_under;
    ARG local_38;
    local_39 = CALL String___init;
    local_40 = LOAD data_15_meth;
    ARG local_40;
    local_41 = CALL String___init;
    local_tname_local = VCALL local_34 1;
    print(str, local_tname_local)
    print(str, local_39)
    print(str, local_41)
    print(str, local_37)
    ARG local_23;
    ARG local_33;
    local_22 = VCALL local_34 3;
    local_42 = TYPEOF local_22;
    local_44 = LOAD data_9_eol;
    ARG local_44;
    local_45 = CALL String___init;
    local_46 = LOAD data_10_under;
    ARG local_46;
    local_47 = CALL String___init;
    local_48 = LOAD data_19_meth;
    ARG local_48;
    local_49 = CALL String___init;
    local_tname_local = VCALL local_42 1;
    print(str, local_tname_local)
    print(str, local_47)
    print(str, local_49)
    print(str, local_45)
    ARG local_22;
    ARG local_y;
    local_21 = VCALL local_42 4;
    local_50 = LOAD data_21_string;
    ARG local_50;
    local_51 = CALL String___init;
    local_52 = TYPEOF local_21;
    local_54 = LOAD data_9_eol;
    ARG local_54;
    local_55 = CALL String___init;
    local_56 = LOAD data_10_under;
    ARG local_56;
    local_57 = CALL String___init;
    local_58 = LOAD data_15_meth;
    ARG local_58;
    local_59 = CALL String___init;
    local_tname_local = VCALL local_52 1;
    print(str, local_tname_local)
    print(str, local_57)
    print(str, local_59)
    print(str, local_55)
    ARG local_21;
    ARG local_51;
    local_20 = VCALL local_52 3;
    local_0 = local_20;
    LABEL label_continue_2;
    RETURN local_0;
  }

  function Complex_reflect_0 {
    PARAM param_self;

    LOCAL local_x;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_y;
    LOCAL local_11;
    LOCAL local_12;
    LOCAL local_13;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_18;
    LOCAL local_19;

    local_x = GETATTR param_self 0;
    local_1 = GETATTR local_x 0;
    local_3 = GETATTR local_x 0;
    local_4 = LOAD 1;
    local_2 = local_4 - local_3
    ARG local_2;
    local_5 = CALL Bool___init;
    local_6 = GETATTR local_5 0;
    local_7 = local_1 - local_6
    local_7 = local_7 * local_7
    local_8 = LOAD 1;
    local_7 = local_8 - local_7
    ARG local_7;
    local_9 = CALL Bool___init;
    local_y = GETATTR param_self 1;
    local_11 = GETATTR local_y 0;
    local_13 = GETATTR local_y 0;
    local_14 = LOAD 1;
    local_12 = local_14 - local_13
    ARG local_12;
    local_15 = CALL Bool___init;
    local_16 = GETATTR local_15 0;
    local_17 = local_11 - local_16
    local_17 = local_17 * local_17
    local_18 = LOAD 1;
    local_17 = local_18 - local_17
    ARG local_17;
    local_19 = CALL Bool___init;
    RETURN param_self;
  }

  function Complex_reflect_X {
    PARAM param_self;

    LOCAL local_y;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;

    local_y = GETATTR param_self 1;
    local_1 = GETATTR local_y 0;
    local_3 = GETATTR local_y 0;
    local_4 = LOAD 1;
    local_2 = local_4 - local_3
    ARG local_2;
    local_5 = CALL Bool___init;
    local_6 = GETATTR local_5 0;
    local_7 = local_1 - local_6
    local_7 = local_7 * local_7
    local_8 = LOAD 1;
    local_7 = local_8 - local_7
    ARG local_7;
    local_9 = CALL Bool___init;
    RETURN param_self;
  }

  function Complex_reflect_Y {
    PARAM param_self;

    LOCAL local_x;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;

    local_x = GETATTR param_self 0;
    local_1 = GETATTR local_x 0;
    local_3 = GETATTR local_x 0;
    local_4 = LOAD 1;
    local_2 = local_4 - local_3
    ARG local_2;
    local_5 = CALL Bool___init;
    local_6 = GETATTR local_5 0;
    local_7 = local_1 - local_6
    local_7 = local_7 * local_7
    local_8 = LOAD 1;
    local_7 = local_8 - local_7
    ARG local_7;
    local_9 = CALL Bool___init;
    RETURN param_self;
  }

  function Complex_equal {
    PARAM param_self;
    PARAM param_d;

    LOCAL local_0;
    LOCAL local_x;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_tname_local;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_11;
    LOCAL local_12;
    LOCAL local_13;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_y;
    LOCAL local_19;
    LOCAL local_20;
    LOCAL local_21;
    LOCAL local_tname_local;
    LOCAL local_23;
    LOCAL local_24;
    LOCAL local_25;
    LOCAL local_26;
    LOCAL local_27;
    LOCAL local_28;
    LOCAL local_29;
    LOCAL local_30;
    LOCAL local_31;
    LOCAL local_32;
    LOCAL local_33;
    LOCAL local_34;
    LOCAL local_35;
    LOCAL local_36;
    LOCAL local_37;
    LOCAL local_38;
    LOCAL local_39;

    local_x = GETATTR param_self 0;
    local_2 = GETATTR local_x 0;
    local_4 = TYPEOF param_d;
    local_6 = LOAD data_9_eol;
    ARG local_6;
    local_7 = CALL String___init;
    local_8 = LOAD data_10_under;
    ARG local_8;
    local_9 = CALL String___init;
    local_10 = LOAD data_22_meth;
    ARG local_10;
    local_11 = CALL String___init;
    local_tname_local = VCALL local_4 1;
    print(str, local_tname_local)
    print(str, local_9)
    print(str, local_11)
    print(str, local_7)
    ARG param_d;
    local_3 = VCALL local_4 13;
    local_12 = GETATTR local_3 0;
    local_13 = local_2 - local_12
    local_13 = local_13 * local_13
    local_14 = LOAD 1;
    local_13 = local_14 - local_13
    ARG local_13;
    local_15 = CALL Bool___init;
    local_16 = GETATTR local_15 0;
    IF local_16 GOTO label_then_3;
    GOTO label_else_3;
    LABEL label_then_3;
    local_y = GETATTR param_self 1;
    local_19 = GETATTR local_y 0;
    local_21 = TYPEOF param_d;
    local_23 = LOAD data_9_eol;
    ARG local_23;
    local_24 = CALL String___init;
    local_25 = LOAD data_10_under;
    ARG local_25;
    local_26 = CALL String___init;
    local_27 = LOAD data_23_meth;
    ARG local_27;
    local_28 = CALL String___init;
    local_tname_local = VCALL local_21 1;
    print(str, local_tname_local)
    print(str, local_26)
    print(str, local_28)
    print(str, local_24)
    ARG param_d;
    local_20 = VCALL local_21 14;
    local_29 = GETATTR local_20 0;
    local_30 = local_19 - local_29
    local_30 = local_30 * local_30
    local_31 = LOAD 1;
    local_30 = local_31 - local_30
    ARG local_30;
    local_32 = CALL Bool___init;
    local_33 = GETATTR local_32 0;
    IF local_33 GOTO label_then_4;
    GOTO label_else_4;
    LABEL label_then_4;
    local_34 = LOAD 1;
    ARG local_34;
    local_35 = CALL Bool___init;
    local_17 = local_35;
    GOTO label_continue_4;
    LABEL label_else_4;
    local_36 = LOAD 0;
    ARG local_36;
    local_37 = CALL Bool___init;
    local_17 = local_37;
    LABEL label_continue_4;
    local_0 = local_17;
    GOTO label_continue_3;
    LABEL label_else_3;
    local_38 = LOAD 0;
    ARG local_38;
    local_39 = CALL Bool___init;
    local_0 = local_39;
    LABEL label_continue_3;
    RETURN local_0;
  }

  function Complex_x_value {
    PARAM param_self;

    LOCAL local_x;

    local_x = GETATTR param_self 0;
    RETURN local_x;
  }

  function Complex_y_value {
    PARAM param_self;

    LOCAL local_y;

    local_y = GETATTR param_self 1;
    RETURN local_y;
  }

