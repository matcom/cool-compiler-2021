.data
div_zero: .asciiz "Runtime Error: Division by zero"
dispatch_void: .asciiz "Runtime Error: A dispatch with void"
case_void: .asciiz "Runtime Error: A case with void"
case_no_match: .asciiz "Runtime Error: Execution of a case statement without a matching branch"
heap: .asciiz "Runtime Error: Heap overflow"
substr: .asciiz "Runtime Error: Index for substring out of range"
input_str: .space 2048
void: .word 0
Object_name: .asciiz "Object"
Object_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
Int_name: .asciiz "Int"
Int_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
String_name: .asciiz "String"
String_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word String.length
.word String.concat
.word String.substr
Bool_name: .asciiz "Bool"
Bool_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
IO_name: .asciiz "IO"
IO_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word IO.out_string
.word IO.out_int
.word IO.in_string
.word IO.in_int
A_name: .asciiz "A"
A_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word A.value
.word A.set_var
.word A.method1
.word A.method2
.word A.method3
.word A.method4
.word A.method5
B_name: .asciiz "B"
B_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word A.value
.word A.set_var
.word A.method1
.word A.method2
.word A.method3
.word A.method4
.word B.method5
C_name: .asciiz "C"
C_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word A.value
.word A.set_var
.word A.method1
.word A.method2
.word A.method3
.word A.method4
.word C.method5
.word C.method6
D_name: .asciiz "D"
D_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word A.value
.word A.set_var
.word A.method1
.word A.method2
.word A.method3
.word A.method4
.word B.method5
.word D.method7
E_name: .asciiz "E"
E_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word A.value
.word A.set_var
.word A.method1
.word A.method2
.word A.method3
.word A.method4
.word B.method5
.word D.method7
.word E.method6
A2I_name: .asciiz "A2I"
A2I_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word A2I.c2i
.word A2I.i2c
.word A2I.a2i
.word A2I.a2i_aux
.word A2I.i2a
.word A2I.i2a_aux
Main_name: .asciiz "Main"
Main_methods:
.word Object.abort
.word Object.type_name
.word Object.copy
.word IO.out_string
.word IO.out_int
.word IO.in_string
.word IO.in_int
.word Main.menu
.word Main.prompt
.word Main.get_int
.word Main.is_even
.word Main.class_type
.word Main.print
.word Main.main
msg_0: .asciiz "Abort called from class "
msg_1: .asciiz "
"
empty_str: .asciiz ""
msg_3: .asciiz "0"
msg_4: .asciiz "1"
msg_5: .asciiz "2"
msg_6: .asciiz "3"
msg_7: .asciiz "4"
msg_8: .asciiz "5"
msg_9: .asciiz "6"
msg_10: .asciiz "7"
msg_11: .asciiz "8"
msg_12: .asciiz "9"
msg_13: .asciiz "-"
msg_14: .asciiz "+"
msg_15: .asciiz "
	To add a number to "
msg_16: .asciiz "...enter a:
"
msg_17: .asciiz "	To negate "
msg_18: .asciiz "...enter b:
"
msg_19: .asciiz "	To find the difference between "
msg_20: .asciiz "and another number...enter c:
"
msg_21: .asciiz "	To find the factorial of "
msg_22: .asciiz "...enter d:
"
msg_23: .asciiz "	To square "
msg_24: .asciiz "...enter e:
"
msg_25: .asciiz "	To cube "
msg_26: .asciiz "...enter f:
"
msg_27: .asciiz "	To find out if "
msg_28: .asciiz "is a multiple of 3...enter g:
"
msg_29: .asciiz "	To divide "
msg_30: .asciiz "by 8...enter h:
"
msg_31: .asciiz "	To get a new number...enter j:
"
msg_32: .asciiz "	To quit...enter q:

"
msg_33: .asciiz "Please enter a number...  "
msg_34: .asciiz "Class type is now E
"
msg_35: .asciiz "Class type is now D
"
msg_36: .asciiz "Class type is now C
"
msg_37: .asciiz "Class type is now B
"
msg_38: .asciiz "Class type is now A
"
msg_39: .asciiz "Oooops
"
msg_40: .asciiz " "
msg_41: .asciiz "number "
msg_42: .asciiz "is odd!
"
msg_43: .asciiz "is even!
"
msg_44: .asciiz "a"
msg_45: .asciiz "b"
msg_46: .asciiz "c"
msg_47: .asciiz "d"
msg_48: .asciiz "e"
msg_49: .asciiz "f"
msg_50: .asciiz "g"
msg_51: .asciiz "h"
msg_52: .asciiz "j"
msg_53: .asciiz "q"
msg_54: .asciiz "is equal to "
msg_55: .asciiz "times 8 with a remainder of "
msg_56: .asciiz "is not divisible by 3.
"
msg_57: .asciiz "is divisible by 3.
"
.text
div_zero_error:
la $a0, div_zero
li $v0, 4
syscall
li $v0, 10
syscall
dispatch_void_error:
la $a0, dispatch_void
li $v0, 4
syscall
li $v0, 10
syscall
case_void_error:
la $a0, case_void
li $v0, 4
syscall
li $v0, 10
syscall
case_no_match_error:
la $a0, case_no_match
li $v0, 4
syscall
li $v0, 10
syscall
heap_error:
la $a0, heap
li $v0, 4
syscall
li $v0, 10
syscall
substr_error:
la $a0, substr
li $v0, 4
syscall
li $v0, 10
syscall
main:
addi $sp, $sp, -8
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 2:tag Main:Class_name 8:Class_size
li $a0, 32
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, Main_name
sw $t1, 4($t0)
li $t1, 8
sw $t1, 8($t0)
la $t1, Main_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
#CallNode Main_init
move $t0, $sp
# Arg instance_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Main_init
sw $a1, 8($sp)
#CallNode Main.main
move $t0, $sp
# Arg instance_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Main.main
sw $a1, 8($sp)
#Return None
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
Object_init:
addi $sp, $sp, 0
addi $sp, $sp, -4
sw $ra, 0($sp)
#Return None
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 8
jr $ra
Object.abort:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
#LoadStr msg_0
la $t0, msg_0
sw $t0, 4($sp)
#PrintString msg_0
lw $a0, 4($sp)
li $v0, 4
syscall
#TypeOf self
lw $t0, 16($sp)
lw $t1, 4($t0)
sw $t1, 8($sp)
#PrintString class_name_1
lw $a0, 8($sp)
li $v0, 4
syscall
#LoadStr msg_1
la $t0, msg_1
sw $t0, 12($sp)
#PrintString eol_2
lw $a0, 12($sp)
li $v0, 4
syscall
#Abort
li $v0, 10
syscall
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
Object.type_name:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
#TypeOf self
lw $t0, 16($sp)
lw $t1, 4($t0)
sw $t1, 4($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
#CallNode String_init
move $t0, $sp
# Arg class_name_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 12($sp)
#Return instance_1
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
Object.copy:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
#Copy self
lw $t0, 8($sp)
lw $a0, 8($t0)
mul $a0, $a0, 4
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t1, $v0
li $a0, 0
lw $t3, 8($t0)
copy_object:
lw $t2, 0($t0)
sw $t2, 0($t1)
addi $t0, $t0, 4
addi $t1, $t1, 4
addi $a0, $a0, 1
blt $a0, $t3, copy_object
sw $v0, 4($sp)
#Return object_copy_0
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
IO_init:
addi $sp, $sp, 0
addi $sp, $sp, -4
sw $ra, 0($sp)
#Return None
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 8
jr $ra
IO.out_string:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
#GetAttr v_0 = String.value
lw $t0, 12($sp)
lw $t1, 16($t0)
sw $t1, 4($sp)
#PrintString v_0
lw $a0, 4($sp)
li $v0, 4
syscall
#Return self
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 16
jr $ra
IO.out_int:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
#GetAttr v_0 = Int.value
lw $t0, 12($sp)
lw $t1, 16($t0)
sw $t1, 4($sp)
#PrintInteger v_0
li $v0, 1
lw $a0, 4($sp)
syscall
#Return self
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 16
jr $ra
IO.in_string:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
#ReadString read_string_0
la $a0, input_str
li $a1, 2048
li $v0, 8
syscall
move $t0, $a0
read_char:
li $t1, 0
lb $t1, 0($t0)
beqz $t1, remove_characters_str_end
addi $t0, $t0, 1
j read_char
remove_characters_str_end:
addi $t0, $t0, -1
li $t1, 0
lb $t1, 0($t0)
bne $t1, 10, rcs_end
sb $0, 0($t0)
addi $t0, $t0, -1
lb $t1, 0($t0)
bne $t1, 13, rcs_end
sb $0, 0($t0)
j remove_characters_str_end
rcs_end:
sw $a0, 4($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
#CallNode String_init
move $t0, $sp
# Arg read_string_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 12($sp)
#Return instance_1
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
IO.in_int:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
#ReadInteger read_int_0
li $v0, 5
syscall
sw $v0, 4($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
#CallNode Int_init
move $t0, $sp
# Arg read_int_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 12($sp)
#Return instance_1
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
Int_init:
addi $sp, $sp, 0
addi $sp, $sp, -4
sw $ra, 0($sp)
#SetAttr Intvalue = v
lw $t0, 4($sp)
lw $t1, 8($sp)
sw $t1, 16($t0)
#Return None
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
String_init:
addi $sp, $sp, 0
addi $sp, $sp, -4
sw $ra, 0($sp)
#SetAttr Stringvalue = v
lw $t0, 4($sp)
lw $t1, 8($sp)
sw $t1, 16($t0)
#Return None
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
String.length:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
#Length of self
lw $t0, 16($sp)
lw $t0, 16($t0)
li $a0, 0
count:
lb $t1, 0($t0)
beqz $t1, end
addi $t0, $t0, 1
addi $a0, $a0, 1
j count
end:
sw $a0, 4($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
#CallNode Int_init
move $t0, $sp
# Arg length_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 12($sp)
#Return instance_1
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 20
jr $ra
String.concat:
addi $sp, $sp, -36
addi $sp, $sp, -4
sw $ra, 0($sp)
#GetAttr str1_0 = String.value
lw $t0, 40($sp)
lw $t1, 16($t0)
sw $t1, 4($sp)
#CallNode String.length
move $t0, $sp
# Arg self
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String.length
sw $a1, 8($sp)
#GetAttr str2_2 = String.value
lw $t0, 44($sp)
lw $t1, 16($t0)
sw $t1, 12($sp)
#CallNode String.length
move $t0, $sp
# Arg s
lw $t1, 44($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String.length
sw $a1, 16($sp)
#GetAttr len1_value_4 = Int.value
lw $t0, 8($sp)
lw $t1, 16($t0)
sw $t1, 20($sp)
#GetAttr len2_value_5 = Int.value
lw $t0, 16($sp)
lw $t1, 16($t0)
sw $t1, 24($sp)
#Concat str1_0 str2_2
lw $a0, 20($sp)
lw $t0, 24($sp)
add $a0, $a0, $t0
addi $a0, $a0, 1
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t3, $v0
lw $t0, 4($sp)
lw $t1, 12($sp)
copy_str:
lb $t2, 0($t0)
sb $t2, 0($v0)
beqz $t2, concat_str
addi $t0, $t0, 1
addi $v0, $v0, 1
j copy_str
concat_str:
lb $t2, 0($t1)
sb $t2, 0($v0)
beqz $t2, end_concat_str
addi $t1, $t1, 1
addi $v0, $v0, 1
j concat_str
end_concat_str:
sb $0, ($v0)
sw $t3, 28($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 32($sp)
#CallNode String_init
move $t0, $sp
# Arg result_string_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_7
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 36($sp)
#Return instance_7
lw $a1, 32($sp)
lw $ra, 0($sp)
addi $sp, $sp, 48
jr $ra
String.substr:
addi $sp, $sp, -20
addi $sp, $sp, -4
sw $ra, 0($sp)
#GetAttr i_value_0 = Int.value
lw $t0, 28($sp)
lw $t1, 16($t0)
sw $t1, 4($sp)
#GetAttr l_value_1 = Int.value
lw $t0, 32($sp)
lw $t1, 16($t0)
sw $t1, 8($sp)
#Substr self:string i_value_0:index l_value_1:length
lw $a0, 8($sp)
addi $a0, $a0, 1
li $v0, 9
syscall
bge $v0, $sp, heap_error
lw $t0, 4($sp)
lw $t1, 8($sp)
lw $t4, 24($sp)
lw $t2, 16($t4)
bltz $t0, substr_error
li $a0, 0
skip_char:
beq $a0, $t0, end_skip
addi $a0, $a0, 1
addi $t2, $t2, 1
beq $t2, $zero, substr_error
j skip_char
end_skip:
li $a0, 0
move $t3, $v0
substr_copy:
beq $a0, $t1, end_substr_copy
li $t0, 0
lb $t0, 0($t2)
sb $t0, 0($v0)
addi $t2, $t2, 1
beq $t2, $zero, substr_error
addi $v0, $v0, 1
addi $a0, $a0, 1
j substr_copy
end_substr_copy:
sb $0, ($v0)
sw $t3, 12($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 16($sp)
#CallNode String_init
move $t0, $sp
# Arg substr_result_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_3
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 20($sp)
#Return instance_3
lw $a1, 16($sp)
lw $ra, 0($sp)
addi $sp, $sp, 36
jr $ra
Bool_init:
addi $sp, $sp, 0
addi $sp, $sp, -4
sw $ra, 0($sp)
#SetAttr Boolvalue = v
lw $t0, 4($sp)
lw $t1, 8($sp)
sw $t1, 16($t0)
#Return None
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
String_equals:
addi $sp, $sp, -12
addi $sp, $sp, -4
sw $ra, 0($sp)
#GetAttr str1_0 = String.value
lw $t0, 16($sp)
lw $t1, 16($t0)
sw $t1, 4($sp)
#GetAttr str2_1 = String.value
lw $t0, 20($sp)
lw $t1, 16($t0)
sw $t1, 8($sp)
#StringEquals str1_0 = str2_1
lw $t1, 4($sp)
lw $t2, 8($sp)
compare_str:
li $t3, 0
lb $t3, 0($t1)
li $t4, 0
lb $t4, 0($t2)
seq $a0, $t3, $t4
beqz $a0, end_compare_str
beqz $t3, end_compare_str
beqz $t4, end_compare_str
addi $t1, $t1, 1
addi $t2, $t2, 1
j compare_str
end_compare_str:
sw $a0, 12($sp)
#Return result_2
lw $a1, 12($sp)
lw $ra, 0($sp)
addi $sp, $sp, 24
jr $ra
A_init:
addi $sp, $sp, -16
addi $sp, $sp, -4
sw $ra, 0($sp)
#CallNode Object_init
move $t0, $sp
# Arg self
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Object_init
sw $a1, 4($sp)
#Return None
move $a1, $zero
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
#LoadInt 0
li $t0, 0
sw $t0, 12($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 16($sp)
#SetAttr Avar = instance_1
lw $t0, 20($sp)
lw $t1, 8($sp)
sw $t1, 16($t0)
lw $ra, 0($sp)
addi $sp, $sp, 24
jr $ra
A.value:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
#GetAttr A.var = A.var
lw $t0, 8($sp)
lw $t1, 16($t0)
sw $t1, 4($sp)
#Return A.var
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
A.set_var:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
#SetAttr Avar = num
lw $t0, 8($sp)
lw $t1, 12($sp)
sw $t1, 16($t0)
#Return self
lw $a1, 8($sp)
lw $ra, 0($sp)
addi $sp, $sp, 16
jr $ra
A.method1:
addi $sp, $sp, 0
addi $sp, $sp, -4
sw $ra, 0($sp)
#Return self
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
A.method2:
addi $sp, $sp, -56
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
#LoadInt 0
li $t0, 0
sw $t0, 8($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 12($sp)
#AssignNode x_3 = instance_0
lw $t1, 4($sp)
sw $t1, 16($sp)
#GetAttr left_6 = Int.value
lw $t0, 64($sp)
lw $t1, 16($t0)
sw $t1, 28($sp)
#GetAttr right_7 = Int.value
lw $t0, 68($sp)
lw $t1, 16($t0)
sw $t1, 32($sp)
#BinaryOperator left_6 + right_7
lw $a0, 28($sp)
lw $t1, 32($sp)
add $a0, $a0, $t1
sw $a0, 24($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 20($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_4
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 36($sp)
#AssignNode x_3 = result_4
lw $t1, 20($sp)
sw $t1, 16($sp)
#Allocate 6:tag B:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 6
sw $t1, 0($t0)
la $t1, B_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, B_methods
sw $t1, 12($t0)
sw $t0, 48($sp)
#CallNode B_init
move $t0, $sp
# Arg result_11
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal B_init
sw $a1, 52($sp)
#VCall set_var
move $t0, $sp
# Arg x_3
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_11
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 48($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 44($sp)
#AssignNode result_13 = result_10
lw $t1, 44($sp)
sw $t1, 56($sp)
#Return result_13
lw $a1, 56($sp)
lw $ra, 0($sp)
addi $sp, $sp, 72
jr $ra
A.method3:
addi $sp, $sp, -52
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
#LoadInt 0
li $t0, 0
sw $t0, 8($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 12($sp)
#AssignNode x_3 = instance_0
lw $t1, 4($sp)
sw $t1, 16($sp)
#GetAttr l_6 = Int.value
lw $t0, 60($sp)
lw $t1, 16($t0)
sw $t1, 28($sp)
#UnaryOperator ~ l_6
lw $t1, 28($sp)
neg $a0, $t1
sw $a0, 24($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 20($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_4
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 32($sp)
#AssignNode x_3 = result_4
lw $t1, 20($sp)
sw $t1, 16($sp)
#Allocate 7:tag C:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 7
sw $t1, 0($t0)
la $t1, C_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, C_methods
sw $t1, 12($t0)
sw $t0, 44($sp)
#CallNode C_init
move $t0, $sp
# Arg result_10
lw $t1, 44($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal C_init
sw $a1, 48($sp)
#VCall set_var
move $t0, $sp
# Arg x_3
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_10
lw $t1, 44($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 44($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 40($sp)
#AssignNode result_12 = result_9
lw $t1, 40($sp)
sw $t1, 52($sp)
#Return result_12
lw $a1, 52($sp)
lw $ra, 0($sp)
addi $sp, $sp, 64
jr $ra
A.method4:
addi $sp, $sp, -136
addi $sp, $sp, -4
sw $ra, 0($sp)
#GetAttr left_3 = Int.value
lw $t0, 148($sp)
lw $t1, 16($t0)
sw $t1, 16($sp)
#GetAttr right_4 = Int.value
lw $t0, 144($sp)
lw $t1, 16($t0)
sw $t1, 20($sp)
#BinaryOperator left_3 < right_4
lw $a0, 16($sp)
lw $t1, 20($sp)
slt $a0, $a0, $t1
sw $a0, 12($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 24($sp)
# IFGoto result_1 -> label_1
lw $t0, 8($sp)
lw $a0, 16($t0)
bnez $a0, label_1
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 28($sp)
#LoadInt 0
li $t0, 0
sw $t0, 32($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_7
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 36($sp)
#AssignNode x_9 = instance_6
lw $t1, 28($sp)
sw $t1, 40($sp)
#GetAttr left_12 = Int.value
lw $t0, 148($sp)
lw $t1, 16($t0)
sw $t1, 52($sp)
#GetAttr right_13 = Int.value
lw $t0, 144($sp)
lw $t1, 16($t0)
sw $t1, 56($sp)
#BinaryOperator left_12 - right_13
lw $a0, 52($sp)
lw $t1, 56($sp)
sub $a0, $a0, $t1
sw $a0, 48($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 44($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_11
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_10
lw $t1, 44($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 60($sp)
#AssignNode x_9 = result_10
lw $t1, 44($sp)
sw $t1, 40($sp)
#Allocate 8:tag D:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 8
sw $t1, 0($t0)
la $t1, D_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, D_methods
sw $t1, 12($t0)
sw $t0, 72($sp)
#CallNode D_init
move $t0, $sp
# Arg result_17
lw $t1, 72($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal D_init
sw $a1, 76($sp)
#VCall set_var
move $t0, $sp
# Arg x_9
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_17
lw $t1, 72($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 72($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 68($sp)
#AssignNode result_19 = result_16
lw $t1, 68($sp)
sw $t1, 80($sp)
#AssignNode result_0 = result_19
lw $t1, 80($sp)
sw $t1, 4($sp)
#Goto label_2
b label_2
#LabelNode label_1
label_1:
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 84($sp)
#LoadInt 0
li $t0, 0
sw $t0, 88($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_21
lw $t1, 88($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_20
lw $t1, 84($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 92($sp)
#AssignNode x_23 = instance_20
lw $t1, 84($sp)
sw $t1, 96($sp)
#GetAttr left_26 = Int.value
lw $t0, 144($sp)
lw $t1, 16($t0)
sw $t1, 108($sp)
#GetAttr right_27 = Int.value
lw $t0, 148($sp)
lw $t1, 16($t0)
sw $t1, 112($sp)
#BinaryOperator left_26 - right_27
lw $a0, 108($sp)
lw $t1, 112($sp)
sub $a0, $a0, $t1
sw $a0, 104($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 100($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_25
lw $t1, 104($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_24
lw $t1, 100($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 116($sp)
#AssignNode x_23 = result_24
lw $t1, 100($sp)
sw $t1, 96($sp)
#Allocate 8:tag D:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 8
sw $t1, 0($t0)
la $t1, D_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, D_methods
sw $t1, 12($t0)
sw $t0, 128($sp)
#CallNode D_init
move $t0, $sp
# Arg result_31
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal D_init
sw $a1, 132($sp)
#VCall set_var
move $t0, $sp
# Arg x_23
lw $t1, 96($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_31
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 128($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 124($sp)
#AssignNode result_33 = result_30
lw $t1, 124($sp)
sw $t1, 136($sp)
#AssignNode result_0 = result_33
lw $t1, 136($sp)
sw $t1, 4($sp)
#LabelNode label_2
label_2:
#Return result_0
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 152
jr $ra
A.method5:
addi $sp, $sp, -136
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
#LoadInt 1
li $t0, 1
sw $t0, 8($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 12($sp)
#AssignNode x_3 = instance_0
lw $t1, 4($sp)
sw $t1, 16($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 20($sp)
#LoadInt 1
li $t0, 1
sw $t0, 24($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_4
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 28($sp)
#AssignNode y_7 = instance_4
lw $t1, 20($sp)
sw $t1, 32($sp)
#LabelNode label_3
label_3:
#GetAttr left_11 = Int.value
lw $t0, 32($sp)
lw $t1, 16($t0)
sw $t1, 48($sp)
#GetAttr right_12 = Int.value
lw $t0, 144($sp)
lw $t1, 16($t0)
sw $t1, 52($sp)
#BinaryOperator left_11 <= right_12
lw $a0, 48($sp)
lw $t1, 52($sp)
sle $a0, $a0, $t1
sw $a0, 44($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 40($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_10
lw $t1, 44($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_9
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 56($sp)
# IFGoto result_9 -> label_4
lw $t0, 40($sp)
lw $a0, 16($t0)
bnez $a0, label_4
#Goto label_5
b label_5
#LabelNode label_4
label_4:
#GetAttr left_16 = Int.value
lw $t0, 16($sp)
lw $t1, 16($t0)
sw $t1, 68($sp)
#GetAttr right_17 = Int.value
lw $t0, 32($sp)
lw $t1, 16($t0)
sw $t1, 72($sp)
#BinaryOperator left_16 * right_17
lw $a0, 68($sp)
lw $t1, 72($sp)
mul $a0, $a0, $t1
sw $a0, 64($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 60($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_15
lw $t1, 64($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_14
lw $t1, 60($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 76($sp)
#AssignNode x_3 = result_14
lw $t1, 60($sp)
sw $t1, 16($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 100($sp)
#LoadInt 1
li $t0, 1
sw $t0, 104($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_25
lw $t1, 104($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_24
lw $t1, 100($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 108($sp)
#GetAttr left_22 = Int.value
lw $t0, 32($sp)
lw $t1, 16($t0)
sw $t1, 92($sp)
#GetAttr right_23 = Int.value
lw $t0, 100($sp)
lw $t1, 16($t0)
sw $t1, 96($sp)
#BinaryOperator left_22 + right_23
lw $a0, 92($sp)
lw $t1, 96($sp)
add $a0, $a0, $t1
sw $a0, 88($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 84($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_21
lw $t1, 88($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_20
lw $t1, 84($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 112($sp)
#AssignNode y_7 = result_20
lw $t1, 84($sp)
sw $t1, 32($sp)
#Goto label_3
b label_3
#LabelNode label_5
label_5:
#AssignNode result_29 = result_8
lw $t1, 36($sp)
sw $t1, 120($sp)
#Allocate 9:tag E:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 9
sw $t1, 0($t0)
la $t1, E_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, E_methods
sw $t1, 12($t0)
sw $t0, 128($sp)
#CallNode E_init
move $t0, $sp
# Arg result_31
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal E_init
sw $a1, 132($sp)
#VCall set_var
move $t0, $sp
# Arg x_3
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_31
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 128($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 124($sp)
#AssignNode result_33 = result_30
lw $t1, 124($sp)
sw $t1, 136($sp)
#Return result_33
lw $a1, 136($sp)
lw $ra, 0($sp)
addi $sp, $sp, 148
jr $ra
B_init:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
#CallNode A_init
move $t0, $sp
# Arg self
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal A_init
sw $a1, 4($sp)
#Return None
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
B.method5:
addi $sp, $sp, -56
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
#LoadInt 0
li $t0, 0
sw $t0, 8($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 12($sp)
#AssignNode x_3 = instance_0
lw $t1, 4($sp)
sw $t1, 16($sp)
#GetAttr left_6 = Int.value
lw $t0, 64($sp)
lw $t1, 16($t0)
sw $t1, 28($sp)
#GetAttr right_7 = Int.value
lw $t0, 64($sp)
lw $t1, 16($t0)
sw $t1, 32($sp)
#BinaryOperator left_6 * right_7
lw $a0, 28($sp)
lw $t1, 32($sp)
mul $a0, $a0, $t1
sw $a0, 24($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 20($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_4
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 36($sp)
#AssignNode x_3 = result_4
lw $t1, 20($sp)
sw $t1, 16($sp)
#Allocate 9:tag E:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 9
sw $t1, 0($t0)
la $t1, E_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, E_methods
sw $t1, 12($t0)
sw $t0, 48($sp)
#CallNode E_init
move $t0, $sp
# Arg result_11
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal E_init
sw $a1, 52($sp)
#VCall set_var
move $t0, $sp
# Arg x_3
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_11
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 48($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 44($sp)
#AssignNode result_13 = result_10
lw $t1, 44($sp)
sw $t1, 56($sp)
#Return result_13
lw $a1, 56($sp)
lw $ra, 0($sp)
addi $sp, $sp, 68
jr $ra
C_init:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
#CallNode B_init
move $t0, $sp
# Arg self
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal B_init
sw $a1, 4($sp)
#Return None
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
C.method6:
addi $sp, $sp, -52
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
#LoadInt 0
li $t0, 0
sw $t0, 8($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 12($sp)
#AssignNode x_3 = instance_0
lw $t1, 4($sp)
sw $t1, 16($sp)
#GetAttr l_6 = Int.value
lw $t0, 60($sp)
lw $t1, 16($t0)
sw $t1, 28($sp)
#UnaryOperator ~ l_6
lw $t1, 28($sp)
neg $a0, $t1
sw $a0, 24($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 20($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_4
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 32($sp)
#AssignNode x_3 = result_4
lw $t1, 20($sp)
sw $t1, 16($sp)
#Allocate 5:tag A:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 5
sw $t1, 0($t0)
la $t1, A_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, A_methods
sw $t1, 12($t0)
sw $t0, 44($sp)
#CallNode A_init
move $t0, $sp
# Arg result_10
lw $t1, 44($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal A_init
sw $a1, 48($sp)
#VCall set_var
move $t0, $sp
# Arg x_3
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_10
lw $t1, 44($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 44($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 40($sp)
#AssignNode result_12 = result_9
lw $t1, 40($sp)
sw $t1, 52($sp)
#Return result_12
lw $a1, 52($sp)
lw $ra, 0($sp)
addi $sp, $sp, 64
jr $ra
C.method5:
addi $sp, $sp, -76
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
#LoadInt 0
li $t0, 0
sw $t0, 8($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 12($sp)
#AssignNode x_3 = instance_0
lw $t1, 4($sp)
sw $t1, 16($sp)
#GetAttr left_10 = Int.value
lw $t0, 84($sp)
lw $t1, 16($t0)
sw $t1, 44($sp)
#GetAttr right_11 = Int.value
lw $t0, 84($sp)
lw $t1, 16($t0)
sw $t1, 48($sp)
#BinaryOperator left_10 * right_11
lw $a0, 44($sp)
lw $t1, 48($sp)
mul $a0, $a0, $t1
sw $a0, 40($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 36($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_9
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_8
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 52($sp)
#GetAttr left_6 = Int.value
lw $t0, 36($sp)
lw $t1, 16($t0)
sw $t1, 28($sp)
#GetAttr right_7 = Int.value
lw $t0, 84($sp)
lw $t1, 16($t0)
sw $t1, 32($sp)
#BinaryOperator left_6 * right_7
lw $a0, 28($sp)
lw $t1, 32($sp)
mul $a0, $a0, $t1
sw $a0, 24($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 20($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_4
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 56($sp)
#AssignNode x_3 = result_4
lw $t1, 20($sp)
sw $t1, 16($sp)
#Allocate 9:tag E:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 9
sw $t1, 0($t0)
la $t1, E_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, E_methods
sw $t1, 12($t0)
sw $t0, 68($sp)
#CallNode E_init
move $t0, $sp
# Arg result_16
lw $t1, 68($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal E_init
sw $a1, 72($sp)
#VCall set_var
move $t0, $sp
# Arg x_3
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_16
lw $t1, 68($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 68($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 64($sp)
#AssignNode result_18 = result_15
lw $t1, 64($sp)
sw $t1, 76($sp)
#Return result_18
lw $a1, 76($sp)
lw $ra, 0($sp)
addi $sp, $sp, 88
jr $ra
D_init:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
#CallNode B_init
move $t0, $sp
# Arg self
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal B_init
sw $a1, 4($sp)
#Return None
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
D.method7:
addi $sp, $sp, -244
addi $sp, $sp, -4
sw $ra, 0($sp)
#AssignNode x_0 = num
lw $t1, 252($sp)
sw $t1, 4($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 28($sp)
#LoadInt 0
li $t0, 0
sw $t0, 32($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_7
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 36($sp)
#GetAttr left_4 = Int.value
lw $t0, 4($sp)
lw $t1, 16($t0)
sw $t1, 20($sp)
#GetAttr right_5 = Int.value
lw $t0, 28($sp)
lw $t1, 16($t0)
sw $t1, 24($sp)
#BinaryOperator left_4 < right_5
lw $a0, 20($sp)
lw $t1, 24($sp)
slt $a0, $a0, $t1
sw $a0, 16($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 12($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_3
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 40($sp)
# IFGoto result_2 -> label_6
lw $t0, 12($sp)
lw $a0, 16($t0)
bnez $a0, label_6
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 64($sp)
#LoadInt 0
li $t0, 0
sw $t0, 68($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_16
lw $t1, 68($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_15
lw $t1, 64($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 72($sp)
#GetAttr left_13 = Int.value
lw $t0, 64($sp)
lw $t1, 16($t0)
sw $t1, 56($sp)
#GetAttr right_14 = Int.value
lw $t0, 4($sp)
lw $t1, 16($t0)
sw $t1, 60($sp)
#BinaryOperator left_13 = right_14
lw $a0, 56($sp)
lw $t1, 60($sp)
seq $a0, $a0, $t1
sw $a0, 52($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 48($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_12
lw $t1, 52($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_11
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 76($sp)
# IFGoto result_11 -> label_7
lw $t0, 48($sp)
lw $a0, 16($t0)
bnez $a0, label_7
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 100($sp)
#LoadInt 1
li $t0, 1
sw $t0, 104($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_25
lw $t1, 104($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_24
lw $t1, 100($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 108($sp)
#GetAttr left_22 = Int.value
lw $t0, 100($sp)
lw $t1, 16($t0)
sw $t1, 92($sp)
#GetAttr right_23 = Int.value
lw $t0, 4($sp)
lw $t1, 16($t0)
sw $t1, 96($sp)
#BinaryOperator left_22 = right_23
lw $a0, 92($sp)
lw $t1, 96($sp)
seq $a0, $a0, $t1
sw $a0, 88($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 84($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_21
lw $t1, 88($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_20
lw $t1, 84($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 112($sp)
# IFGoto result_20 -> label_8
lw $t0, 84($sp)
lw $a0, 16($t0)
bnez $a0, label_8
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 136($sp)
#LoadInt 2
li $t0, 2
sw $t0, 140($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_34
lw $t1, 140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_33
lw $t1, 136($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 144($sp)
#GetAttr left_31 = Int.value
lw $t0, 136($sp)
lw $t1, 16($t0)
sw $t1, 128($sp)
#GetAttr right_32 = Int.value
lw $t0, 4($sp)
lw $t1, 16($t0)
sw $t1, 132($sp)
#BinaryOperator left_31 = right_32
lw $a0, 128($sp)
lw $t1, 132($sp)
seq $a0, $a0, $t1
sw $a0, 124($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 120($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_30
lw $t1, 124($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_29
lw $t1, 120($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 148($sp)
# IFGoto result_29 -> label_9
lw $t0, 120($sp)
lw $a0, 16($t0)
bnez $a0, label_9
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 172($sp)
#LoadInt 3
li $t0, 3
sw $t0, 176($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_43
lw $t1, 176($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_42
lw $t1, 172($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 180($sp)
#GetAttr left_40 = Int.value
lw $t0, 4($sp)
lw $t1, 16($t0)
sw $t1, 164($sp)
#GetAttr right_41 = Int.value
lw $t0, 172($sp)
lw $t1, 16($t0)
sw $t1, 168($sp)
#BinaryOperator left_40 - right_41
lw $a0, 164($sp)
lw $t1, 168($sp)
sub $a0, $a0, $t1
sw $a0, 160($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 156($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_39
lw $t1, 160($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_38
lw $t1, 156($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 184($sp)
#VCall method7
move $t0, $sp
# Arg result_38
lw $t1, 156($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 248($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 248($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 40($t2)
jal $t3
sw $a1, 152($sp)
#AssignNode result_28 = result_37
lw $t1, 152($sp)
sw $t1, 116($sp)
#Goto label_10
b label_10
#LabelNode label_9
label_9:
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 188($sp)
#LoadInt 0
li $t0, 0
sw $t0, 192($sp)
#CallNode Bool_init
move $t0, $sp
# Arg value_47
lw $t1, 192($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_46
lw $t1, 188($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 196($sp)
#AssignNode result_28 = instance_46
lw $t1, 188($sp)
sw $t1, 116($sp)
#LabelNode label_10
label_10:
#AssignNode result_19 = result_28
lw $t1, 116($sp)
sw $t1, 80($sp)
#Goto label_11
b label_11
#LabelNode label_8
label_8:
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 200($sp)
#LoadInt 0
li $t0, 0
sw $t0, 204($sp)
#CallNode Bool_init
move $t0, $sp
# Arg value_50
lw $t1, 204($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_49
lw $t1, 200($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 208($sp)
#AssignNode result_19 = instance_49
lw $t1, 200($sp)
sw $t1, 80($sp)
#LabelNode label_11
label_11:
#AssignNode result_10 = result_19
lw $t1, 80($sp)
sw $t1, 44($sp)
#Goto label_12
b label_12
#LabelNode label_7
label_7:
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 212($sp)
#LoadInt 1
li $t0, 1
sw $t0, 216($sp)
#CallNode Bool_init
move $t0, $sp
# Arg value_53
lw $t1, 216($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_52
lw $t1, 212($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 220($sp)
#AssignNode result_10 = instance_52
lw $t1, 212($sp)
sw $t1, 44($sp)
#LabelNode label_12
label_12:
#AssignNode result_1 = result_10
lw $t1, 44($sp)
sw $t1, 8($sp)
#Goto label_13
b label_13
#LabelNode label_6
label_6:
#GetAttr l_58 = Int.value
lw $t0, 4($sp)
lw $t1, 16($t0)
sw $t1, 236($sp)
#UnaryOperator ~ l_58
lw $t1, 236($sp)
neg $a0, $t1
sw $a0, 232($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 228($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_57
lw $t1, 232($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_56
lw $t1, 228($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 240($sp)
#VCall method7
move $t0, $sp
# Arg result_56
lw $t1, 228($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 248($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 248($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 40($t2)
jal $t3
sw $a1, 224($sp)
#AssignNode result_1 = result_55
lw $t1, 224($sp)
sw $t1, 8($sp)
#LabelNode label_13
label_13:
#AssignNode result_60 = result_1
lw $t1, 8($sp)
sw $t1, 244($sp)
#Return result_60
lw $a1, 244($sp)
lw $ra, 0($sp)
addi $sp, $sp, 256
jr $ra
E_init:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
#CallNode D_init
move $t0, $sp
# Arg self
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal D_init
sw $a1, 4($sp)
#Return None
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
E.method6:
addi $sp, $sp, -68
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
#LoadInt 0
li $t0, 0
sw $t0, 8($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 12($sp)
#AssignNode x_3 = instance_0
lw $t1, 4($sp)
sw $t1, 16($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 36($sp)
#LoadInt 8
li $t0, 8
sw $t0, 40($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_9
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_8
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 44($sp)
#GetAttr left_6 = Int.value
lw $t0, 76($sp)
lw $t1, 16($t0)
sw $t1, 28($sp)
#GetAttr right_7 = Int.value
lw $t0, 36($sp)
lw $t1, 16($t0)
sw $t1, 32($sp)
#BinaryOperator left_6 / right_7
lw $a0, 28($sp)
lw $t1, 32($sp)
beq $t1, 0, div_zero_error
div $a0, $a0, $t1
sw $a0, 24($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 20($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_4
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 48($sp)
#AssignNode x_3 = result_4
lw $t1, 20($sp)
sw $t1, 16($sp)
#Allocate 5:tag A:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 5
sw $t1, 0($t0)
la $t1, A_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, A_methods
sw $t1, 12($t0)
sw $t0, 60($sp)
#CallNode A_init
move $t0, $sp
# Arg result_14
lw $t1, 60($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal A_init
sw $a1, 64($sp)
#VCall set_var
move $t0, $sp
# Arg x_3
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_14
lw $t1, 60($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 60($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 56($sp)
#AssignNode result_16 = result_13
lw $t1, 56($sp)
sw $t1, 68($sp)
#Return result_16
lw $a1, 68($sp)
lw $ra, 0($sp)
addi $sp, $sp, 80
jr $ra
A2I_init:
addi $sp, $sp, -4
addi $sp, $sp, -4
sw $ra, 0($sp)
#CallNode Object_init
move $t0, $sp
# Arg self
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Object_init
sw $a1, 4($sp)
#Return None
move $a1, $zero
lw $ra, 0($sp)
addi $sp, $sp, 12
jr $ra
A2I.c2i:
addi $sp, $sp, -496
addi $sp, $sp, -4
sw $ra, 0($sp)
#LoadStr msg_3
la $t0, msg_3
sw $t0, 24($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 28($sp)
#CallNode String_init
move $t0, $sp
# Arg l_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 32($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg char
lw $t1, 504($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 12($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 36($sp)
# IFGoto result_1 -> label_14
lw $t0, 8($sp)
lw $a0, 16($t0)
bnez $a0, label_14
#LoadStr msg_4
la $t0, msg_4
sw $t0, 60($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 64($sp)
#CallNode String_init
move $t0, $sp
# Arg l_14
lw $t1, 60($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_15
lw $t1, 64($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 68($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_15
lw $t1, 64($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg char
lw $t1, 504($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 48($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 44($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_11
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_10
lw $t1, 44($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 72($sp)
# IFGoto result_10 -> label_15
lw $t0, 44($sp)
lw $a0, 16($t0)
bnez $a0, label_15
#LoadStr msg_5
la $t0, msg_5
sw $t0, 96($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 100($sp)
#CallNode String_init
move $t0, $sp
# Arg l_23
lw $t1, 96($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_24
lw $t1, 100($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 104($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_24
lw $t1, 100($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg char
lw $t1, 504($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 84($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 80($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_20
lw $t1, 84($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_19
lw $t1, 80($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 108($sp)
# IFGoto result_19 -> label_16
lw $t0, 80($sp)
lw $a0, 16($t0)
bnez $a0, label_16
#LoadStr msg_6
la $t0, msg_6
sw $t0, 132($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 136($sp)
#CallNode String_init
move $t0, $sp
# Arg l_32
lw $t1, 132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_33
lw $t1, 136($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 140($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_33
lw $t1, 136($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg char
lw $t1, 504($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 120($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 116($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_29
lw $t1, 120($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_28
lw $t1, 116($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 144($sp)
# IFGoto result_28 -> label_17
lw $t0, 116($sp)
lw $a0, 16($t0)
bnez $a0, label_17
#LoadStr msg_7
la $t0, msg_7
sw $t0, 168($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 172($sp)
#CallNode String_init
move $t0, $sp
# Arg l_41
lw $t1, 168($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_42
lw $t1, 172($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 176($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_42
lw $t1, 172($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg char
lw $t1, 504($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 156($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 152($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_38
lw $t1, 156($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_37
lw $t1, 152($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 180($sp)
# IFGoto result_37 -> label_18
lw $t0, 152($sp)
lw $a0, 16($t0)
bnez $a0, label_18
#LoadStr msg_8
la $t0, msg_8
sw $t0, 204($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 208($sp)
#CallNode String_init
move $t0, $sp
# Arg l_50
lw $t1, 204($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_51
lw $t1, 208($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 212($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_51
lw $t1, 208($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg char
lw $t1, 504($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 192($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 188($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_47
lw $t1, 192($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_46
lw $t1, 188($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 216($sp)
# IFGoto result_46 -> label_19
lw $t0, 188($sp)
lw $a0, 16($t0)
bnez $a0, label_19
#LoadStr msg_9
la $t0, msg_9
sw $t0, 240($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 244($sp)
#CallNode String_init
move $t0, $sp
# Arg l_59
lw $t1, 240($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_60
lw $t1, 244($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 248($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_60
lw $t1, 244($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg char
lw $t1, 504($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 228($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 224($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_56
lw $t1, 228($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_55
lw $t1, 224($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 252($sp)
# IFGoto result_55 -> label_20
lw $t0, 224($sp)
lw $a0, 16($t0)
bnez $a0, label_20
#LoadStr msg_10
la $t0, msg_10
sw $t0, 276($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 280($sp)
#CallNode String_init
move $t0, $sp
# Arg l_68
lw $t1, 276($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_69
lw $t1, 280($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 284($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_69
lw $t1, 280($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg char
lw $t1, 504($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 264($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 260($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_65
lw $t1, 264($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_64
lw $t1, 260($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 288($sp)
# IFGoto result_64 -> label_21
lw $t0, 260($sp)
lw $a0, 16($t0)
bnez $a0, label_21
#LoadStr msg_11
la $t0, msg_11
sw $t0, 312($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 316($sp)
#CallNode String_init
move $t0, $sp
# Arg l_77
lw $t1, 312($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_78
lw $t1, 316($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 320($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_78
lw $t1, 316($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg char
lw $t1, 504($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 300($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 296($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_74
lw $t1, 300($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_73
lw $t1, 296($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 324($sp)
# IFGoto result_73 -> label_22
lw $t0, 296($sp)
lw $a0, 16($t0)
bnez $a0, label_22
#LoadStr msg_12
la $t0, msg_12
sw $t0, 348($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 352($sp)
#CallNode String_init
move $t0, $sp
# Arg l_86
lw $t1, 348($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_87
lw $t1, 352($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 356($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_87
lw $t1, 352($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg char
lw $t1, 504($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 336($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 332($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_83
lw $t1, 336($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_82
lw $t1, 332($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 360($sp)
# IFGoto result_82 -> label_23
lw $t0, 332($sp)
lw $a0, 16($t0)
bnez $a0, label_23
#VCall abort
move $t0, $sp
# Arg self
lw $t1, 500($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 500($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 0($t2)
jal $t3
sw $a1, 364($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 368($sp)
#LoadInt 0
li $t0, 0
sw $t0, 372($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_92
lw $t1, 372($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_91
lw $t1, 368($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 376($sp)
#AssignNode result_81 = instance_91
lw $t1, 368($sp)
sw $t1, 328($sp)
#Goto label_24
b label_24
#LabelNode label_23
label_23:
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 380($sp)
#LoadInt 9
li $t0, 9
sw $t0, 384($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_95
lw $t1, 384($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_94
lw $t1, 380($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 388($sp)
#AssignNode result_81 = instance_94
lw $t1, 380($sp)
sw $t1, 328($sp)
#LabelNode label_24
label_24:
#AssignNode result_72 = result_81
lw $t1, 328($sp)
sw $t1, 292($sp)
#Goto label_25
b label_25
#LabelNode label_22
label_22:
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 392($sp)
#LoadInt 8
li $t0, 8
sw $t0, 396($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_98
lw $t1, 396($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_97
lw $t1, 392($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 400($sp)
#AssignNode result_72 = instance_97
lw $t1, 392($sp)
sw $t1, 292($sp)
#LabelNode label_25
label_25:
#AssignNode result_63 = result_72
lw $t1, 292($sp)
sw $t1, 256($sp)
#Goto label_26
b label_26
#LabelNode label_21
label_21:
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 404($sp)
#LoadInt 7
li $t0, 7
sw $t0, 408($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_101
lw $t1, 408($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_100
lw $t1, 404($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 412($sp)
#AssignNode result_63 = instance_100
lw $t1, 404($sp)
sw $t1, 256($sp)
#LabelNode label_26
label_26:
#AssignNode result_54 = result_63
lw $t1, 256($sp)
sw $t1, 220($sp)
#Goto label_27
b label_27
#LabelNode label_20
label_20:
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 416($sp)
#LoadInt 6
li $t0, 6
sw $t0, 420($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_104
lw $t1, 420($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_103
lw $t1, 416($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 424($sp)
#AssignNode result_54 = instance_103
lw $t1, 416($sp)
sw $t1, 220($sp)
#LabelNode label_27
label_27:
#AssignNode result_45 = result_54
lw $t1, 220($sp)
sw $t1, 184($sp)
#Goto label_28
b label_28
#LabelNode label_19
label_19:
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 428($sp)
#LoadInt 5
li $t0, 5
sw $t0, 432($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_107
lw $t1, 432($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_106
lw $t1, 428($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 436($sp)
#AssignNode result_45 = instance_106
lw $t1, 428($sp)
sw $t1, 184($sp)
#LabelNode label_28
label_28:
#AssignNode result_36 = result_45
lw $t1, 184($sp)
sw $t1, 148($sp)
#Goto label_29
b label_29
#LabelNode label_18
label_18:
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 440($sp)
#LoadInt 4
li $t0, 4
sw $t0, 444($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_110
lw $t1, 444($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_109
lw $t1, 440($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 448($sp)
#AssignNode result_36 = instance_109
lw $t1, 440($sp)
sw $t1, 148($sp)
#LabelNode label_29
label_29:
#AssignNode result_27 = result_36
lw $t1, 148($sp)
sw $t1, 112($sp)
#Goto label_30
b label_30
#LabelNode label_17
label_17:
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 452($sp)
#LoadInt 3
li $t0, 3
sw $t0, 456($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_113
lw $t1, 456($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_112
lw $t1, 452($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 460($sp)
#AssignNode result_27 = instance_112
lw $t1, 452($sp)
sw $t1, 112($sp)
#LabelNode label_30
label_30:
#AssignNode result_18 = result_27
lw $t1, 112($sp)
sw $t1, 76($sp)
#Goto label_31
b label_31
#LabelNode label_16
label_16:
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 464($sp)
#LoadInt 2
li $t0, 2
sw $t0, 468($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_116
lw $t1, 468($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_115
lw $t1, 464($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 472($sp)
#AssignNode result_18 = instance_115
lw $t1, 464($sp)
sw $t1, 76($sp)
#LabelNode label_31
label_31:
#AssignNode result_9 = result_18
lw $t1, 76($sp)
sw $t1, 40($sp)
#Goto label_32
b label_32
#LabelNode label_15
label_15:
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 476($sp)
#LoadInt 1
li $t0, 1
sw $t0, 480($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_119
lw $t1, 480($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_118
lw $t1, 476($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 484($sp)
#AssignNode result_9 = instance_118
lw $t1, 476($sp)
sw $t1, 40($sp)
#LabelNode label_32
label_32:
#AssignNode result_0 = result_9
lw $t1, 40($sp)
sw $t1, 4($sp)
#Goto label_33
b label_33
#LabelNode label_14
label_14:
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 488($sp)
#LoadInt 0
li $t0, 0
sw $t0, 492($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_122
lw $t1, 492($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_121
lw $t1, 488($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 496($sp)
#AssignNode result_0 = instance_121
lw $t1, 488($sp)
sw $t1, 4($sp)
#LabelNode label_33
label_33:
#Return result_0
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 508
jr $ra
A2I.i2c:
addi $sp, $sp, -496
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 24($sp)
#LoadInt 0
li $t0, 0
sw $t0, 28($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 32($sp)
#GetAttr left_3 = Int.value
lw $t0, 504($sp)
lw $t1, 16($t0)
sw $t1, 16($sp)
#GetAttr right_4 = Int.value
lw $t0, 24($sp)
lw $t1, 16($t0)
sw $t1, 20($sp)
#BinaryOperator left_3 = right_4
lw $a0, 16($sp)
lw $t1, 20($sp)
seq $a0, $a0, $t1
sw $a0, 12($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 36($sp)
# IFGoto result_1 -> label_34
lw $t0, 8($sp)
lw $a0, 16($t0)
bnez $a0, label_34
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 60($sp)
#LoadInt 1
li $t0, 1
sw $t0, 64($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_15
lw $t1, 64($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_14
lw $t1, 60($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 68($sp)
#GetAttr left_12 = Int.value
lw $t0, 504($sp)
lw $t1, 16($t0)
sw $t1, 52($sp)
#GetAttr right_13 = Int.value
lw $t0, 60($sp)
lw $t1, 16($t0)
sw $t1, 56($sp)
#BinaryOperator left_12 = right_13
lw $a0, 52($sp)
lw $t1, 56($sp)
seq $a0, $a0, $t1
sw $a0, 48($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 44($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_11
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_10
lw $t1, 44($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 72($sp)
# IFGoto result_10 -> label_35
lw $t0, 44($sp)
lw $a0, 16($t0)
bnez $a0, label_35
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 96($sp)
#LoadInt 2
li $t0, 2
sw $t0, 100($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_24
lw $t1, 100($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_23
lw $t1, 96($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 104($sp)
#GetAttr left_21 = Int.value
lw $t0, 504($sp)
lw $t1, 16($t0)
sw $t1, 88($sp)
#GetAttr right_22 = Int.value
lw $t0, 96($sp)
lw $t1, 16($t0)
sw $t1, 92($sp)
#BinaryOperator left_21 = right_22
lw $a0, 88($sp)
lw $t1, 92($sp)
seq $a0, $a0, $t1
sw $a0, 84($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 80($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_20
lw $t1, 84($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_19
lw $t1, 80($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 108($sp)
# IFGoto result_19 -> label_36
lw $t0, 80($sp)
lw $a0, 16($t0)
bnez $a0, label_36
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 132($sp)
#LoadInt 3
li $t0, 3
sw $t0, 136($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_33
lw $t1, 136($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_32
lw $t1, 132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 140($sp)
#GetAttr left_30 = Int.value
lw $t0, 504($sp)
lw $t1, 16($t0)
sw $t1, 124($sp)
#GetAttr right_31 = Int.value
lw $t0, 132($sp)
lw $t1, 16($t0)
sw $t1, 128($sp)
#BinaryOperator left_30 = right_31
lw $a0, 124($sp)
lw $t1, 128($sp)
seq $a0, $a0, $t1
sw $a0, 120($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 116($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_29
lw $t1, 120($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_28
lw $t1, 116($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 144($sp)
# IFGoto result_28 -> label_37
lw $t0, 116($sp)
lw $a0, 16($t0)
bnez $a0, label_37
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 168($sp)
#LoadInt 4
li $t0, 4
sw $t0, 172($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_42
lw $t1, 172($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_41
lw $t1, 168($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 176($sp)
#GetAttr left_39 = Int.value
lw $t0, 504($sp)
lw $t1, 16($t0)
sw $t1, 160($sp)
#GetAttr right_40 = Int.value
lw $t0, 168($sp)
lw $t1, 16($t0)
sw $t1, 164($sp)
#BinaryOperator left_39 = right_40
lw $a0, 160($sp)
lw $t1, 164($sp)
seq $a0, $a0, $t1
sw $a0, 156($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 152($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_38
lw $t1, 156($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_37
lw $t1, 152($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 180($sp)
# IFGoto result_37 -> label_38
lw $t0, 152($sp)
lw $a0, 16($t0)
bnez $a0, label_38
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 204($sp)
#LoadInt 5
li $t0, 5
sw $t0, 208($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_51
lw $t1, 208($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_50
lw $t1, 204($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 212($sp)
#GetAttr left_48 = Int.value
lw $t0, 504($sp)
lw $t1, 16($t0)
sw $t1, 196($sp)
#GetAttr right_49 = Int.value
lw $t0, 204($sp)
lw $t1, 16($t0)
sw $t1, 200($sp)
#BinaryOperator left_48 = right_49
lw $a0, 196($sp)
lw $t1, 200($sp)
seq $a0, $a0, $t1
sw $a0, 192($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 188($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_47
lw $t1, 192($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_46
lw $t1, 188($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 216($sp)
# IFGoto result_46 -> label_39
lw $t0, 188($sp)
lw $a0, 16($t0)
bnez $a0, label_39
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 240($sp)
#LoadInt 6
li $t0, 6
sw $t0, 244($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_60
lw $t1, 244($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_59
lw $t1, 240($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 248($sp)
#GetAttr left_57 = Int.value
lw $t0, 504($sp)
lw $t1, 16($t0)
sw $t1, 232($sp)
#GetAttr right_58 = Int.value
lw $t0, 240($sp)
lw $t1, 16($t0)
sw $t1, 236($sp)
#BinaryOperator left_57 = right_58
lw $a0, 232($sp)
lw $t1, 236($sp)
seq $a0, $a0, $t1
sw $a0, 228($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 224($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_56
lw $t1, 228($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_55
lw $t1, 224($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 252($sp)
# IFGoto result_55 -> label_40
lw $t0, 224($sp)
lw $a0, 16($t0)
bnez $a0, label_40
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 276($sp)
#LoadInt 7
li $t0, 7
sw $t0, 280($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_69
lw $t1, 280($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_68
lw $t1, 276($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 284($sp)
#GetAttr left_66 = Int.value
lw $t0, 504($sp)
lw $t1, 16($t0)
sw $t1, 268($sp)
#GetAttr right_67 = Int.value
lw $t0, 276($sp)
lw $t1, 16($t0)
sw $t1, 272($sp)
#BinaryOperator left_66 = right_67
lw $a0, 268($sp)
lw $t1, 272($sp)
seq $a0, $a0, $t1
sw $a0, 264($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 260($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_65
lw $t1, 264($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_64
lw $t1, 260($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 288($sp)
# IFGoto result_64 -> label_41
lw $t0, 260($sp)
lw $a0, 16($t0)
bnez $a0, label_41
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 312($sp)
#LoadInt 8
li $t0, 8
sw $t0, 316($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_78
lw $t1, 316($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_77
lw $t1, 312($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 320($sp)
#GetAttr left_75 = Int.value
lw $t0, 504($sp)
lw $t1, 16($t0)
sw $t1, 304($sp)
#GetAttr right_76 = Int.value
lw $t0, 312($sp)
lw $t1, 16($t0)
sw $t1, 308($sp)
#BinaryOperator left_75 = right_76
lw $a0, 304($sp)
lw $t1, 308($sp)
seq $a0, $a0, $t1
sw $a0, 300($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 296($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_74
lw $t1, 300($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_73
lw $t1, 296($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 324($sp)
# IFGoto result_73 -> label_42
lw $t0, 296($sp)
lw $a0, 16($t0)
bnez $a0, label_42
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 348($sp)
#LoadInt 9
li $t0, 9
sw $t0, 352($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_87
lw $t1, 352($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_86
lw $t1, 348($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 356($sp)
#GetAttr left_84 = Int.value
lw $t0, 504($sp)
lw $t1, 16($t0)
sw $t1, 340($sp)
#GetAttr right_85 = Int.value
lw $t0, 348($sp)
lw $t1, 16($t0)
sw $t1, 344($sp)
#BinaryOperator left_84 = right_85
lw $a0, 340($sp)
lw $t1, 344($sp)
seq $a0, $a0, $t1
sw $a0, 336($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 332($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_83
lw $t1, 336($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_82
lw $t1, 332($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 360($sp)
# IFGoto result_82 -> label_43
lw $t0, 332($sp)
lw $a0, 16($t0)
bnez $a0, label_43
#VCall abort
move $t0, $sp
# Arg self
lw $t1, 500($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 500($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 0($t2)
jal $t3
sw $a1, 364($sp)
#LoadStr empty_str
la $t0, empty_str
sw $t0, 368($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 372($sp)
#CallNode String_init
move $t0, $sp
# Arg l_91
lw $t1, 368($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_92
lw $t1, 372($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 376($sp)
#AssignNode result_81 = instance_92
lw $t1, 372($sp)
sw $t1, 328($sp)
#Goto label_44
b label_44
#LabelNode label_43
label_43:
#LoadStr msg_12
la $t0, msg_12
sw $t0, 380($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 384($sp)
#CallNode String_init
move $t0, $sp
# Arg l_94
lw $t1, 380($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_95
lw $t1, 384($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 388($sp)
#AssignNode result_81 = instance_95
lw $t1, 384($sp)
sw $t1, 328($sp)
#LabelNode label_44
label_44:
#AssignNode result_72 = result_81
lw $t1, 328($sp)
sw $t1, 292($sp)
#Goto label_45
b label_45
#LabelNode label_42
label_42:
#LoadStr msg_11
la $t0, msg_11
sw $t0, 392($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 396($sp)
#CallNode String_init
move $t0, $sp
# Arg l_97
lw $t1, 392($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_98
lw $t1, 396($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 400($sp)
#AssignNode result_72 = instance_98
lw $t1, 396($sp)
sw $t1, 292($sp)
#LabelNode label_45
label_45:
#AssignNode result_63 = result_72
lw $t1, 292($sp)
sw $t1, 256($sp)
#Goto label_46
b label_46
#LabelNode label_41
label_41:
#LoadStr msg_10
la $t0, msg_10
sw $t0, 404($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 408($sp)
#CallNode String_init
move $t0, $sp
# Arg l_100
lw $t1, 404($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_101
lw $t1, 408($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 412($sp)
#AssignNode result_63 = instance_101
lw $t1, 408($sp)
sw $t1, 256($sp)
#LabelNode label_46
label_46:
#AssignNode result_54 = result_63
lw $t1, 256($sp)
sw $t1, 220($sp)
#Goto label_47
b label_47
#LabelNode label_40
label_40:
#LoadStr msg_9
la $t0, msg_9
sw $t0, 416($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 420($sp)
#CallNode String_init
move $t0, $sp
# Arg l_103
lw $t1, 416($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_104
lw $t1, 420($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 424($sp)
#AssignNode result_54 = instance_104
lw $t1, 420($sp)
sw $t1, 220($sp)
#LabelNode label_47
label_47:
#AssignNode result_45 = result_54
lw $t1, 220($sp)
sw $t1, 184($sp)
#Goto label_48
b label_48
#LabelNode label_39
label_39:
#LoadStr msg_8
la $t0, msg_8
sw $t0, 428($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 432($sp)
#CallNode String_init
move $t0, $sp
# Arg l_106
lw $t1, 428($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_107
lw $t1, 432($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 436($sp)
#AssignNode result_45 = instance_107
lw $t1, 432($sp)
sw $t1, 184($sp)
#LabelNode label_48
label_48:
#AssignNode result_36 = result_45
lw $t1, 184($sp)
sw $t1, 148($sp)
#Goto label_49
b label_49
#LabelNode label_38
label_38:
#LoadStr msg_7
la $t0, msg_7
sw $t0, 440($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 444($sp)
#CallNode String_init
move $t0, $sp
# Arg l_109
lw $t1, 440($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_110
lw $t1, 444($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 448($sp)
#AssignNode result_36 = instance_110
lw $t1, 444($sp)
sw $t1, 148($sp)
#LabelNode label_49
label_49:
#AssignNode result_27 = result_36
lw $t1, 148($sp)
sw $t1, 112($sp)
#Goto label_50
b label_50
#LabelNode label_37
label_37:
#LoadStr msg_6
la $t0, msg_6
sw $t0, 452($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 456($sp)
#CallNode String_init
move $t0, $sp
# Arg l_112
lw $t1, 452($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_113
lw $t1, 456($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 460($sp)
#AssignNode result_27 = instance_113
lw $t1, 456($sp)
sw $t1, 112($sp)
#LabelNode label_50
label_50:
#AssignNode result_18 = result_27
lw $t1, 112($sp)
sw $t1, 76($sp)
#Goto label_51
b label_51
#LabelNode label_36
label_36:
#LoadStr msg_5
la $t0, msg_5
sw $t0, 464($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 468($sp)
#CallNode String_init
move $t0, $sp
# Arg l_115
lw $t1, 464($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_116
lw $t1, 468($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 472($sp)
#AssignNode result_18 = instance_116
lw $t1, 468($sp)
sw $t1, 76($sp)
#LabelNode label_51
label_51:
#AssignNode result_9 = result_18
lw $t1, 76($sp)
sw $t1, 40($sp)
#Goto label_52
b label_52
#LabelNode label_35
label_35:
#LoadStr msg_4
la $t0, msg_4
sw $t0, 476($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 480($sp)
#CallNode String_init
move $t0, $sp
# Arg l_118
lw $t1, 476($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_119
lw $t1, 480($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 484($sp)
#AssignNode result_9 = instance_119
lw $t1, 480($sp)
sw $t1, 40($sp)
#LabelNode label_52
label_52:
#AssignNode result_0 = result_9
lw $t1, 40($sp)
sw $t1, 4($sp)
#Goto label_53
b label_53
#LabelNode label_34
label_34:
#LoadStr msg_3
la $t0, msg_3
sw $t0, 488($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 492($sp)
#CallNode String_init
move $t0, $sp
# Arg l_121
lw $t1, 488($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_122
lw $t1, 492($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 496($sp)
#AssignNode result_0 = instance_122
lw $t1, 492($sp)
sw $t1, 4($sp)
#LabelNode label_53
label_53:
#Return result_0
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 508
jr $ra
A2I.a2i:
addi $sp, $sp, -312
addi $sp, $sp, -4
sw $ra, 0($sp)
#VCall length
move $t0, $sp
# Arg s
lw $t1, 320($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 320($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 24($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 28($sp)
#LoadInt 0
li $t0, 0
sw $t0, 32($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_7
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 36($sp)
#GetAttr left_3 = Int.value
lw $t0, 24($sp)
lw $t1, 16($t0)
sw $t1, 16($sp)
#GetAttr right_4 = Int.value
lw $t0, 28($sp)
lw $t1, 16($t0)
sw $t1, 20($sp)
#BinaryOperator left_3 = right_4
lw $a0, 16($sp)
lw $t1, 20($sp)
seq $a0, $a0, $t1
sw $a0, 12($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 40($sp)
# IFGoto result_1 -> label_54
lw $t0, 8($sp)
lw $a0, 16($t0)
bnez $a0, label_54
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 68($sp)
#LoadInt 1
li $t0, 1
sw $t0, 72($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_17
lw $t1, 72($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_16
lw $t1, 68($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 76($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 80($sp)
#LoadInt 0
li $t0, 0
sw $t0, 84($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_20
lw $t1, 84($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_19
lw $t1, 80($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 88($sp)
#VCall substr
move $t0, $sp
# Arg instance_16
lw $t1, 68($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_19
lw $t1, 80($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg s
lw $t1, 320($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 320($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 20($t2)
jal $t3
sw $a1, 64($sp)
#LoadStr msg_13
la $t0, msg_13
sw $t0, 92($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 96($sp)
#CallNode String_init
move $t0, $sp
# Arg l_22
lw $t1, 92($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_23
lw $t1, 96($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 100($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_23
lw $t1, 96($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_15
lw $t1, 64($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 52($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 48($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_12
lw $t1, 52($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_11
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 104($sp)
# IFGoto result_11 -> label_55
lw $t0, 48($sp)
lw $a0, 16($t0)
bnez $a0, label_55
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 132($sp)
#LoadInt 1
li $t0, 1
sw $t0, 136($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_33
lw $t1, 136($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_32
lw $t1, 132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 140($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 144($sp)
#LoadInt 0
li $t0, 0
sw $t0, 148($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_36
lw $t1, 148($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_35
lw $t1, 144($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 152($sp)
#VCall substr
move $t0, $sp
# Arg instance_32
lw $t1, 132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_35
lw $t1, 144($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg s
lw $t1, 320($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 320($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 20($t2)
jal $t3
sw $a1, 128($sp)
#LoadStr msg_14
la $t0, msg_14
sw $t0, 156($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 160($sp)
#CallNode String_init
move $t0, $sp
# Arg l_38
lw $t1, 156($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_39
lw $t1, 160($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 164($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_39
lw $t1, 160($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_31
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 116($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 112($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_28
lw $t1, 116($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_27
lw $t1, 112($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 168($sp)
# IFGoto result_27 -> label_56
lw $t0, 112($sp)
lw $a0, 16($t0)
bnez $a0, label_56
#VCall a2i_aux
move $t0, $sp
# Arg s
lw $t1, 320($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 316($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 316($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 24($t2)
jal $t3
sw $a1, 172($sp)
#AssignNode result_26 = result_42
lw $t1, 172($sp)
sw $t1, 108($sp)
#Goto label_57
b label_57
#LabelNode label_56
label_56:
#VCall length
move $t0, $sp
# Arg s
lw $t1, 320($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 320($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 200($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 204($sp)
#LoadInt 1
li $t0, 1
sw $t0, 208($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_51
lw $t1, 208($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_50
lw $t1, 204($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 212($sp)
#GetAttr left_47 = Int.value
lw $t0, 200($sp)
lw $t1, 16($t0)
sw $t1, 192($sp)
#GetAttr right_48 = Int.value
lw $t0, 204($sp)
lw $t1, 16($t0)
sw $t1, 196($sp)
#BinaryOperator left_47 - right_48
lw $a0, 192($sp)
lw $t1, 196($sp)
sub $a0, $a0, $t1
sw $a0, 188($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 184($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_46
lw $t1, 188($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_45
lw $t1, 184($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 216($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 220($sp)
#LoadInt 1
li $t0, 1
sw $t0, 224($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_55
lw $t1, 224($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_54
lw $t1, 220($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 228($sp)
#VCall substr
move $t0, $sp
# Arg result_45
lw $t1, 184($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_54
lw $t1, 220($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg s
lw $t1, 320($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 320($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 20($t2)
jal $t3
sw $a1, 180($sp)
#VCall a2i_aux
move $t0, $sp
# Arg result_44
lw $t1, 180($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 316($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 316($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 24($t2)
jal $t3
sw $a1, 176($sp)
#AssignNode result_26 = result_43
lw $t1, 176($sp)
sw $t1, 108($sp)
#LabelNode label_57
label_57:
#AssignNode result_10 = result_26
lw $t1, 108($sp)
sw $t1, 44($sp)
#Goto label_58
b label_58
#LabelNode label_55
label_55:
#VCall length
move $t0, $sp
# Arg s
lw $t1, 320($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 320($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 268($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 272($sp)
#LoadInt 1
li $t0, 1
sw $t0, 276($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_68
lw $t1, 276($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_67
lw $t1, 272($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 280($sp)
#GetAttr left_64 = Int.value
lw $t0, 268($sp)
lw $t1, 16($t0)
sw $t1, 260($sp)
#GetAttr right_65 = Int.value
lw $t0, 272($sp)
lw $t1, 16($t0)
sw $t1, 264($sp)
#BinaryOperator left_64 - right_65
lw $a0, 260($sp)
lw $t1, 264($sp)
sub $a0, $a0, $t1
sw $a0, 256($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 252($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_63
lw $t1, 256($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_62
lw $t1, 252($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 284($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 288($sp)
#LoadInt 1
li $t0, 1
sw $t0, 292($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_72
lw $t1, 292($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_71
lw $t1, 288($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 296($sp)
#VCall substr
move $t0, $sp
# Arg result_62
lw $t1, 252($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_71
lw $t1, 288($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg s
lw $t1, 320($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 320($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 20($t2)
jal $t3
sw $a1, 248($sp)
#VCall a2i_aux
move $t0, $sp
# Arg result_61
lw $t1, 248($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 316($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 316($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 24($t2)
jal $t3
sw $a1, 244($sp)
#GetAttr l_59 = Int.value
lw $t0, 244($sp)
lw $t1, 16($t0)
sw $t1, 240($sp)
#UnaryOperator ~ l_59
lw $t1, 240($sp)
neg $a0, $t1
sw $a0, 236($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 232($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_58
lw $t1, 236($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_57
lw $t1, 232($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 300($sp)
#AssignNode result_10 = result_57
lw $t1, 232($sp)
sw $t1, 44($sp)
#LabelNode label_58
label_58:
#AssignNode result_0 = result_10
lw $t1, 44($sp)
sw $t1, 4($sp)
#Goto label_59
b label_59
#LabelNode label_54
label_54:
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 304($sp)
#LoadInt 0
li $t0, 0
sw $t0, 308($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_76
lw $t1, 308($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_75
lw $t1, 304($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 312($sp)
#AssignNode result_0 = instance_75
lw $t1, 304($sp)
sw $t1, 4($sp)
#LabelNode label_59
label_59:
#Return result_0
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 324
jr $ra
A2I.a2i_aux:
addi $sp, $sp, -188
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
#LoadInt 0
li $t0, 0
sw $t0, 8($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 12($sp)
#AssignNode int_3 = instance_0
lw $t1, 4($sp)
sw $t1, 16($sp)
#VCall length
move $t0, $sp
# Arg s
lw $t1, 196($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 196($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 20($sp)
#AssignNode j_5 = result_4
lw $t1, 20($sp)
sw $t1, 24($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 28($sp)
#LoadInt 0
li $t0, 0
sw $t0, 32($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_7
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 36($sp)
#AssignNode i_9 = instance_6
lw $t1, 28($sp)
sw $t1, 40($sp)
#LabelNode label_60
label_60:
#GetAttr left_13 = Int.value
lw $t0, 40($sp)
lw $t1, 16($t0)
sw $t1, 56($sp)
#GetAttr right_14 = Int.value
lw $t0, 24($sp)
lw $t1, 16($t0)
sw $t1, 60($sp)
#BinaryOperator left_13 < right_14
lw $a0, 56($sp)
lw $t1, 60($sp)
slt $a0, $a0, $t1
sw $a0, 52($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 48($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_12
lw $t1, 52($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_11
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 64($sp)
# IFGoto result_11 -> label_61
lw $t0, 48($sp)
lw $a0, 16($t0)
bnez $a0, label_61
#Goto label_62
b label_62
#LabelNode label_61
label_61:
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 100($sp)
#LoadInt 10
li $t0, 10
sw $t0, 104($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_25
lw $t1, 104($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_24
lw $t1, 100($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 108($sp)
#GetAttr left_22 = Int.value
lw $t0, 16($sp)
lw $t1, 16($t0)
sw $t1, 92($sp)
#GetAttr right_23 = Int.value
lw $t0, 100($sp)
lw $t1, 16($t0)
sw $t1, 96($sp)
#BinaryOperator left_22 * right_23
lw $a0, 92($sp)
lw $t1, 96($sp)
mul $a0, $a0, $t1
sw $a0, 88($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 84($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_21
lw $t1, 88($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_20
lw $t1, 84($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 112($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 124($sp)
#LoadInt 1
li $t0, 1
sw $t0, 128($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_31
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_30
lw $t1, 124($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 132($sp)
#VCall substr
move $t0, $sp
# Arg instance_30
lw $t1, 124($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg i_9
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg s
lw $t1, 196($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 196($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 20($t2)
jal $t3
sw $a1, 120($sp)
#VCall c2i
move $t0, $sp
# Arg result_29
lw $t1, 120($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 192($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 192($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 116($sp)
#GetAttr left_18 = Int.value
lw $t0, 84($sp)
lw $t1, 16($t0)
sw $t1, 76($sp)
#GetAttr right_19 = Int.value
lw $t0, 116($sp)
lw $t1, 16($t0)
sw $t1, 80($sp)
#BinaryOperator left_18 + right_19
lw $a0, 76($sp)
lw $t1, 80($sp)
add $a0, $a0, $t1
sw $a0, 72($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 68($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_17
lw $t1, 72($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_16
lw $t1, 68($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 136($sp)
#AssignNode int_3 = result_16
lw $t1, 68($sp)
sw $t1, 16($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 160($sp)
#LoadInt 1
li $t0, 1
sw $t0, 164($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_40
lw $t1, 164($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_39
lw $t1, 160($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 168($sp)
#GetAttr left_37 = Int.value
lw $t0, 40($sp)
lw $t1, 16($t0)
sw $t1, 152($sp)
#GetAttr right_38 = Int.value
lw $t0, 160($sp)
lw $t1, 16($t0)
sw $t1, 156($sp)
#BinaryOperator left_37 + right_38
lw $a0, 152($sp)
lw $t1, 156($sp)
add $a0, $a0, $t1
sw $a0, 148($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 144($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_36
lw $t1, 148($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_35
lw $t1, 144($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 172($sp)
#AssignNode i_9 = result_35
lw $t1, 144($sp)
sw $t1, 40($sp)
#Goto label_60
b label_60
#LabelNode label_62
label_62:
#AssignNode result_44 = result_10
lw $t1, 44($sp)
sw $t1, 180($sp)
#AssignNode result_45 = result_44
lw $t1, 180($sp)
sw $t1, 184($sp)
#AssignNode result_46 = int_3
lw $t1, 16($sp)
sw $t1, 188($sp)
#Return result_46
lw $a1, 188($sp)
lw $ra, 0($sp)
addi $sp, $sp, 200
jr $ra
A2I.i2a:
addi $sp, $sp, -156
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 24($sp)
#LoadInt 0
li $t0, 0
sw $t0, 28($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 32($sp)
#GetAttr left_3 = Int.value
lw $t0, 164($sp)
lw $t1, 16($t0)
sw $t1, 16($sp)
#GetAttr right_4 = Int.value
lw $t0, 24($sp)
lw $t1, 16($t0)
sw $t1, 20($sp)
#BinaryOperator left_3 = right_4
lw $a0, 16($sp)
lw $t1, 20($sp)
seq $a0, $a0, $t1
sw $a0, 12($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 36($sp)
# IFGoto result_1 -> label_63
lw $t0, 8($sp)
lw $a0, 16($t0)
bnez $a0, label_63
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 60($sp)
#LoadInt 0
li $t0, 0
sw $t0, 64($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_15
lw $t1, 64($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_14
lw $t1, 60($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 68($sp)
#GetAttr left_12 = Int.value
lw $t0, 60($sp)
lw $t1, 16($t0)
sw $t1, 52($sp)
#GetAttr right_13 = Int.value
lw $t0, 164($sp)
lw $t1, 16($t0)
sw $t1, 56($sp)
#BinaryOperator left_12 < right_13
lw $a0, 52($sp)
lw $t1, 56($sp)
slt $a0, $a0, $t1
sw $a0, 48($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 44($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_11
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_10
lw $t1, 44($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 72($sp)
# IFGoto result_10 -> label_64
lw $t0, 44($sp)
lw $a0, 16($t0)
bnez $a0, label_64
#LoadStr msg_13
la $t0, msg_13
sw $t0, 80($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 84($sp)
#CallNode String_init
move $t0, $sp
# Arg l_19
lw $t1, 80($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_20
lw $t1, 84($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 88($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 124($sp)
#LoadInt 1
li $t0, 1
sw $t0, 128($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_31
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_30
lw $t1, 124($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 132($sp)
#GetAttr l_29 = Int.value
lw $t0, 124($sp)
lw $t1, 16($t0)
sw $t1, 120($sp)
#UnaryOperator ~ l_29
lw $t1, 120($sp)
neg $a0, $t1
sw $a0, 116($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 112($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_28
lw $t1, 116($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_27
lw $t1, 112($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 136($sp)
#GetAttr left_25 = Int.value
lw $t0, 164($sp)
lw $t1, 16($t0)
sw $t1, 104($sp)
#GetAttr right_26 = Int.value
lw $t0, 112($sp)
lw $t1, 16($t0)
sw $t1, 108($sp)
#BinaryOperator left_25 * right_26
lw $a0, 104($sp)
lw $t1, 108($sp)
mul $a0, $a0, $t1
sw $a0, 100($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 96($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_24
lw $t1, 100($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_23
lw $t1, 96($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 140($sp)
#VCall i2a_aux
move $t0, $sp
# Arg result_23
lw $t1, 96($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 160($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 160($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 32($t2)
jal $t3
sw $a1, 92($sp)
#VCall concat
move $t0, $sp
# Arg result_22
lw $t1, 92($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_20
lw $t1, 84($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 84($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 76($sp)
#AssignNode result_9 = result_18
lw $t1, 76($sp)
sw $t1, 40($sp)
#Goto label_65
b label_65
#LabelNode label_64
label_64:
#VCall i2a_aux
move $t0, $sp
# Arg i
lw $t1, 164($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 160($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 160($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 32($t2)
jal $t3
sw $a1, 144($sp)
#AssignNode result_9 = result_35
lw $t1, 144($sp)
sw $t1, 40($sp)
#LabelNode label_65
label_65:
#AssignNode result_0 = result_9
lw $t1, 40($sp)
sw $t1, 4($sp)
#Goto label_66
b label_66
#LabelNode label_63
label_63:
#LoadStr msg_3
la $t0, msg_3
sw $t0, 148($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 152($sp)
#CallNode String_init
move $t0, $sp
# Arg l_36
lw $t1, 148($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_37
lw $t1, 152($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 156($sp)
#AssignNode result_0 = instance_37
lw $t1, 152($sp)
sw $t1, 4($sp)
#LabelNode label_66
label_66:
#Return result_0
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 168
jr $ra
A2I.i2a_aux:
addi $sp, $sp, -152
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 24($sp)
#LoadInt 0
li $t0, 0
sw $t0, 28($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 32($sp)
#GetAttr left_3 = Int.value
lw $t0, 160($sp)
lw $t1, 16($t0)
sw $t1, 16($sp)
#GetAttr right_4 = Int.value
lw $t0, 24($sp)
lw $t1, 16($t0)
sw $t1, 20($sp)
#BinaryOperator left_3 = right_4
lw $a0, 16($sp)
lw $t1, 20($sp)
seq $a0, $a0, $t1
sw $a0, 12($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 36($sp)
# IFGoto result_1 -> label_67
lw $t0, 8($sp)
lw $a0, 16($t0)
bnez $a0, label_67
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 56($sp)
#LoadInt 10
li $t0, 10
sw $t0, 60($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_14
lw $t1, 60($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_13
lw $t1, 56($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 64($sp)
#GetAttr left_11 = Int.value
lw $t0, 160($sp)
lw $t1, 16($t0)
sw $t1, 48($sp)
#GetAttr right_12 = Int.value
lw $t0, 56($sp)
lw $t1, 16($t0)
sw $t1, 52($sp)
#BinaryOperator left_11 / right_12
lw $a0, 48($sp)
lw $t1, 52($sp)
beq $t1, 0, div_zero_error
div $a0, $a0, $t1
sw $a0, 44($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 40($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_10
lw $t1, 44($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_9
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 68($sp)
#AssignNode next_17 = result_9
lw $t1, 40($sp)
sw $t1, 72($sp)
#VCall i2a_aux
move $t0, $sp
# Arg next_17
lw $t1, 72($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 156($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 156($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 32($t2)
jal $t3
sw $a1, 80($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 120($sp)
#LoadInt 10
li $t0, 10
sw $t0, 124($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_30
lw $t1, 124($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_29
lw $t1, 120($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 128($sp)
#GetAttr left_27 = Int.value
lw $t0, 72($sp)
lw $t1, 16($t0)
sw $t1, 112($sp)
#GetAttr right_28 = Int.value
lw $t0, 120($sp)
lw $t1, 16($t0)
sw $t1, 116($sp)
#BinaryOperator left_27 * right_28
lw $a0, 112($sp)
lw $t1, 116($sp)
mul $a0, $a0, $t1
sw $a0, 108($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 104($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_26
lw $t1, 108($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_25
lw $t1, 104($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 132($sp)
#GetAttr left_23 = Int.value
lw $t0, 160($sp)
lw $t1, 16($t0)
sw $t1, 96($sp)
#GetAttr right_24 = Int.value
lw $t0, 104($sp)
lw $t1, 16($t0)
sw $t1, 100($sp)
#BinaryOperator left_23 - right_24
lw $a0, 96($sp)
lw $t1, 100($sp)
sub $a0, $a0, $t1
sw $a0, 92($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 88($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_22
lw $t1, 92($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_21
lw $t1, 88($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 136($sp)
#VCall i2c
move $t0, $sp
# Arg result_21
lw $t1, 88($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 156($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 156($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 84($sp)
#VCall concat
move $t0, $sp
# Arg result_20
lw $t1, 84($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_19
lw $t1, 80($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 80($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 76($sp)
#AssignNode result_34 = result_18
lw $t1, 76($sp)
sw $t1, 140($sp)
#AssignNode result_0 = result_34
lw $t1, 140($sp)
sw $t1, 4($sp)
#Goto label_68
b label_68
#LabelNode label_67
label_67:
#LoadStr empty_str
la $t0, empty_str
sw $t0, 144($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 148($sp)
#CallNode String_init
move $t0, $sp
# Arg l_35
lw $t1, 144($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_36
lw $t1, 148($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 152($sp)
#AssignNode result_0 = instance_36
lw $t1, 148($sp)
sw $t1, 4($sp)
#LabelNode label_68
label_68:
#Return result_0
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 164
jr $ra
Main_init:
addi $sp, $sp, -28
addi $sp, $sp, -4
sw $ra, 0($sp)
#CallNode IO_init
move $t0, $sp
# Arg self
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal IO_init
sw $a1, 4($sp)
#Return None
move $a1, $zero
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 8($sp)
#LoadStr empty_str
la $t0, empty_str
sw $t0, 12($sp)
#CallNode String_init
move $t0, $sp
# Arg value_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 16($sp)
#SetAttr Mainchar = instance_1
lw $t0, 32($sp)
lw $t1, 8($sp)
sw $t1, 16($t0)
#SetAttr Mainavar = void
lw $t0, 32($sp)
la $t1, void
sw $t1, 20($t0)
#SetAttr Maina_var = void
lw $t0, 32($sp)
la $t1, void
sw $t1, 24($t0)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 20($sp)
#LoadInt 1
li $t0, 1
sw $t0, 24($sp)
#CallNode Bool_init
move $t0, $sp
# Arg value_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_4
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 28($sp)
#SetAttr Mainflag = instance_4
lw $t0, 32($sp)
lw $t1, 20($sp)
sw $t1, 28($t0)
lw $ra, 0($sp)
addi $sp, $sp, 36
jr $ra
Main.menu:
addi $sp, $sp, -356
addi $sp, $sp, -4
sw $ra, 0($sp)
#LoadStr msg_15
la $t0, msg_15
sw $t0, 8($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 12($sp)
#CallNode String_init
move $t0, $sp
# Arg l_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 16($sp)
#VCall out_string
move $t0, $sp
# Arg instance_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 4($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 360($sp)
lw $t1, 20($t0)
sw $t1, 304($sp)
#VCall print
move $t0, $sp
# Arg Main.avar
lw $t1, 304($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 20($sp)
#LoadStr msg_16
la $t0, msg_16
sw $t0, 32($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 36($sp)
#CallNode String_init
move $t0, $sp
# Arg l_7
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_8
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 40($sp)
#VCall out_string
move $t0, $sp
# Arg instance_8
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 28($sp)
#LoadStr msg_17
la $t0, msg_17
sw $t0, 48($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 52($sp)
#CallNode String_init
move $t0, $sp
# Arg l_11
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_12
lw $t1, 52($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 56($sp)
#VCall out_string
move $t0, $sp
# Arg instance_12
lw $t1, 52($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 44($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 360($sp)
lw $t1, 20($t0)
sw $t1, 304($sp)
#VCall print
move $t0, $sp
# Arg Main.avar
lw $t1, 304($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 60($sp)
#LoadStr msg_18
la $t0, msg_18
sw $t0, 72($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 76($sp)
#CallNode String_init
move $t0, $sp
# Arg l_17
lw $t1, 72($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_18
lw $t1, 76($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 80($sp)
#VCall out_string
move $t0, $sp
# Arg instance_18
lw $t1, 76($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 68($sp)
#LoadStr msg_19
la $t0, msg_19
sw $t0, 88($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 92($sp)
#CallNode String_init
move $t0, $sp
# Arg l_21
lw $t1, 88($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_22
lw $t1, 92($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 96($sp)
#VCall out_string
move $t0, $sp
# Arg instance_22
lw $t1, 92($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 84($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 360($sp)
lw $t1, 20($t0)
sw $t1, 304($sp)
#VCall print
move $t0, $sp
# Arg Main.avar
lw $t1, 304($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 100($sp)
#LoadStr msg_20
la $t0, msg_20
sw $t0, 112($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 116($sp)
#CallNode String_init
move $t0, $sp
# Arg l_27
lw $t1, 112($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_28
lw $t1, 116($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 120($sp)
#VCall out_string
move $t0, $sp
# Arg instance_28
lw $t1, 116($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 108($sp)
#LoadStr msg_21
la $t0, msg_21
sw $t0, 128($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 132($sp)
#CallNode String_init
move $t0, $sp
# Arg l_31
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_32
lw $t1, 132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 136($sp)
#VCall out_string
move $t0, $sp
# Arg instance_32
lw $t1, 132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 124($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 360($sp)
lw $t1, 20($t0)
sw $t1, 304($sp)
#VCall print
move $t0, $sp
# Arg Main.avar
lw $t1, 304($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 140($sp)
#LoadStr msg_22
la $t0, msg_22
sw $t0, 152($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 156($sp)
#CallNode String_init
move $t0, $sp
# Arg l_37
lw $t1, 152($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_38
lw $t1, 156($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 160($sp)
#VCall out_string
move $t0, $sp
# Arg instance_38
lw $t1, 156($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 148($sp)
#LoadStr msg_23
la $t0, msg_23
sw $t0, 168($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 172($sp)
#CallNode String_init
move $t0, $sp
# Arg l_41
lw $t1, 168($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_42
lw $t1, 172($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 176($sp)
#VCall out_string
move $t0, $sp
# Arg instance_42
lw $t1, 172($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 164($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 360($sp)
lw $t1, 20($t0)
sw $t1, 304($sp)
#VCall print
move $t0, $sp
# Arg Main.avar
lw $t1, 304($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 180($sp)
#LoadStr msg_24
la $t0, msg_24
sw $t0, 192($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 196($sp)
#CallNode String_init
move $t0, $sp
# Arg l_47
lw $t1, 192($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_48
lw $t1, 196($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 200($sp)
#VCall out_string
move $t0, $sp
# Arg instance_48
lw $t1, 196($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 188($sp)
#LoadStr msg_25
la $t0, msg_25
sw $t0, 208($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 212($sp)
#CallNode String_init
move $t0, $sp
# Arg l_51
lw $t1, 208($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_52
lw $t1, 212($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 216($sp)
#VCall out_string
move $t0, $sp
# Arg instance_52
lw $t1, 212($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 204($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 360($sp)
lw $t1, 20($t0)
sw $t1, 304($sp)
#VCall print
move $t0, $sp
# Arg Main.avar
lw $t1, 304($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 220($sp)
#LoadStr msg_26
la $t0, msg_26
sw $t0, 232($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 236($sp)
#CallNode String_init
move $t0, $sp
# Arg l_57
lw $t1, 232($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_58
lw $t1, 236($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 240($sp)
#VCall out_string
move $t0, $sp
# Arg instance_58
lw $t1, 236($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 228($sp)
#LoadStr msg_27
la $t0, msg_27
sw $t0, 248($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 252($sp)
#CallNode String_init
move $t0, $sp
# Arg l_61
lw $t1, 248($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_62
lw $t1, 252($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 256($sp)
#VCall out_string
move $t0, $sp
# Arg instance_62
lw $t1, 252($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 244($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 360($sp)
lw $t1, 20($t0)
sw $t1, 304($sp)
#VCall print
move $t0, $sp
# Arg Main.avar
lw $t1, 304($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 260($sp)
#LoadStr msg_28
la $t0, msg_28
sw $t0, 272($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 276($sp)
#CallNode String_init
move $t0, $sp
# Arg l_67
lw $t1, 272($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_68
lw $t1, 276($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 280($sp)
#VCall out_string
move $t0, $sp
# Arg instance_68
lw $t1, 276($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 268($sp)
#LoadStr msg_29
la $t0, msg_29
sw $t0, 288($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 292($sp)
#CallNode String_init
move $t0, $sp
# Arg l_71
lw $t1, 288($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_72
lw $t1, 292($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 296($sp)
#VCall out_string
move $t0, $sp
# Arg instance_72
lw $t1, 292($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 284($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 360($sp)
lw $t1, 20($t0)
sw $t1, 304($sp)
#VCall print
move $t0, $sp
# Arg Main.avar
lw $t1, 304($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 300($sp)
#LoadStr msg_30
la $t0, msg_30
sw $t0, 312($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 316($sp)
#CallNode String_init
move $t0, $sp
# Arg l_77
lw $t1, 312($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_78
lw $t1, 316($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 320($sp)
#VCall out_string
move $t0, $sp
# Arg instance_78
lw $t1, 316($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 308($sp)
#LoadStr msg_31
la $t0, msg_31
sw $t0, 328($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 332($sp)
#CallNode String_init
move $t0, $sp
# Arg l_81
lw $t1, 328($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_82
lw $t1, 332($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 336($sp)
#VCall out_string
move $t0, $sp
# Arg instance_82
lw $t1, 332($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 324($sp)
#LoadStr msg_32
la $t0, msg_32
sw $t0, 344($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 348($sp)
#CallNode String_init
move $t0, $sp
# Arg l_85
lw $t1, 344($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_86
lw $t1, 348($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 352($sp)
#VCall out_string
move $t0, $sp
# Arg instance_86
lw $t1, 348($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 340($sp)
#VCall in_string
move $t0, $sp
# Arg self
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 360($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 20($t2)
jal $t3
sw $a1, 356($sp)
#Return result_88
lw $a1, 356($sp)
lw $ra, 0($sp)
addi $sp, $sp, 364
jr $ra
Main.prompt:
addi $sp, $sp, -36
addi $sp, $sp, -4
sw $ra, 0($sp)
#LoadStr msg_1
la $t0, msg_1
sw $t0, 8($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 12($sp)
#CallNode String_init
move $t0, $sp
# Arg l_1
lw $t1, 8($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 16($sp)
#VCall out_string
move $t0, $sp
# Arg instance_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 40($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 4($sp)
#LoadStr msg_33
la $t0, msg_33
sw $t0, 24($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 28($sp)
#CallNode String_init
move $t0, $sp
# Arg l_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 32($sp)
#VCall out_string
move $t0, $sp
# Arg instance_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 40($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 20($sp)
#VCall in_string
move $t0, $sp
# Arg self
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 40($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 20($t2)
jal $t3
sw $a1, 36($sp)
#Return result_8
lw $a1, 36($sp)
lw $ra, 0($sp)
addi $sp, $sp, 44
jr $ra
Main.get_int:
addi $sp, $sp, -32
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 6:tag A2I:Class_name 4:Class_size
li $a0, 16
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 6
sw $t1, 0($t0)
la $t1, A2I_name
sw $t1, 4($t0)
li $t1, 4
sw $t1, 8($t0)
la $t1, A2I_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
#CallNode A2I_init
move $t0, $sp
# Arg result_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal A2I_init
sw $a1, 8($sp)
#AssignNode z_2 = result_0
lw $t1, 4($sp)
sw $t1, 12($sp)
#VCall prompt
move $t0, $sp
# Arg self
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 36($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 32($t2)
jal $t3
sw $a1, 16($sp)
#AssignNode s_4 = result_3
lw $t1, 16($sp)
sw $t1, 20($sp)
#VCall a2i
move $t0, $sp
# Arg s_4
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg z_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 12($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 20($t2)
jal $t3
sw $a1, 24($sp)
#AssignNode result_6 = result_5
lw $t1, 24($sp)
sw $t1, 28($sp)
#AssignNode result_7 = result_6
lw $t1, 28($sp)
sw $t1, 32($sp)
#Return result_7
lw $a1, 32($sp)
lw $ra, 0($sp)
addi $sp, $sp, 40
jr $ra
Main.is_even:
addi $sp, $sp, -196
addi $sp, $sp, -4
sw $ra, 0($sp)
#AssignNode x_0 = num
lw $t1, 204($sp)
sw $t1, 4($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 28($sp)
#LoadInt 0
li $t0, 0
sw $t0, 32($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_7
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 36($sp)
#GetAttr left_4 = Int.value
lw $t0, 4($sp)
lw $t1, 16($t0)
sw $t1, 20($sp)
#GetAttr right_5 = Int.value
lw $t0, 28($sp)
lw $t1, 16($t0)
sw $t1, 24($sp)
#BinaryOperator left_4 < right_5
lw $a0, 20($sp)
lw $t1, 24($sp)
slt $a0, $a0, $t1
sw $a0, 16($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 12($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_3
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 40($sp)
# IFGoto result_2 -> label_69
lw $t0, 12($sp)
lw $a0, 16($t0)
bnez $a0, label_69
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 64($sp)
#LoadInt 0
li $t0, 0
sw $t0, 68($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_16
lw $t1, 68($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_15
lw $t1, 64($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 72($sp)
#GetAttr left_13 = Int.value
lw $t0, 64($sp)
lw $t1, 16($t0)
sw $t1, 56($sp)
#GetAttr right_14 = Int.value
lw $t0, 4($sp)
lw $t1, 16($t0)
sw $t1, 60($sp)
#BinaryOperator left_13 = right_14
lw $a0, 56($sp)
lw $t1, 60($sp)
seq $a0, $a0, $t1
sw $a0, 52($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 48($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_12
lw $t1, 52($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_11
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 76($sp)
# IFGoto result_11 -> label_70
lw $t0, 48($sp)
lw $a0, 16($t0)
bnez $a0, label_70
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 100($sp)
#LoadInt 1
li $t0, 1
sw $t0, 104($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_25
lw $t1, 104($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_24
lw $t1, 100($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 108($sp)
#GetAttr left_22 = Int.value
lw $t0, 100($sp)
lw $t1, 16($t0)
sw $t1, 92($sp)
#GetAttr right_23 = Int.value
lw $t0, 4($sp)
lw $t1, 16($t0)
sw $t1, 96($sp)
#BinaryOperator left_22 = right_23
lw $a0, 92($sp)
lw $t1, 96($sp)
seq $a0, $a0, $t1
sw $a0, 88($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 84($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_21
lw $t1, 88($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_20
lw $t1, 84($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 112($sp)
# IFGoto result_20 -> label_71
lw $t0, 84($sp)
lw $a0, 16($t0)
bnez $a0, label_71
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 136($sp)
#LoadInt 2
li $t0, 2
sw $t0, 140($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_34
lw $t1, 140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_33
lw $t1, 136($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 144($sp)
#GetAttr left_31 = Int.value
lw $t0, 4($sp)
lw $t1, 16($t0)
sw $t1, 128($sp)
#GetAttr right_32 = Int.value
lw $t0, 136($sp)
lw $t1, 16($t0)
sw $t1, 132($sp)
#BinaryOperator left_31 - right_32
lw $a0, 128($sp)
lw $t1, 132($sp)
sub $a0, $a0, $t1
sw $a0, 124($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 120($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_30
lw $t1, 124($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_29
lw $t1, 120($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 148($sp)
#VCall is_even
move $t0, $sp
# Arg result_29
lw $t1, 120($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 200($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 200($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 40($t2)
jal $t3
sw $a1, 116($sp)
#AssignNode result_19 = result_28
lw $t1, 116($sp)
sw $t1, 80($sp)
#Goto label_72
b label_72
#LabelNode label_71
label_71:
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 152($sp)
#LoadInt 0
li $t0, 0
sw $t0, 156($sp)
#CallNode Bool_init
move $t0, $sp
# Arg value_38
lw $t1, 156($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_37
lw $t1, 152($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 160($sp)
#AssignNode result_19 = instance_37
lw $t1, 152($sp)
sw $t1, 80($sp)
#LabelNode label_72
label_72:
#AssignNode result_10 = result_19
lw $t1, 80($sp)
sw $t1, 44($sp)
#Goto label_73
b label_73
#LabelNode label_70
label_70:
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 164($sp)
#LoadInt 1
li $t0, 1
sw $t0, 168($sp)
#CallNode Bool_init
move $t0, $sp
# Arg value_41
lw $t1, 168($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_40
lw $t1, 164($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 172($sp)
#AssignNode result_10 = instance_40
lw $t1, 164($sp)
sw $t1, 44($sp)
#LabelNode label_73
label_73:
#AssignNode result_1 = result_10
lw $t1, 44($sp)
sw $t1, 8($sp)
#Goto label_74
b label_74
#LabelNode label_69
label_69:
#GetAttr l_46 = Int.value
lw $t0, 4($sp)
lw $t1, 16($t0)
sw $t1, 188($sp)
#UnaryOperator ~ l_46
lw $t1, 188($sp)
neg $a0, $t1
sw $a0, 184($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 180($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_45
lw $t1, 184($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_44
lw $t1, 180($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 192($sp)
#VCall is_even
move $t0, $sp
# Arg result_44
lw $t1, 180($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 200($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 200($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 40($t2)
jal $t3
sw $a1, 176($sp)
#AssignNode result_1 = result_43
lw $t1, 176($sp)
sw $t1, 8($sp)
#LabelNode label_74
label_74:
#AssignNode result_48 = result_1
lw $t1, 8($sp)
sw $t1, 196($sp)
#Return result_48
lw $a1, 196($sp)
lw $ra, 0($sp)
addi $sp, $sp, 208
jr $ra
Main.class_type:
addi $sp, $sp, -124
addi $sp, $sp, -4
sw $ra, 0($sp)
#Case var
lw $t0, 132($sp)
lw $t1, 0($t0)
la $a0, void
bne $t1, $a0, label_75
b case_void_error
#LabelNode label_75
label_75:
#Action
blt $t1, 9, label_77
bgt $t1, 9, label_77
#AssignNode e_1 = var
lw $t1, 132($sp)
sw $t1, 8($sp)
#LoadStr msg_34
la $t0, msg_34
sw $t0, 16($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 20($sp)
#CallNode String_init
move $t0, $sp
# Arg l_3
lw $t1, 16($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_4
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 24($sp)
#VCall out_string
move $t0, $sp
# Arg instance_4
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 128($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 12($sp)
#AssignNode result_0 = result_2
lw $t1, 12($sp)
sw $t1, 4($sp)
#Goto label_76
b label_76
#LabelNode label_77
label_77:
#Action
blt $t1, 8, label_78
bgt $t1, 9, label_78
#AssignNode d_6 = var
lw $t1, 132($sp)
sw $t1, 28($sp)
#LoadStr msg_35
la $t0, msg_35
sw $t0, 36($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 40($sp)
#CallNode String_init
move $t0, $sp
# Arg l_8
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_9
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 44($sp)
#VCall out_string
move $t0, $sp
# Arg instance_9
lw $t1, 40($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 128($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 32($sp)
#AssignNode result_0 = result_7
lw $t1, 32($sp)
sw $t1, 4($sp)
#Goto label_76
b label_76
#LabelNode label_78
label_78:
#Action
blt $t1, 7, label_79
bgt $t1, 7, label_79
#AssignNode c_11 = var
lw $t1, 132($sp)
sw $t1, 48($sp)
#LoadStr msg_36
la $t0, msg_36
sw $t0, 56($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 60($sp)
#CallNode String_init
move $t0, $sp
# Arg l_13
lw $t1, 56($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_14
lw $t1, 60($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 64($sp)
#VCall out_string
move $t0, $sp
# Arg instance_14
lw $t1, 60($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 128($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 52($sp)
#AssignNode result_0 = result_12
lw $t1, 52($sp)
sw $t1, 4($sp)
#Goto label_76
b label_76
#LabelNode label_79
label_79:
#Action
blt $t1, 6, label_80
bgt $t1, 9, label_80
#AssignNode b_16 = var
lw $t1, 132($sp)
sw $t1, 68($sp)
#LoadStr msg_37
la $t0, msg_37
sw $t0, 76($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 80($sp)
#CallNode String_init
move $t0, $sp
# Arg l_18
lw $t1, 76($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_19
lw $t1, 80($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 84($sp)
#VCall out_string
move $t0, $sp
# Arg instance_19
lw $t1, 80($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 128($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 72($sp)
#AssignNode result_0 = result_17
lw $t1, 72($sp)
sw $t1, 4($sp)
#Goto label_76
b label_76
#LabelNode label_80
label_80:
#Action
blt $t1, 5, label_81
bgt $t1, 9, label_81
#AssignNode a_21 = var
lw $t1, 132($sp)
sw $t1, 88($sp)
#LoadStr msg_38
la $t0, msg_38
sw $t0, 96($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 100($sp)
#CallNode String_init
move $t0, $sp
# Arg l_23
lw $t1, 96($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_24
lw $t1, 100($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 104($sp)
#VCall out_string
move $t0, $sp
# Arg instance_24
lw $t1, 100($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 128($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 92($sp)
#AssignNode result_0 = result_22
lw $t1, 92($sp)
sw $t1, 4($sp)
#Goto label_76
b label_76
#LabelNode label_81
label_81:
#Action
blt $t1, 0, label_82
bgt $t1, 9, label_82
#AssignNode o_26 = var
lw $t1, 132($sp)
sw $t1, 108($sp)
#LoadStr msg_39
la $t0, msg_39
sw $t0, 116($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 120($sp)
#CallNode String_init
move $t0, $sp
# Arg l_28
lw $t1, 116($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_29
lw $t1, 120($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 124($sp)
#VCall out_string
move $t0, $sp
# Arg instance_29
lw $t1, 120($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 128($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 112($sp)
#AssignNode result_0 = result_27
lw $t1, 112($sp)
sw $t1, 4($sp)
#Goto label_76
b label_76
#LabelNode label_82
label_82:
#Goto case_no_match_error
b case_no_match_error
#LabelNode label_76
label_76:
#Return result_0
lw $a1, 4($sp)
lw $ra, 0($sp)
addi $sp, $sp, 136
jr $ra
Main.print:
addi $sp, $sp, -44
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 6:tag A2I:Class_name 4:Class_size
li $a0, 16
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 6
sw $t1, 0($t0)
la $t1, A2I_name
sw $t1, 4($t0)
li $t1, 4
sw $t1, 8($t0)
la $t1, A2I_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
#CallNode A2I_init
move $t0, $sp
# Arg result_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal A2I_init
sw $a1, 8($sp)
#AssignNode z_2 = result_0
lw $t1, 4($sp)
sw $t1, 12($sp)
#VCall value
move $t0, $sp
# Arg var
lw $t1, 52($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 52($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 24($sp)
#VCall i2a
move $t0, $sp
# Arg result_5
lw $t1, 24($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg z_2
lw $t1, 12($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 12($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 28($t2)
jal $t3
sw $a1, 20($sp)
#VCall out_string
move $t0, $sp
# Arg result_4
lw $t1, 20($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 48($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 16($sp)
#LoadStr msg_40
la $t0, msg_40
sw $t0, 32($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 36($sp)
#CallNode String_init
move $t0, $sp
# Arg l_7
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_8
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 40($sp)
#VCall out_string
move $t0, $sp
# Arg instance_8
lw $t1, 36($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 48($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 48($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 28($sp)
#AssignNode result_10 = result_6
lw $t1, 28($sp)
sw $t1, 44($sp)
#Return result_10
lw $a1, 44($sp)
lw $ra, 0($sp)
addi $sp, $sp, 56
jr $ra
Main.main:
addi $sp, $sp, -1136
addi $sp, $sp, -4
sw $ra, 0($sp)
#Allocate 5:tag A:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 5
sw $t1, 0($t0)
la $t1, A_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, A_methods
sw $t1, 12($t0)
sw $t0, 4($sp)
#CallNode A_init
move $t0, $sp
# Arg result_0
lw $t1, 4($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal A_init
sw $a1, 8($sp)
#SetAttr Mainavar = result_0
lw $t0, 1140($sp)
lw $t1, 4($sp)
sw $t1, 20($t0)
#LabelNode label_83
label_83:
#GetAttr Main.flag = Main.flag
lw $t0, 1140($sp)
lw $t1, 28($t0)
sw $t1, 20($sp)
# IFGoto Main.flag -> label_84
lw $t0, 20($sp)
lw $a0, 16($t0)
bnez $a0, label_84
#Goto label_85
b label_85
#LabelNode label_84
label_84:
#LoadStr msg_41
la $t0, msg_41
sw $t0, 28($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 32($sp)
#CallNode String_init
move $t0, $sp
# Arg l_6
lw $t1, 28($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_7
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 36($sp)
#VCall out_string
move $t0, $sp
# Arg instance_7
lw $t1, 32($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 24($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall print
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 40($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall value
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1132($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 56($sp)
#VCall is_even
move $t0, $sp
# Arg result_13
lw $t1, 56($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 40($t2)
jal $t3
sw $a1, 52($sp)
# IFGoto result_12 -> label_86
lw $t0, 52($sp)
lw $a0, 16($t0)
bnez $a0, label_86
#LoadStr msg_42
la $t0, msg_42
sw $t0, 68($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 72($sp)
#CallNode String_init
move $t0, $sp
# Arg l_16
lw $t1, 68($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_17
lw $t1, 72($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 76($sp)
#VCall out_string
move $t0, $sp
# Arg instance_17
lw $t1, 72($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 64($sp)
#AssignNode result_11 = result_15
lw $t1, 64($sp)
sw $t1, 48($sp)
#Goto label_87
b label_87
#LabelNode label_86
label_86:
#LoadStr msg_43
la $t0, msg_43
sw $t0, 84($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 88($sp)
#CallNode String_init
move $t0, $sp
# Arg l_20
lw $t1, 84($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_21
lw $t1, 88($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 92($sp)
#VCall out_string
move $t0, $sp
# Arg instance_21
lw $t1, 88($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 80($sp)
#AssignNode result_11 = result_19
lw $t1, 80($sp)
sw $t1, 48($sp)
#LabelNode label_87
label_87:
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall class_type
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 44($t2)
jal $t3
sw $a1, 96($sp)
#VCall menu
move $t0, $sp
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 28($t2)
jal $t3
sw $a1, 104($sp)
#SetAttr Mainchar = result_25
lw $t0, 1140($sp)
lw $t1, 104($sp)
sw $t1, 16($t0)
#GetAttr Main.char = Main.char
lw $t0, 1140($sp)
lw $t1, 16($t0)
sw $t1, 492($sp)
#LoadStr msg_44
la $t0, msg_44
sw $t0, 136($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 140($sp)
#CallNode String_init
move $t0, $sp
# Arg l_33
lw $t1, 136($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_34
lw $t1, 140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 144($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_34
lw $t1, 140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg Main.char
lw $t1, 492($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 120($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 116($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_29
lw $t1, 120($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_28
lw $t1, 116($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 148($sp)
# IFGoto result_28 -> label_88
lw $t0, 116($sp)
lw $a0, 16($t0)
bnez $a0, label_88
#GetAttr Main.char = Main.char
lw $t0, 1140($sp)
lw $t1, 16($t0)
sw $t1, 492($sp)
#LoadStr msg_45
la $t0, msg_45
sw $t0, 176($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 180($sp)
#CallNode String_init
move $t0, $sp
# Arg l_43
lw $t1, 176($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_44
lw $t1, 180($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 184($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_44
lw $t1, 180($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg Main.char
lw $t1, 492($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 160($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 156($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_39
lw $t1, 160($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_38
lw $t1, 156($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 188($sp)
# IFGoto result_38 -> label_89
lw $t0, 156($sp)
lw $a0, 16($t0)
bnez $a0, label_89
#GetAttr Main.char = Main.char
lw $t0, 1140($sp)
lw $t1, 16($t0)
sw $t1, 492($sp)
#LoadStr msg_46
la $t0, msg_46
sw $t0, 216($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 220($sp)
#CallNode String_init
move $t0, $sp
# Arg l_53
lw $t1, 216($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_54
lw $t1, 220($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 224($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_54
lw $t1, 220($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg Main.char
lw $t1, 492($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 200($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 196($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_49
lw $t1, 200($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_48
lw $t1, 196($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 228($sp)
# IFGoto result_48 -> label_90
lw $t0, 196($sp)
lw $a0, 16($t0)
bnez $a0, label_90
#GetAttr Main.char = Main.char
lw $t0, 1140($sp)
lw $t1, 16($t0)
sw $t1, 492($sp)
#LoadStr msg_47
la $t0, msg_47
sw $t0, 256($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 260($sp)
#CallNode String_init
move $t0, $sp
# Arg l_63
lw $t1, 256($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_64
lw $t1, 260($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 264($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_64
lw $t1, 260($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg Main.char
lw $t1, 492($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 240($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 236($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_59
lw $t1, 240($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_58
lw $t1, 236($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 268($sp)
# IFGoto result_58 -> label_91
lw $t0, 236($sp)
lw $a0, 16($t0)
bnez $a0, label_91
#GetAttr Main.char = Main.char
lw $t0, 1140($sp)
lw $t1, 16($t0)
sw $t1, 492($sp)
#LoadStr msg_48
la $t0, msg_48
sw $t0, 296($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 300($sp)
#CallNode String_init
move $t0, $sp
# Arg l_73
lw $t1, 296($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_74
lw $t1, 300($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 304($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_74
lw $t1, 300($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg Main.char
lw $t1, 492($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 280($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 276($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_69
lw $t1, 280($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_68
lw $t1, 276($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 308($sp)
# IFGoto result_68 -> label_92
lw $t0, 276($sp)
lw $a0, 16($t0)
bnez $a0, label_92
#GetAttr Main.char = Main.char
lw $t0, 1140($sp)
lw $t1, 16($t0)
sw $t1, 492($sp)
#LoadStr msg_49
la $t0, msg_49
sw $t0, 336($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 340($sp)
#CallNode String_init
move $t0, $sp
# Arg l_83
lw $t1, 336($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_84
lw $t1, 340($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 344($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_84
lw $t1, 340($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg Main.char
lw $t1, 492($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 320($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 316($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_79
lw $t1, 320($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_78
lw $t1, 316($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 348($sp)
# IFGoto result_78 -> label_93
lw $t0, 316($sp)
lw $a0, 16($t0)
bnez $a0, label_93
#GetAttr Main.char = Main.char
lw $t0, 1140($sp)
lw $t1, 16($t0)
sw $t1, 492($sp)
#LoadStr msg_50
la $t0, msg_50
sw $t0, 376($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 380($sp)
#CallNode String_init
move $t0, $sp
# Arg l_93
lw $t1, 376($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_94
lw $t1, 380($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 384($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_94
lw $t1, 380($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg Main.char
lw $t1, 492($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 360($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 356($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_89
lw $t1, 360($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_88
lw $t1, 356($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 388($sp)
# IFGoto result_88 -> label_94
lw $t0, 356($sp)
lw $a0, 16($t0)
bnez $a0, label_94
#GetAttr Main.char = Main.char
lw $t0, 1140($sp)
lw $t1, 16($t0)
sw $t1, 492($sp)
#LoadStr msg_51
la $t0, msg_51
sw $t0, 416($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 420($sp)
#CallNode String_init
move $t0, $sp
# Arg l_103
lw $t1, 416($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_104
lw $t1, 420($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 424($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_104
lw $t1, 420($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg Main.char
lw $t1, 492($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 400($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 396($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_99
lw $t1, 400($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_98
lw $t1, 396($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 428($sp)
# IFGoto result_98 -> label_95
lw $t0, 396($sp)
lw $a0, 16($t0)
bnez $a0, label_95
#GetAttr Main.char = Main.char
lw $t0, 1140($sp)
lw $t1, 16($t0)
sw $t1, 492($sp)
#LoadStr msg_52
la $t0, msg_52
sw $t0, 456($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 460($sp)
#CallNode String_init
move $t0, $sp
# Arg l_113
lw $t1, 456($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_114
lw $t1, 460($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 464($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_114
lw $t1, 460($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg Main.char
lw $t1, 492($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 440($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 436($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_109
lw $t1, 440($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_108
lw $t1, 436($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 468($sp)
# IFGoto result_108 -> label_96
lw $t0, 436($sp)
lw $a0, 16($t0)
bnez $a0, label_96
#GetAttr Main.char = Main.char
lw $t0, 1140($sp)
lw $t1, 16($t0)
sw $t1, 492($sp)
#LoadStr msg_53
la $t0, msg_53
sw $t0, 496($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 500($sp)
#CallNode String_init
move $t0, $sp
# Arg l_123
lw $t1, 496($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_124
lw $t1, 500($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 504($sp)
#CallNode String_equals
move $t0, $sp
# Arg instance_124
lw $t1, 500($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg Main.char
lw $t1, 492($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_equals
sw $a1, 480($sp)
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 476($sp)
#CallNode Bool_init
move $t0, $sp
# Arg op_119
lw $t1, 480($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_118
lw $t1, 476($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 508($sp)
# IFGoto result_118 -> label_97
lw $t0, 476($sp)
lw $a0, 16($t0)
bnez $a0, label_97
#Allocate 5:tag A:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 5
sw $t1, 0($t0)
la $t1, A_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, A_methods
sw $t1, 12($t0)
sw $t0, 516($sp)
#CallNode A_init
move $t0, $sp
# Arg result_128
lw $t1, 516($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal A_init
sw $a1, 520($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall value
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1132($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 524($sp)
#VCall method1
move $t0, $sp
# Arg result_130
lw $t1, 524($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_128
lw $t1, 516($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 516($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 20($t2)
jal $t3
sw $a1, 512($sp)
#SetAttr Mainavar = result_127
lw $t0, 1140($sp)
lw $t1, 512($sp)
sw $t1, 20($t0)
#AssignNode result_117 = result_127
lw $t1, 512($sp)
sw $t1, 472($sp)
#Goto label_98
b label_98
#LabelNode label_97
label_97:
#Allocate 3:tag Bool:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 3
sw $t1, 0($t0)
la $t1, Bool_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Bool_methods
sw $t1, 12($t0)
sw $t0, 536($sp)
#LoadInt 0
li $t0, 0
sw $t0, 540($sp)
#CallNode Bool_init
move $t0, $sp
# Arg value_134
lw $t1, 540($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_133
lw $t1, 536($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Bool_init
sw $a1, 544($sp)
#SetAttr Mainflag = instance_133
lw $t0, 1140($sp)
lw $t1, 536($sp)
sw $t1, 28($t0)
#AssignNode result_117 = instance_133
lw $t1, 536($sp)
sw $t1, 472($sp)
#LabelNode label_98
label_98:
#AssignNode result_107 = result_117
lw $t1, 472($sp)
sw $t1, 432($sp)
#Goto label_99
b label_99
#LabelNode label_96
label_96:
#Allocate 5:tag A:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 5
sw $t1, 0($t0)
la $t1, A_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, A_methods
sw $t1, 12($t0)
sw $t0, 552($sp)
#CallNode A_init
move $t0, $sp
# Arg result_137
lw $t1, 552($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal A_init
sw $a1, 556($sp)
#SetAttr Mainavar = result_137
lw $t0, 1140($sp)
lw $t1, 552($sp)
sw $t1, 20($t0)
#AssignNode result_107 = result_137
lw $t1, 552($sp)
sw $t1, 432($sp)
#LabelNode label_99
label_99:
#AssignNode result_97 = result_107
lw $t1, 432($sp)
sw $t1, 392($sp)
#Goto label_100
b label_100
#LabelNode label_95
label_95:
#AssignNode x_140 = None
la $t1, void
sw $t1, 564($sp)
#Allocate 9:tag E:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 9
sw $t1, 0($t0)
la $t1, E_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, E_methods
sw $t1, 12($t0)
sw $t0, 572($sp)
#CallNode E_init
move $t0, $sp
# Arg result_142
lw $t1, 572($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal E_init
sw $a1, 576($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall value
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1132($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 580($sp)
#VCall method6
move $t0, $sp
# Arg result_144
lw $t1, 580($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_142
lw $t1, 572($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 572($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 44($t2)
jal $t3
sw $a1, 568($sp)
#AssignNode x_140 = result_141
lw $t1, 568($sp)
sw $t1, 564($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall value
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1132($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 608($sp)
#VCall value
move $t0, $sp
# Arg x_140
lw $t1, 564($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 564($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 632($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 636($sp)
#LoadInt 8
li $t0, 8
sw $t0, 640($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_159
lw $t1, 640($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_158
lw $t1, 636($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 644($sp)
#GetAttr left_155 = Int.value
lw $t0, 632($sp)
lw $t1, 16($t0)
sw $t1, 624($sp)
#GetAttr right_156 = Int.value
lw $t0, 636($sp)
lw $t1, 16($t0)
sw $t1, 628($sp)
#BinaryOperator left_155 * right_156
lw $a0, 624($sp)
lw $t1, 628($sp)
mul $a0, $a0, $t1
sw $a0, 620($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 616($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_154
lw $t1, 620($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_153
lw $t1, 616($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 648($sp)
#GetAttr left_149 = Int.value
lw $t0, 608($sp)
lw $t1, 16($t0)
sw $t1, 600($sp)
#GetAttr right_150 = Int.value
lw $t0, 616($sp)
lw $t1, 16($t0)
sw $t1, 604($sp)
#BinaryOperator left_149 - right_150
lw $a0, 600($sp)
lw $t1, 604($sp)
sub $a0, $a0, $t1
sw $a0, 596($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 592($sp)
#CallNode Int_init
move $t0, $sp
# Arg op_148
lw $t1, 596($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_147
lw $t1, 592($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 652($sp)
#AssignNode r_163 = result_147
lw $t1, 592($sp)
sw $t1, 656($sp)
#LoadStr msg_41
la $t0, msg_41
sw $t0, 664($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 668($sp)
#CallNode String_init
move $t0, $sp
# Arg l_165
lw $t1, 664($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_166
lw $t1, 668($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 672($sp)
#VCall out_string
move $t0, $sp
# Arg instance_166
lw $t1, 668($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 660($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall print
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 676($sp)
#LoadStr msg_54
la $t0, msg_54
sw $t0, 688($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 692($sp)
#CallNode String_init
move $t0, $sp
# Arg l_171
lw $t1, 688($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_172
lw $t1, 692($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 696($sp)
#VCall out_string
move $t0, $sp
# Arg instance_172
lw $t1, 692($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 684($sp)
#VCall print
move $t0, $sp
# Arg x_140
lw $t1, 564($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 700($sp)
#LoadStr msg_55
la $t0, msg_55
sw $t0, 708($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 712($sp)
#CallNode String_init
move $t0, $sp
# Arg l_176
lw $t1, 708($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_177
lw $t1, 712($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 716($sp)
#VCall out_string
move $t0, $sp
# Arg instance_177
lw $t1, 712($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 704($sp)
#Allocate 6:tag A2I:Class_name 4:Class_size
li $a0, 16
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 6
sw $t1, 0($t0)
la $t1, A2I_name
sw $t1, 4($t0)
li $t1, 4
sw $t1, 8($t0)
la $t1, A2I_methods
sw $t1, 12($t0)
sw $t0, 720($sp)
#CallNode A2I_init
move $t0, $sp
# Arg result_179
lw $t1, 720($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal A2I_init
sw $a1, 724($sp)
#AssignNode a_181 = result_179
lw $t1, 720($sp)
sw $t1, 728($sp)
#VCall i2a
move $t0, $sp
# Arg r_163
lw $t1, 656($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg a_181
lw $t1, 728($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 728($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 28($t2)
jal $t3
sw $a1, 736($sp)
#VCall out_string
move $t0, $sp
# Arg result_183
lw $t1, 736($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 732($sp)
#LoadStr msg_1
la $t0, msg_1
sw $t0, 744($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 748($sp)
#CallNode String_init
move $t0, $sp
# Arg l_185
lw $t1, 744($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_186
lw $t1, 748($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 752($sp)
#VCall out_string
move $t0, $sp
# Arg instance_186
lw $t1, 748($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 740($sp)
#AssignNode result_188 = result_184
lw $t1, 740($sp)
sw $t1, 756($sp)
#AssignNode result_189 = result_188
lw $t1, 756($sp)
sw $t1, 760($sp)
#SetAttr Mainavar = x_140
lw $t0, 1140($sp)
lw $t1, 564($sp)
sw $t1, 20($t0)
#AssignNode result_191 = x_140
lw $t1, 564($sp)
sw $t1, 768($sp)
#AssignNode result_97 = result_191
lw $t1, 768($sp)
sw $t1, 392($sp)
#LabelNode label_100
label_100:
#AssignNode result_87 = result_97
lw $t1, 392($sp)
sw $t1, 352($sp)
#Goto label_101
b label_101
#LabelNode label_94
label_94:
#Allocate 8:tag D:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 8
sw $t1, 0($t0)
la $t1, D_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, D_methods
sw $t1, 12($t0)
sw $t0, 780($sp)
#CallNode D_init
move $t0, $sp
# Arg result_194
lw $t1, 780($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal D_init
sw $a1, 784($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall value
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1132($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 788($sp)
#VCall method7
move $t0, $sp
# Arg result_196
lw $t1, 788($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_194
lw $t1, 780($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 780($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 40($t2)
jal $t3
sw $a1, 776($sp)
# IFGoto result_193 -> label_102
lw $t0, 776($sp)
lw $a0, 16($t0)
bnez $a0, label_102
#LoadStr msg_41
la $t0, msg_41
sw $t0, 800($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 804($sp)
#CallNode String_init
move $t0, $sp
# Arg l_199
lw $t1, 800($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_200
lw $t1, 804($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 808($sp)
#VCall out_string
move $t0, $sp
# Arg instance_200
lw $t1, 804($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 796($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall print
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 812($sp)
#LoadStr msg_56
la $t0, msg_56
sw $t0, 824($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 828($sp)
#CallNode String_init
move $t0, $sp
# Arg l_205
lw $t1, 824($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_206
lw $t1, 828($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 832($sp)
#VCall out_string
move $t0, $sp
# Arg instance_206
lw $t1, 828($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 820($sp)
#AssignNode result_192 = result_204
lw $t1, 820($sp)
sw $t1, 772($sp)
#Goto label_103
b label_103
#LabelNode label_102
label_102:
#LoadStr msg_41
la $t0, msg_41
sw $t0, 840($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 844($sp)
#CallNode String_init
move $t0, $sp
# Arg l_209
lw $t1, 840($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_210
lw $t1, 844($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 848($sp)
#VCall out_string
move $t0, $sp
# Arg instance_210
lw $t1, 844($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 836($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall print
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 48($t2)
jal $t3
sw $a1, 852($sp)
#LoadStr msg_57
la $t0, msg_57
sw $t0, 864($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 868($sp)
#CallNode String_init
move $t0, $sp
# Arg l_215
lw $t1, 864($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_216
lw $t1, 868($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 872($sp)
#VCall out_string
move $t0, $sp
# Arg instance_216
lw $t1, 868($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 860($sp)
#AssignNode result_192 = result_214
lw $t1, 860($sp)
sw $t1, 772($sp)
#LabelNode label_103
label_103:
#AssignNode result_87 = result_192
lw $t1, 772($sp)
sw $t1, 352($sp)
#LabelNode label_101
label_101:
#AssignNode result_77 = result_87
lw $t1, 352($sp)
sw $t1, 312($sp)
#Goto label_104
b label_104
#LabelNode label_93
label_93:
#Allocate 7:tag C:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 7
sw $t1, 0($t0)
la $t1, C_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, C_methods
sw $t1, 12($t0)
sw $t0, 880($sp)
#CallNode C_init
move $t0, $sp
# Arg result_219
lw $t1, 880($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal C_init
sw $a1, 884($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall value
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1132($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 888($sp)
#Allocate 7:tag C:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 7
sw $t1, 0($t0)
la $t1, C_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, C_methods
sw $t1, 12($t0)
sw $t0, 896($sp)
#VCall method5
move $t0, $sp
# Arg result_221
lw $t1, 888($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_219
lw $t1, 880($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 896($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 36($t2)
jal $t3
sw $a1, 876($sp)
#SetAttr Mainavar = result_218
lw $t0, 1140($sp)
lw $t1, 876($sp)
sw $t1, 20($t0)
#AssignNode result_77 = result_218
lw $t1, 876($sp)
sw $t1, 312($sp)
#LabelNode label_104
label_104:
#AssignNode result_67 = result_77
lw $t1, 312($sp)
sw $t1, 272($sp)
#Goto label_105
b label_105
#LabelNode label_92
label_92:
#Allocate 7:tag C:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 7
sw $t1, 0($t0)
la $t1, C_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, C_methods
sw $t1, 12($t0)
sw $t0, 908($sp)
#CallNode C_init
move $t0, $sp
# Arg result_226
lw $t1, 908($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal C_init
sw $a1, 912($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall value
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1132($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 916($sp)
#Allocate 6:tag B:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 6
sw $t1, 0($t0)
la $t1, B_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, B_methods
sw $t1, 12($t0)
sw $t0, 924($sp)
#VCall method5
move $t0, $sp
# Arg result_228
lw $t1, 916($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_226
lw $t1, 908($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 924($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 36($t2)
jal $t3
sw $a1, 904($sp)
#SetAttr Mainavar = result_225
lw $t0, 1140($sp)
lw $t1, 904($sp)
sw $t1, 20($t0)
#AssignNode result_67 = result_225
lw $t1, 904($sp)
sw $t1, 272($sp)
#LabelNode label_105
label_105:
#AssignNode result_57 = result_67
lw $t1, 272($sp)
sw $t1, 232($sp)
#Goto label_106
b label_106
#LabelNode label_91
label_91:
#Allocate 7:tag C:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 7
sw $t1, 0($t0)
la $t1, C_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, C_methods
sw $t1, 12($t0)
sw $t0, 936($sp)
#CallNode C_init
move $t0, $sp
# Arg result_233
lw $t1, 936($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal C_init
sw $a1, 940($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall value
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1132($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 944($sp)
#Allocate 5:tag A:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 5
sw $t1, 0($t0)
la $t1, A_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, A_methods
sw $t1, 12($t0)
sw $t0, 952($sp)
#VCall method5
move $t0, $sp
# Arg result_235
lw $t1, 944($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_233
lw $t1, 936($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 952($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 36($t2)
jal $t3
sw $a1, 932($sp)
#SetAttr Mainavar = result_232
lw $t0, 1140($sp)
lw $t1, 932($sp)
sw $t1, 20($t0)
#AssignNode result_57 = result_232
lw $t1, 932($sp)
sw $t1, 232($sp)
#LabelNode label_106
label_106:
#AssignNode result_47 = result_57
lw $t1, 232($sp)
sw $t1, 192($sp)
#Goto label_107
b label_107
#LabelNode label_90
label_90:
#Allocate 5:tag A:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 5
sw $t1, 0($t0)
la $t1, A_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, A_methods
sw $t1, 12($t0)
sw $t0, 964($sp)
#CallNode A_init
move $t0, $sp
# Arg result_240
lw $t1, 964($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal A_init
sw $a1, 968($sp)
#VCall get_int
move $t0, $sp
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 36($t2)
jal $t3
sw $a1, 972($sp)
#VCall set_var
move $t0, $sp
# Arg result_242
lw $t1, 972($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_240
lw $t1, 964($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 964($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 960($sp)
#SetAttr Maina_var = result_239
lw $t0, 1140($sp)
lw $t1, 960($sp)
sw $t1, 24($t0)
#Allocate 8:tag D:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 8
sw $t1, 0($t0)
la $t1, D_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, D_methods
sw $t1, 12($t0)
sw $t0, 984($sp)
#CallNode D_init
move $t0, $sp
# Arg result_245
lw $t1, 984($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal D_init
sw $a1, 988($sp)
#GetAttr Main.a_var = Main.a_var
lw $t0, 1140($sp)
lw $t1, 24($t0)
sw $t1, 1124($sp)
#VCall value
move $t0, $sp
# Arg Main.a_var
lw $t1, 1124($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1124($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 992($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall value
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1132($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 1000($sp)
#VCall method4
move $t0, $sp
# Arg result_247
lw $t1, 992($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_249
lw $t1, 1000($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_245
lw $t1, 984($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 984($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 32($t2)
jal $t3
sw $a1, 980($sp)
#SetAttr Mainavar = result_244
lw $t0, 1140($sp)
lw $t1, 980($sp)
sw $t1, 20($t0)
#AssignNode result_47 = result_244
lw $t1, 980($sp)
sw $t1, 192($sp)
#LabelNode label_107
label_107:
#AssignNode result_37 = result_47
lw $t1, 192($sp)
sw $t1, 152($sp)
#Goto label_108
b label_108
#LabelNode label_89
label_89:
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#Case Main.avar
lw $t0, 1132($sp)
lw $t1, 0($t0)
la $a0, void
bne $t1, $a0, label_109
b case_void_error
#LabelNode label_109
label_109:
#Action
blt $t1, 7, label_111
bgt $t1, 7, label_111
#AssignNode c_254 = Main.avar
lw $t1, 1132($sp)
sw $t1, 1020($sp)
#VCall value
move $t0, $sp
# Arg c_254
lw $t1, 1020($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1020($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 1028($sp)
#VCall method6
move $t0, $sp
# Arg result_256
lw $t1, 1028($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg c_254
lw $t1, 1020($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1020($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 40($t2)
jal $t3
sw $a1, 1024($sp)
#SetAttr Mainavar = result_255
lw $t0, 1140($sp)
lw $t1, 1024($sp)
sw $t1, 20($t0)
#AssignNode result_252 = result_255
lw $t1, 1024($sp)
sw $t1, 1012($sp)
#Goto label_110
b label_110
#LabelNode label_111
label_111:
#Action
blt $t1, 5, label_112
bgt $t1, 9, label_112
#AssignNode a_258 = Main.avar
lw $t1, 1132($sp)
sw $t1, 1036($sp)
#VCall value
move $t0, $sp
# Arg a_258
lw $t1, 1036($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1036($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 1044($sp)
#VCall method3
move $t0, $sp
# Arg result_260
lw $t1, 1044($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg a_258
lw $t1, 1036($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1036($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 28($t2)
jal $t3
sw $a1, 1040($sp)
#SetAttr Mainavar = result_259
lw $t0, 1140($sp)
lw $t1, 1040($sp)
sw $t1, 20($t0)
#AssignNode result_252 = result_259
lw $t1, 1040($sp)
sw $t1, 1012($sp)
#Goto label_110
b label_110
#LabelNode label_112
label_112:
#Action
blt $t1, 0, label_113
bgt $t1, 9, label_113
#AssignNode o_262 = Main.avar
lw $t1, 1132($sp)
sw $t1, 1052($sp)
#LoadStr msg_39
la $t0, msg_39
sw $t0, 1060($sp)
#Allocate 2:tag String:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 2
sw $t1, 0($t0)
la $t1, String_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, String_methods
sw $t1, 12($t0)
sw $t0, 1064($sp)
#CallNode String_init
move $t0, $sp
# Arg l_264
lw $t1, 1060($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_265
lw $t1, 1064($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal String_init
sw $a1, 1068($sp)
#VCall out_string
move $t0, $sp
# Arg instance_265
lw $t1, 1064($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 1056($sp)
#VCall abort
move $t0, $sp
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 0($t2)
jal $t3
sw $a1, 1072($sp)
#Allocate 4:tag Int:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 4
sw $t1, 0($t0)
la $t1, Int_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, Int_methods
sw $t1, 12($t0)
sw $t0, 1076($sp)
#LoadInt 0
li $t0, 0
sw $t0, 1080($sp)
#CallNode Int_init
move $t0, $sp
# Arg value_269
lw $t1, 1080($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg instance_268
lw $t1, 1076($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal Int_init
sw $a1, 1084($sp)
#AssignNode result_252 = instance_268
lw $t1, 1076($sp)
sw $t1, 1012($sp)
#Goto label_110
b label_110
#LabelNode label_113
label_113:
#Goto case_no_match_error
b case_no_match_error
#LabelNode label_110
label_110:
#AssignNode result_37 = result_252
lw $t1, 1012($sp)
sw $t1, 152($sp)
#LabelNode label_108
label_108:
#AssignNode result_27 = result_37
lw $t1, 152($sp)
sw $t1, 112($sp)
#Goto label_114
b label_114
#LabelNode label_88
label_88:
#Allocate 5:tag A:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 5
sw $t1, 0($t0)
la $t1, A_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, A_methods
sw $t1, 12($t0)
sw $t0, 1092($sp)
#CallNode A_init
move $t0, $sp
# Arg result_272
lw $t1, 1092($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal A_init
sw $a1, 1096($sp)
#VCall get_int
move $t0, $sp
# Arg self
lw $t1, 1140($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1140($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 36($t2)
jal $t3
sw $a1, 1100($sp)
#VCall set_var
move $t0, $sp
# Arg result_274
lw $t1, 1100($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_272
lw $t1, 1092($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1092($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 16($t2)
jal $t3
sw $a1, 1088($sp)
#SetAttr Maina_var = result_271
lw $t0, 1140($sp)
lw $t1, 1088($sp)
sw $t1, 24($t0)
#Allocate 6:tag B:Class_name 5:Class_size
li $a0, 20
li $v0, 9
syscall
bge $v0, $sp, heap_error
move $t0, $v0
li $t1, 6
sw $t1, 0($t0)
la $t1, B_name
sw $t1, 4($t0)
li $t1, 5
sw $t1, 8($t0)
la $t1, B_methods
sw $t1, 12($t0)
sw $t0, 1112($sp)
#CallNode B_init
move $t0, $sp
# Arg result_277
lw $t1, 1112($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
jal B_init
sw $a1, 1116($sp)
#GetAttr Main.a_var = Main.a_var
lw $t0, 1140($sp)
lw $t1, 24($t0)
sw $t1, 1124($sp)
#VCall value
move $t0, $sp
# Arg Main.a_var
lw $t1, 1124($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1124($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 1120($sp)
#GetAttr Main.avar = Main.avar
lw $t0, 1140($sp)
lw $t1, 20($t0)
sw $t1, 1132($sp)
#VCall value
move $t0, $sp
# Arg Main.avar
lw $t1, 1132($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1132($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 12($t2)
jal $t3
sw $a1, 1128($sp)
#VCall method2
move $t0, $sp
# Arg result_279
lw $t1, 1120($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_281
lw $t1, 1128($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
# Arg result_277
lw $t1, 1112($t0)
addi $sp, $sp, -4
sw $t1, 0($sp)
lw $t1, 1112($t0)
la $t0, void
beq $t1, $t0, dispatch_void_error
lw $t2, 12($t1)
lw $t3, 24($t2)
jal $t3
sw $a1, 1108($sp)
#SetAttr Mainavar = result_276
lw $t0, 1140($sp)
lw $t1, 1108($sp)
sw $t1, 20($t0)
#AssignNode result_27 = result_276
lw $t1, 1108($sp)
sw $t1, 112($sp)
#LabelNode label_114
label_114:
#Goto label_83
b label_83
#LabelNode label_85
label_85:
#Return result_3
lw $a1, 16($sp)
lw $ra, 0($sp)
addi $sp, $sp, 1144
jr $ra