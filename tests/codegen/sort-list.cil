.types

  type Object {
    method Object_abort;
    method Object_type_name;
    method Object_copy;
  }
  type Int {
    method Object_abort;
    method Int_type_name;
    method Int_copy;
  }
  type Bool {
    method Object_abort;
    method Bool_type_name;
    method Bool_copy;
  }
  type String {
    method Object_abort;
    method String_type_name;
    method String_copy;
    method String_length;
    method String_concat;
    method String_substr;
  }
  type IO {
    method Object_abort;
    method IO_type_name;
    method IO_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
  }
  type List {
    method Object_abort;
    method List_type_name;
    method List_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
    method List_isNil;
    method List_cons;
    method List_car;
    method List_cdr;
    method List_rev;
    method List_sort;
    method List_insert;
    method List_rcons;
    method List_print_list;
  }
  type Cons {
    attribute xcar;
    attribute xcdr;
    method Object_abort;
    method Cons_type_name;
    method Cons_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
    method Cons_isNil;
    method List_cons;
    method Cons_car;
    method Cons_cdr;
    method Cons_rev;
    method Cons_sort;
    method Cons_insert;
    method Cons_rcons;
    method Cons_print_list;
    method Cons_init;
  }
  type Nil {
    method Object_abort;
    method Nil_type_name;
    method Nil_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
    method Nil_isNil;
    method List_cons;
    method List_car;
    method List_cdr;
    method Nil_rev;
    method Nil_sort;
    method Nil_insert;
    method Nil_rcons;
    method Nil_print_list;
  }
  type Main {
    attribute l;
    method Object_abort;
    method Main_type_name;
    method Main_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
    method Main_iota;
    method Main_main;
  }

.data

  data_0_abort_msg = "Program Halted!";
  data_1_type_name_Object = "Object";
  data_2_type_name_Int = "Int";
  data_3_type_name_Bool = "Bool";
  data_4_type_name_String = "String";
  data_5_type_name_IO = "IO";
  data_6_type_name_List = "List";
  data_7_type_name_Cons = "Cons";
  data_8_type_name_Nil = "Nil";
  data_9_type_name_Main = "Main";
  data_10_sep_cat = " ++ ";
  data_11_eol = "\n";
  data_12_under = "_";
  data_13_meth = "abort";
  data_14_meth = "init";
  data_15_meth = "cdr";
  data_16_meth = "rev";
  data_17_meth = "rcons";
  data_18_meth = "sort";
  data_19_meth = "insert";
  data_20_meth = "out_int";
  data_21_meth = "out_string";
  data_22_meth = "print_list";
  data_23_string = "How many numbers to sort? ";
  data_24_meth = "in_int";
  data_25_meth = "iota";

.code

  function Void___init {

    LOCAL local_self;

    local_self = ALLOCATE Void;
    RETURN local_self;
  }

  function main {

    LOCAL local_0;
    LOCAL local_1;

    local_0 = CALL Main___init;
    ARG local_0;
    local_1 = CALL Main_main;
  }

  function Object_abort {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_0_abort_msg;
    ARG local_0;
    local_1 = CALL String___init;
    print(str, local_1)
  }

  function Object_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_1_type_name_Object;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Object_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Object;
    RETURN local_copy;
  }

  function Int_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_2_type_name_Int;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Int_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Int;
    RETURN local_copy;
  }

  function Bool_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_3_type_name_Bool;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Bool_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Bool;
    RETURN local_copy;
  }

  function String_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_4_type_name_String;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function String_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE String;
    RETURN local_copy;
  }

  function IO_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_5_type_name_IO;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function IO_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE IO;
    RETURN local_copy;
  }

  function List_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_6_type_name_List;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function List_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE List;
    RETURN local_copy;
  }

  function Cons_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_7_type_name_Cons;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Cons_copy {
    PARAM param_self;

    LOCAL local_copy;
    LOCAL local_attr_copy;
    LOCAL local_attr_copy;

    local_copy = ALLOCATE Cons;
    local_attr_copy = GETATTR param_self 0;
    SETATTR local_copy 0 local_attr_copy;
    local_attr_copy = GETATTR param_self 1;
    SETATTR local_copy 1 local_attr_copy;
    RETURN local_copy;
  }

  function Nil_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_8_type_name_Nil;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Nil_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Nil;
    RETURN local_copy;
  }

  function Main_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_9_type_name_Main;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Main_copy {
    PARAM param_self;

    LOCAL local_copy;
    LOCAL local_attr_copy;

    local_copy = ALLOCATE Main;
    local_attr_copy = GETATTR param_self 0;
    SETATTR local_copy 0 local_attr_copy;
    RETURN local_copy;
  }

  function IO_out_string {
    PARAM param_self;
    PARAM param_str;


    print(str, param_str)
    RETURN param_self;
  }

  function IO_out_int {
    PARAM param_int;
    PARAM param_self;


    print(int, param_int)
    RETURN param_self;
  }

  function IO_in_string {
    PARAM param_self;

    LOCAL local_str;

    local_str = read(str)
    RETURN local_str;
  }

  function IO_in_int {
    PARAM param_self;

    LOCAL local_int;

    local_int = read(int)
    RETURN local_int;
  }

  function String_length {
    PARAM param_self;

    LOCAL local_str_attr;
    LOCAL local_length;
    LOCAL local_2;

    local_str_attr = GETATTR param_self 0;
    local_str_attr = length(local_length)
    ARG local_length;
    local_2 = CALL Int___init;
    RETURN local_2;
  }

  function String_concat {
    PARAM param_self;
    PARAM param_other;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_self_str_attr;
    LOCAL local_other_str_attr;
    LOCAL local_concat;
    LOCAL local_self_len;
    LOCAL local_other_len;
    LOCAL local_concat_len;
    LOCAL local_8;

    local_0 = LOAD data_10_sep_cat;
    ARG local_0;
    local_1 = CALL String___init;
    print(str, param_self)
    print(str, local_1)
    print(str, param_other)
    local_self_str_attr = GETATTR param_self 0;
    local_other_str_attr = GETATTR param_other 0;
    local_self_len = length(local_self_str_attr)
    local_other_len = length(local_other_str_attr)
    local_concat_len = local_self_len + local_other_len
    local_concat = concat(local_self_str_attr, local_other_str_attr, local_concat_len)
    ARG local_concat;
    local_8 = CALL String___init;
    RETURN local_8;
  }

  function String_substr {
    PARAM param_self;
    PARAM param_i;
    PARAM param_l;

    LOCAL local_self_str_local;
    LOCAL local_i_local;
    LOCAL local_l_local;
    LOCAL local_substr;
    LOCAL local_4;

    local_self_str_local = GETATTR param_self 0;
    local_i_local = GETATTR param_i 0;
    local_l_local = GETATTR param_l 0;
    local_substr = substr(local_self_str_local, local_i_local, local_l_local)
    ARG local_substr;
    local_4 = CALL String___init;
    RETURN local_4;
  }

  function Object___init {

    LOCAL local_self;

    local_self = ALLOCATE Object;
    RETURN local_self;
  }

  function Int___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE Int;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function Bool___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE Bool;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function String___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE String;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function List___init {

    LOCAL local_self;

    local_self = ALLOCATE List;
    RETURN local_self;
  }

  function List_isNil {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_tname_local;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;

    local_1 = TYPEOF param_self;
    local_3 = LOAD data_11_eol;
    ARG local_3;
    local_4 = CALL String___init;
    local_5 = LOAD data_12_under;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_13_meth;
    ARG local_7;
    local_8 = CALL String___init;
    local_tname_local = VCALL local_1 1;
    print(str, local_tname_local)
    print(str, local_6)
    print(str, local_8)
    print(str, local_4)
    ARG param_self;
    local_0 = VCALL local_1 0;
    local_9 = LOAD 1;
    ARG local_9;
    local_10 = CALL Bool___init;
    RETURN local_10;
  }

  function List_cons {
    PARAM param_self;
    PARAM param_hd;

    LOCAL local_new_cell;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_tname_local;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;

    local_1 = CALL Cons___init;
    local_new_cell = local_1;
    local_3 = TYPEOF local_new_cell;
    local_5 = LOAD data_11_eol;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_12_under;
    ARG local_7;
    local_8 = CALL String___init;
    local_9 = LOAD data_14_meth;
    ARG local_9;
    local_10 = CALL String___init;
    local_tname_local = VCALL local_3 1;
    print(str, local_tname_local)
    print(str, local_8)
    print(str, local_10)
    print(str, local_6)
    ARG local_new_cell;
    ARG param_hd;
    ARG param_self;
    local_2 = VCALL local_3 16;
    RETURN local_2;
  }

  function List_car {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_tname_local;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;

    local_1 = TYPEOF param_self;
    local_3 = LOAD data_11_eol;
    ARG local_3;
    local_4 = CALL String___init;
    local_5 = LOAD data_12_under;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_13_meth;
    ARG local_7;
    local_8 = CALL String___init;
    local_tname_local = VCALL local_1 1;
    print(str, local_tname_local)
    print(str, local_6)
    print(str, local_8)
    print(str, local_4)
    ARG param_self;
    local_0 = VCALL local_1 0;
    local_9 = CALL Int___init;
    RETURN local_9;
  }

  function List_cdr {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_tname_local;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;

    local_1 = TYPEOF param_self;
    local_3 = LOAD data_11_eol;
    ARG local_3;
    local_4 = CALL String___init;
    local_5 = LOAD data_12_under;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_13_meth;
    ARG local_7;
    local_8 = CALL String___init;
    local_tname_local = VCALL local_1 1;
    print(str, local_tname_local)
    print(str, local_6)
    print(str, local_8)
    print(str, local_4)
    ARG param_self;
    local_0 = VCALL local_1 0;
    local_9 = CALL List___init;
    RETURN local_9;
  }

  function List_rev {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_tname_local;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;

    local_1 = TYPEOF param_self;
    local_3 = LOAD data_11_eol;
    ARG local_3;
    local_4 = CALL String___init;
    local_5 = LOAD data_12_under;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_15_meth;
    ARG local_7;
    local_8 = CALL String___init;
    local_tname_local = VCALL local_1 1;
    print(str, local_tname_local)
    print(str, local_6)
    print(str, local_8)
    print(str, local_4)
    ARG param_self;
    local_0 = VCALL local_1 10;
    RETURN local_0;
  }

  function List_sort {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_tname_local;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;

    local_1 = TYPEOF param_self;
    local_3 = LOAD data_11_eol;
    ARG local_3;
    local_4 = CALL String___init;
    local_5 = LOAD data_12_under;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_15_meth;
    ARG local_7;
    local_8 = CALL String___init;
    local_tname_local = VCALL local_1 1;
    print(str, local_tname_local)
    print(str, local_6)
    print(str, local_8)
    print(str, local_4)
    ARG param_self;
    local_0 = VCALL local_1 10;
    RETURN local_0;
  }

  function List_insert {
    PARAM param_self;
    PARAM param_i;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_tname_local;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;

    local_1 = TYPEOF param_self;
    local_3 = LOAD data_11_eol;
    ARG local_3;
    local_4 = CALL String___init;
    local_5 = LOAD data_12_under;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_15_meth;
    ARG local_7;
    local_8 = CALL String___init;
    local_tname_local = VCALL local_1 1;
    print(str, local_tname_local)
    print(str, local_6)
    print(str, local_8)
    print(str, local_4)
    ARG param_self;
    local_0 = VCALL local_1 10;
    RETURN local_0;
  }

  function List_rcons {
    PARAM param_self;
    PARAM param_i;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_tname_local;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;

    local_1 = TYPEOF param_self;
    local_3 = LOAD data_11_eol;
    ARG local_3;
    local_4 = CALL String___init;
    local_5 = LOAD data_12_under;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_15_meth;
    ARG local_7;
    local_8 = CALL String___init;
    local_tname_local = VCALL local_1 1;
    print(str, local_tname_local)
    print(str, local_6)
    print(str, local_8)
    print(str, local_4)
    ARG param_self;
    local_0 = VCALL local_1 10;
    RETURN local_0;
  }

  function List_print_list {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_tname_local;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;

    local_1 = TYPEOF param_self;
    local_3 = LOAD data_11_eol;
    ARG local_3;
    local_4 = CALL String___init;
    local_5 = LOAD data_12_under;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_13_meth;
    ARG local_7;
    local_8 = CALL String___init;
    local_tname_local = VCALL local_1 1;
    print(str, local_tname_local)
    print(str, local_6)
    print(str, local_8)
    print(str, local_4)
    ARG param_self;
    local_0 = VCALL local_1 0;
    RETURN local_0;
  }

  function Cons___init {

    LOCAL local_self;
    LOCAL local_xcar;
    LOCAL local_xcdr;

    local_self = ALLOCATE Cons;
    ARG local_self;
    local_xcar = CALL Cons_xcar___init;
    SETATTR local_self 0 local_xcar;
    ARG local_self;
    local_xcdr = CALL Cons_xcdr___init;
    SETATTR local_self 1 local_xcdr;
    RETURN local_self;
  }

  function Cons_xcar___init {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD 0;
    ARG local_0;
    local_1 = CALL Int___init;
    RETURN local_1;
  }

  function Cons_xcdr___init {
    PARAM param_self;

    LOCAL local_0;

    local_0 = CALL Void___init;
    RETURN local_0;
  }

  function Cons_isNil {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD 0;
    ARG local_0;
    local_1 = CALL Bool___init;
    RETURN local_1;
  }

  function Cons_init {
    PARAM param_self;
    PARAM param_hd;
    PARAM param_tl;


    SETATTR param_self 0 param_hd;
    SETATTR param_self 1 param_tl;
    RETURN param_self;
  }

  function Cons_car {
    PARAM param_self;

    LOCAL local_xcar;

    local_xcar = GETATTR param_self 0;
    RETURN local_xcar;
  }

  function Cons_cdr {
    PARAM param_self;

    LOCAL local_xcdr;

    local_xcdr = GETATTR param_self 1;
    RETURN local_xcdr;
  }

  function Cons_rev {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_xcdr;
    LOCAL local_3;
    LOCAL local_tname_local;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_xcar;
    LOCAL local_12;
    LOCAL local_tname_local;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_18;
    LOCAL local_19;

    local_xcdr = GETATTR param_self 1;
    local_3 = TYPEOF local_xcdr;
    local_5 = LOAD data_11_eol;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_12_under;
    ARG local_7;
    local_8 = CALL String___init;
    local_9 = LOAD data_16_meth;
    ARG local_9;
    local_10 = CALL String___init;
    local_tname_local = VCALL local_3 1;
    print(str, local_tname_local)
    print(str, local_8)
    print(str, local_10)
    print(str, local_6)
    ARG local_xcdr;
    local_1 = VCALL local_3 11;
    local_xcar = GETATTR param_self 0;
    local_12 = TYPEOF local_1;
    local_14 = LOAD data_11_eol;
    ARG local_14;
    local_15 = CALL String___init;
    local_16 = LOAD data_12_under;
    ARG local_16;
    local_17 = CALL String___init;
    local_18 = LOAD data_17_meth;
    ARG local_18;
    local_19 = CALL String___init;
    local_tname_local = VCALL local_12 1;
    print(str, local_tname_local)
    print(str, local_17)
    print(str, local_19)
    print(str, local_15)
    ARG local_1;
    ARG local_xcar;
    local_0 = VCALL local_12 14;
    RETURN local_0;
  }

  function Cons_sort {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_xcdr;
    LOCAL local_3;
    LOCAL local_tname_local;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_xcar;
    LOCAL local_12;
    LOCAL local_tname_local;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_18;
    LOCAL local_19;

    local_xcdr = GETATTR param_self 1;
    local_3 = TYPEOF local_xcdr;
    local_5 = LOAD data_11_eol;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_12_under;
    ARG local_7;
    local_8 = CALL String___init;
    local_9 = LOAD data_18_meth;
    ARG local_9;
    local_10 = CALL String___init;
    local_tname_local = VCALL local_3 1;
    print(str, local_tname_local)
    print(str, local_8)
    print(str, local_10)
    print(str, local_6)
    ARG local_xcdr;
    local_1 = VCALL local_3 12;
    local_xcar = GETATTR param_self 0;
    local_12 = TYPEOF local_1;
    local_14 = LOAD data_11_eol;
    ARG local_14;
    local_15 = CALL String___init;
    local_16 = LOAD data_12_under;
    ARG local_16;
    local_17 = CALL String___init;
    local_18 = LOAD data_19_meth;
    ARG local_18;
    local_19 = CALL String___init;
    local_tname_local = VCALL local_12 1;
    print(str, local_tname_local)
    print(str, local_17)
    print(str, local_19)
    print(str, local_15)
    ARG local_1;
    ARG local_xcar;
    local_0 = VCALL local_12 13;
    RETURN local_0;
  }

  function Cons_insert {
    PARAM param_self;
    PARAM param_i;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_xcar;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_tname_local;
    LOCAL local_10;
    LOCAL local_11;
    LOCAL local_12;
    LOCAL local_13;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_18;
    LOCAL local_xcdr;
    LOCAL local_20;
    LOCAL local_tname_local;
    LOCAL local_22;
    LOCAL local_23;
    LOCAL local_24;
    LOCAL local_25;
    LOCAL local_26;
    LOCAL local_27;
    LOCAL local_28;
    LOCAL local_tname_local;
    LOCAL local_30;
    LOCAL local_31;
    LOCAL local_32;
    LOCAL local_33;
    LOCAL local_34;
    LOCAL local_35;

    local_1 = GETATTR param_i 0;
    local_xcar = GETATTR param_self 0;
    local_3 = GETATTR local_xcar 0;
    local_4 = local_3 - local_1
    ARG local_4;
    local_5 = CALL Bool___init;
    IF local_5 GOTO label_then_0;
    GOTO label_else_0;
    LABEL label_then_0;
    local_7 = CALL Cons___init;
    local_8 = TYPEOF local_7;
    local_10 = LOAD data_11_eol;
    ARG local_10;
    local_11 = CALL String___init;
    local_12 = LOAD data_12_under;
    ARG local_12;
    local_13 = CALL String___init;
    local_14 = LOAD data_14_meth;
    ARG local_14;
    local_15 = CALL String___init;
    local_tname_local = VCALL local_8 1;
    print(str, local_tname_local)
    print(str, local_13)
    print(str, local_15)
    print(str, local_11)
    ARG local_7;
    ARG param_i;
    ARG param_self;
    local_6 = VCALL local_8 16;
    local_0 = local_6;
    GOTO label_continue_0;
    LABEL label_else_0;
    local_17 = CALL Cons___init;
    local_xcdr = GETATTR param_self 1;
    local_20 = TYPEOF local_xcdr;
    local_22 = LOAD data_11_eol;
    ARG local_22;
    local_23 = CALL String___init;
    local_24 = LOAD data_12_under;
    ARG local_24;
    local_25 = CALL String___init;
    local_26 = LOAD data_19_meth;
    ARG local_26;
    local_27 = CALL String___init;
    local_tname_local = VCALL local_20 1;
    print(str, local_tname_local)
    print(str, local_25)
    print(str, local_27)
    print(str, local_23)
    ARG local_xcdr;
    ARG param_i;
    local_18 = VCALL local_20 13;
    local_28 = TYPEOF local_17;
    local_30 = LOAD data_11_eol;
    ARG local_30;
    local_31 = CALL String___init;
    local_32 = LOAD data_12_under;
    ARG local_32;
    local_33 = CALL String___init;
    local_34 = LOAD data_14_meth;
    ARG local_34;
    local_35 = CALL String___init;
    local_tname_local = VCALL local_28 1;
    print(str, local_tname_local)
    print(str, local_33)
    print(str, local_35)
    print(str, local_31)
    ARG local_17;
    ARG local_xcar;
    ARG local_18;
    local_16 = VCALL local_28 16;
    local_0 = local_16;
    LABEL label_continue_0;
    RETURN local_0;
  }

  function Cons_rcons {
    PARAM param_self;
    PARAM param_i;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_xcar;
    LOCAL local_3;
    LOCAL local_xcdr;
    LOCAL local_5;
    LOCAL local_tname_local;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_11;
    LOCAL local_12;
    LOCAL local_13;
    LOCAL local_tname_local;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_18;
    LOCAL local_19;
    LOCAL local_20;

    local_1 = CALL Cons___init;
    local_xcar = GETATTR param_self 0;
    local_xcdr = GETATTR param_self 1;
    local_5 = TYPEOF local_xcdr;
    local_7 = LOAD data_11_eol;
    ARG local_7;
    local_8 = CALL String___init;
    local_9 = LOAD data_12_under;
    ARG local_9;
    local_10 = CALL String___init;
    local_11 = LOAD data_17_meth;
    ARG local_11;
    local_12 = CALL String___init;
    local_tname_local = VCALL local_5 1;
    print(str, local_tname_local)
    print(str, local_10)
    print(str, local_12)
    print(str, local_8)
    ARG local_xcdr;
    ARG param_i;
    local_3 = VCALL local_5 14;
    local_13 = TYPEOF local_1;
    local_15 = LOAD data_11_eol;
    ARG local_15;
    local_16 = CALL String___init;
    local_17 = LOAD data_12_under;
    ARG local_17;
    local_18 = CALL String___init;
    local_19 = LOAD data_14_meth;
    ARG local_19;
    local_20 = CALL String___init;
    local_tname_local = VCALL local_13 1;
    print(str, local_tname_local)
    print(str, local_18)
    print(str, local_20)
    print(str, local_16)
    ARG local_1;
    ARG local_xcar;
    ARG local_3;
    local_0 = VCALL local_13 16;
    RETURN local_0;
  }

  function Cons_print_list {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_xcar;
    LOCAL local_2;
    LOCAL local_tname_local;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_11;
    LOCAL local_12;
    LOCAL local_13;
    LOCAL local_tname_local;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_18;
    LOCAL local_19;
    LOCAL local_20;
    LOCAL local_21;
    LOCAL local_xcdr;
    LOCAL local_23;
    LOCAL local_tname_local;
    LOCAL local_25;
    LOCAL local_26;
    LOCAL local_27;
    LOCAL local_28;
    LOCAL local_29;
    LOCAL local_30;

    local_xcar = GETATTR param_self 0;
    local_2 = TYPEOF param_self;
    local_4 = LOAD data_11_eol;
    ARG local_4;
    local_5 = CALL String___init;
    local_6 = LOAD data_12_under;
    ARG local_6;
    local_7 = CALL String___init;
    local_8 = LOAD data_20_meth;
    ARG local_8;
    local_9 = CALL String___init;
    local_tname_local = VCALL local_2 1;
    print(str, local_tname_local)
    print(str, local_7)
    print(str, local_9)
    print(str, local_5)
    ARG param_self;
    ARG local_xcar;
    local_0 = VCALL local_2 4;
    local_11 = LOAD data_11_eol;
    ARG local_11;
    local_12 = CALL String___init;
    local_13 = TYPEOF param_self;
    local_15 = LOAD data_11_eol;
    ARG local_15;
    local_16 = CALL String___init;
    local_17 = LOAD data_12_under;
    ARG local_17;
    local_18 = CALL String___init;
    local_19 = LOAD data_21_meth;
    ARG local_19;
    local_20 = CALL String___init;
    local_tname_local = VCALL local_13 1;
    print(str, local_tname_local)
    print(str, local_18)
    print(str, local_20)
    print(str, local_16)
    ARG param_self;
    ARG local_12;
    local_10 = VCALL local_13 3;
    local_xcdr = GETATTR param_self 1;
    local_23 = TYPEOF local_xcdr;
    local_25 = LOAD data_11_eol;
    ARG local_25;
    local_26 = CALL String___init;
    local_27 = LOAD data_12_under;
    ARG local_27;
    local_28 = CALL String___init;
    local_29 = LOAD data_22_meth;
    ARG local_29;
    local_30 = CALL String___init;
    local_tname_local = VCALL local_23 1;
    print(str, local_tname_local)
    print(str, local_28)
    print(str, local_30)
    print(str, local_26)
    ARG local_xcdr;
    local_21 = VCALL local_23 15;
    RETURN local_21;
  }

  function Nil___init {

    LOCAL local_self;

    local_self = ALLOCATE Nil;
    RETURN local_self;
  }

  function Nil_isNil {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD 1;
    ARG local_0;
    local_1 = CALL Bool___init;
    RETURN local_1;
  }

  function Nil_rev {
    PARAM param_self;


    RETURN param_self;
  }

  function Nil_sort {
    PARAM param_self;


    RETURN param_self;
  }

  function Nil_insert {
    PARAM param_self;
    PARAM param_i;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_tname_local;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;

    local_1 = TYPEOF param_self;
    local_3 = LOAD data_11_eol;
    ARG local_3;
    local_4 = CALL String___init;
    local_5 = LOAD data_12_under;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_17_meth;
    ARG local_7;
    local_8 = CALL String___init;
    local_tname_local = VCALL local_1 1;
    print(str, local_tname_local)
    print(str, local_6)
    print(str, local_8)
    print(str, local_4)
    ARG param_self;
    ARG param_i;
    local_0 = VCALL local_1 14;
    RETURN local_0;
  }

  function Nil_rcons {
    PARAM param_self;
    PARAM param_i;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_tname_local;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;

    local_1 = CALL Cons___init;
    local_2 = TYPEOF local_1;
    local_4 = LOAD data_11_eol;
    ARG local_4;
    local_5 = CALL String___init;
    local_6 = LOAD data_12_under;
    ARG local_6;
    local_7 = CALL String___init;
    local_8 = LOAD data_14_meth;
    ARG local_8;
    local_9 = CALL String___init;
    local_tname_local = VCALL local_2 1;
    print(str, local_tname_local)
    print(str, local_7)
    print(str, local_9)
    print(str, local_5)
    ARG local_1;
    ARG param_i;
    ARG param_self;
    local_0 = VCALL local_2 16;
    RETURN local_0;
  }

  function Nil_print_list {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD 1;
    ARG local_0;
    local_1 = CALL Bool___init;
    RETURN local_1;
  }

  function Main___init {

    LOCAL local_self;
    LOCAL local_l;

    local_self = ALLOCATE Main;
    ARG local_self;
    local_l = CALL Main_l___init;
    SETATTR local_self 0 local_l;
    RETURN local_self;
  }

  function Main_l___init {
    PARAM param_self;

    LOCAL local_0;

    local_0 = CALL Void___init;
    RETURN local_0;
  }

  function Main_iota {
    PARAM param_self;
    PARAM param_i;

    LOCAL local_0;
    LOCAL local_j;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_l;
    LOCAL local_12;
    LOCAL local_tname_local;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_18;
    LOCAL local_19;
    LOCAL local_20;
    LOCAL local_21;
    LOCAL local_22;
    LOCAL local_23;
    LOCAL local_24;
    LOCAL local_25;

    local_0 = CALL Nil___init;
    SETATTR param_self 0 local_0;
    local_2 = LOAD 0;
    ARG local_2;
    local_3 = CALL Int___init;
    local_j = local_3;
    LABEL label_while_label_0;
    local_4 = GETATTR local_j 0;
    local_5 = GETATTR param_i 0;
    local_6 = local_5 - local_4
    ARG local_6;
    local_7 = CALL Bool___init;
    local_8 = GETATTR local_7 0;
    IF local_8 GOTO label_loop_label_0;
    GOTO label_pool_label_0;
    LABEL label_loop_label_0;
    local_10 = CALL Cons___init;
    local_l = GETATTR param_self 0;
    local_12 = TYPEOF local_10;
    local_14 = LOAD data_11_eol;
    ARG local_14;
    local_15 = CALL String___init;
    local_16 = LOAD data_12_under;
    ARG local_16;
    local_17 = CALL String___init;
    local_18 = LOAD data_14_meth;
    ARG local_18;
    local_19 = CALL String___init;
    local_tname_local = VCALL local_12 1;
    print(str, local_tname_local)
    print(str, local_17)
    print(str, local_19)
    print(str, local_15)
    ARG local_10;
    ARG local_j;
    ARG local_l;
    local_9 = VCALL local_12 16;
    local_l = local_9;
    local_20 = GETATTR local_j 0;
    local_21 = LOAD 1;
    ARG local_21;
    local_22 = CALL Int___init;
    local_23 = GETATTR local_22 0;
    local_24 = local_20 + local_23
    local_j = local_24;
    GOTO label_while_label_0;
    LABEL label_pool_label_0;
    local_25 = CALL Void___init;
    RETURN local_l;
  }

  function Main_main {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_tname_local;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_11;
    LOCAL local_12;
    LOCAL local_13;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_tname_local;
    LOCAL local_18;
    LOCAL local_19;
    LOCAL local_20;
    LOCAL local_21;
    LOCAL local_22;
    LOCAL local_23;
    LOCAL local_24;
    LOCAL local_tname_local;
    LOCAL local_26;
    LOCAL local_27;
    LOCAL local_28;
    LOCAL local_29;
    LOCAL local_30;
    LOCAL local_31;
    LOCAL local_32;
    LOCAL local_tname_local;
    LOCAL local_34;
    LOCAL local_35;
    LOCAL local_36;
    LOCAL local_37;
    LOCAL local_38;
    LOCAL local_39;
    LOCAL local_40;
    LOCAL local_tname_local;
    LOCAL local_42;
    LOCAL local_43;
    LOCAL local_44;
    LOCAL local_45;
    LOCAL local_46;
    LOCAL local_47;
    LOCAL local_48;
    LOCAL local_tname_local;
    LOCAL local_50;
    LOCAL local_51;
    LOCAL local_52;
    LOCAL local_53;
    LOCAL local_54;
    LOCAL local_55;

    local_1 = LOAD data_23_string;
    ARG local_1;
    local_2 = CALL String___init;
    local_3 = TYPEOF param_self;
    local_5 = LOAD data_11_eol;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_12_under;
    ARG local_7;
    local_8 = CALL String___init;
    local_9 = LOAD data_21_meth;
    ARG local_9;
    local_10 = CALL String___init;
    local_tname_local = VCALL local_3 1;
    print(str, local_tname_local)
    print(str, local_8)
    print(str, local_10)
    print(str, local_6)
    ARG param_self;
    ARG local_2;
    local_0 = VCALL local_3 3;
    local_16 = TYPEOF param_self;
    local_18 = LOAD data_11_eol;
    ARG local_18;
    local_19 = CALL String___init;
    local_20 = LOAD data_12_under;
    ARG local_20;
    local_21 = CALL String___init;
    local_22 = LOAD data_24_meth;
    ARG local_22;
    local_23 = CALL String___init;
    local_tname_local = VCALL local_16 1;
    print(str, local_tname_local)
    print(str, local_21)
    print(str, local_23)
    print(str, local_19)
    ARG param_self;
    local_15 = VCALL local_16 6;
    local_24 = TYPEOF param_self;
    local_26 = LOAD data_11_eol;
    ARG local_26;
    local_27 = CALL String___init;
    local_28 = LOAD data_12_under;
    ARG local_28;
    local_29 = CALL String___init;
    local_30 = LOAD data_25_meth;
    ARG local_30;
    local_31 = CALL String___init;
    local_tname_local = VCALL local_24 1;
    print(str, local_tname_local)
    print(str, local_29)
    print(str, local_31)
    print(str, local_27)
    ARG param_self;
    ARG local_15;
    local_14 = VCALL local_24 7;
    local_32 = TYPEOF local_14;
    local_34 = LOAD data_11_eol;
    ARG local_34;
    local_35 = CALL String___init;
    local_36 = LOAD data_12_under;
    ARG local_36;
    local_37 = CALL String___init;
    local_38 = LOAD data_16_meth;
    ARG local_38;
    local_39 = CALL String___init;
    local_tname_local = VCALL local_32 1;
    print(str, local_tname_local)
    print(str, local_37)
    print(str, local_39)
    print(str, local_35)
    ARG local_14;
    local_13 = VCALL local_32 11;
    local_40 = TYPEOF local_13;
    local_42 = LOAD data_11_eol;
    ARG local_42;
    local_43 = CALL String___init;
    local_44 = LOAD data_12_under;
    ARG local_44;
    local_45 = CALL String___init;
    local_46 = LOAD data_18_meth;
    ARG local_46;
    local_47 = CALL String___init;
    local_tname_local = VCALL local_40 1;
    print(str, local_tname_local)
    print(str, local_45)
    print(str, local_47)
    print(str, local_43)
    ARG local_13;
    local_12 = VCALL local_40 12;
    local_48 = TYPEOF local_12;
    local_50 = LOAD data_11_eol;
    ARG local_50;
    local_51 = CALL String___init;
    local_52 = LOAD data_12_under;
    ARG local_52;
    local_53 = CALL String___init;
    local_54 = LOAD data_22_meth;
    ARG local_54;
    local_55 = CALL String___init;
    local_tname_local = VCALL local_48 1;
    print(str, local_tname_local)
    print(str, local_53)
    print(str, local_55)
    print(str, local_51)
    ARG local_12;
    local_11 = VCALL local_48 15;
    RETURN local_11;
  }

