	.data
default_str: .asciiz ""
Object: .asciiz "Object"
IO: .asciiz "IO"
String: .asciiz "String"
Int: .asciiz "Int"
Bool: .asciiz "Bool"
Main: .asciiz "Main"
A2I: .asciiz "A2I"
data_0: .asciiz "Abort called from class "
data_1: .asciiz "
"
data_2: .asciiz "Substring out of range"
data_3: .asciiz "678987"
data_4: .asciiz "(112,0) - RuntimeError: Dispatch on void
"
data_5: .asciiz "(113,0) - RuntimeError: Dispatch on void
"
data_6: .asciiz "(115,0) - RuntimeError: Dispatch on void
"
data_7: .asciiz " == "
data_8: .asciiz "(116,0) - RuntimeError: Dispatch on void
"
data_9: .asciiz "(117,0) - RuntimeError: Dispatch on void
"
data_10: .asciiz "(118,0) - RuntimeError: Dispatch on void
"
data_11: .asciiz "0"
data_12: .asciiz "1"
data_13: .asciiz "2"
data_14: .asciiz "3"
data_15: .asciiz "4"
data_16: .asciiz "5"
data_17: .asciiz "6"
data_18: .asciiz "7"
data_19: .asciiz "8"
data_20: .asciiz "9"
data_21: .asciiz "(26,0) - RuntimeError: Dispatch on void
"
data_22: .asciiz "(44,0) - RuntimeError: Dispatch on void
"
data_23: .asciiz ""
data_24: .asciiz "(57,0) - RuntimeError: Dispatch on void
"
data_25: .asciiz "(58,0) - RuntimeError: Dispatch on void
"
data_26: .asciiz "-"
data_27: .asciiz "(58,0) - RuntimeError: Dispatch on void
"
data_28: .asciiz "(58,0) - RuntimeError: Dispatch on void
"
data_29: .asciiz "(58,0) - RuntimeError: Dispatch on void
"
data_30: .asciiz "(59,0) - RuntimeError: Dispatch on void
"
data_31: .asciiz "+"
data_32: .asciiz "(59,0) - RuntimeError: Dispatch on void
"
data_33: .asciiz "(59,0) - RuntimeError: Dispatch on void
"
data_34: .asciiz "(59,0) - RuntimeError: Dispatch on void
"
data_35: .asciiz "(60,0) - RuntimeError: Dispatch on void
"
data_36: .asciiz "(71,0) - RuntimeError: Dispatch on void
"
data_37: .asciiz "(75,0) - RuntimeError: Dispatch on void
"
data_38: .asciiz "(75,0) - RuntimeError: Dispatch on void
"
data_39: .asciiz "(92,0) - RuntimeError: Dispatch on void
"
data_40: .asciiz "(93,0) - RuntimeError: Dispatch on void
"
data_41: .asciiz "(93,0) - RuntimeError: Dispatch on void
"
data_42: .asciiz "(103,0) - RuntimeError: Dispatch on void
"
data_43: .asciiz "(103,0) - RuntimeError: Dispatch on void
"
data_44: .asciiz "(103,0) - RuntimeError: Dispatch on void
"

type_name_table:
	.word	Object
	.word	IO
	.word	String
	.word	Int
	.word	Bool
	.word	Main
	.word	A2I

shells_table:
	.word	type_Object_shell
	.word	type_IO_shell
	.word	type_String_shell
	.word	type_Int_shell
	.word	type_Bool_shell
	.word	type_Main_shell
	.word	type_A2I_shell

type_Object_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 init_at_Object

type_Object_shell:
	.word	0
	.word	4
	.word	type_Object_dispatch


type_IO_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 function_out_string_at_IO
	.word	 function_out_int_at_IO
	.word	 function_in_string_at_IO
	.word	 function_in_int_at_IO
	.word	 init_at_IO

type_IO_shell:
	.word	1
	.word	4
	.word	type_IO_dispatch


type_String_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 function_length_at_String
	.word	 function_concat_at_String
	.word	 function_substr_at_String
	.word	 init_at_String

type_String_shell:
	.word	2
	.word	6
	.word	type_String_dispatch
	.word	default_str
	.word	type_Int_shell


type_Int_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 init_at_Int

type_Int_shell:
	.word	3
	.word	5
	.word	type_Int_dispatch
	.word	0


type_Bool_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 init_at_Bool

type_Bool_shell:
	.word	4
	.word	5
	.word	type_Bool_dispatch
	.word	0


type_Main_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 function_out_string_at_IO
	.word	 function_out_int_at_IO
	.word	 function_in_string_at_IO
	.word	 function_in_int_at_IO
	.word	 function_main_at_Main

type_Main_shell:
	.word	5
	.word	4
	.word	type_Main_dispatch


type_A2I_dispatch:
	.word	 function_abort_at_Object
	.word	 function_type_name_at_Object
	.word	 function_copy_at_Object
	.word	 function_c2i_at_A2I
	.word	 function_i2c_at_A2I
	.word	 function_a2i_at_A2I
	.word	 function_a2i_aux_at_A2I
	.word	 function_i2a_at_A2I
	.word	 function_i2a_aux_at_A2I

type_A2I_shell:
	.word	6
	.word	4
	.word	type_A2I_dispatch

	.text
	.globl main
main:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	jal init_at_Main
	sw $v0, -16($fp)
	lw $a0, -16($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal function_main_at_Main
	sw $v0, -12($fp)
	addi $sp, $sp, 4
	li $v0, 0
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	li $v0, 10
	syscall
init_at_Object:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	li $a0, 0
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_abort_at_Object:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	la $a0, data_0 + 0
	sw $a0, -12($fp)
	li $v0, 4
	lw $a0, -12($fp)
	syscall
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -12($fp)
	li $v0, 4
	lw $a0, -12($fp)
	syscall
	la $a0, data_1 + 0
	sw $a0, -12($fp)
	li $v0, 4
	lw $a0, -12($fp)
	syscall
	li $v0, 10
	syscall
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_type_name_at_Object:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -16($fp)
	addi $sp, $sp, 4
	lw $v0, -16($fp)
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_copy_at_Object:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	lw $a0, 0($fp)
	lw $a0, 4($a0)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a0
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_at_IO:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	li $a0, 1
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_out_string_at_IO:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -12($fp)
	li $v0, 4
	lw $a0, -12($fp)
	syscall
	lw $v0, 4($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_out_int_at_IO:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -12($fp)
	li $v0, 1
	lw $a0, -12($fp)
	syscall
	lw $v0, 4($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_in_string_at_IO:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	jal read_str
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -16($fp)
	addi $sp, $sp, 4
	lw $v0, -16($fp)
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_in_int_at_IO:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	li $v0, 5
	syscall
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -16($fp)
	addi $sp, $sp, 4
	lw $v0, -16($fp)
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_at_String:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -12
	li $a0, 2
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	lw $a1, 0($fp)
	sw $a1, 12($a0)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, 0($fp)
	move $a0 $a0
	jal len
	sw $v0, -16($fp)
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	lw $a0, -16($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -20($fp)
	addi $sp, $sp, 4
	lw $a0, -12($fp)
	lw $a1, -20($fp)
	sw $a1, 16($a0)
	lw $v0, -12($fp)
	addi $sp, $sp, 12
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_length_at_String:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	lw $a0, 0($fp)
	lw $a1, 16($a0)
	sw $a1, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_concat_at_String:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -24
	lw $a0, 4($fp)
	lw $a1, 12($a0)
	sw $a1, -12($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, 4($fp)
	lw $a1, 16($a0)
	sw $a1, -20($fp)
	lw $a0, 0($fp)
	lw $a1, 16($a0)
	sw $a1, -24($fp)
	lw $a0, -20($fp)
	lw $a1, 12($a0)
	sw $a1, -20($fp)
	lw $a0, -24($fp)
	lw $a1, 12($a0)
	sw $a1, -24($fp)
	lw $a0, -20($fp)
	lw $a1, -24($fp)
	add $a0 $a0 $a1
	sw $a0, -20($fp)
	lw $a0, -12($fp)
	lw $a1, -16($fp)
	lw $a2, -20($fp)
	jal concat
	sw $v0, -28($fp)
	lw $a0, -28($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -32($fp)
	addi $sp, $sp, 4
	lw $v0, -32($fp)
	addi $sp, $sp, 24
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_substr_at_String:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -32
	lw $a0, 8($fp)
	lw $a1, 12($a0)
	sw $a1, -36($fp)
	lw $a0, 4($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -20($fp)
	lw $a0, 8($fp)
	lw $a1, 16($a0)
	sw $a1, -24($fp)
	lw $a0, -20($fp)
	lw $a1, -16($fp)
	add $a0 $a0 $a1
	sw $a0, -28($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal less
	sw $v0, -32($fp)
	lw $a0, -32($fp)
	bne $a0 $zero function_substr_at_String_error_label_0
	j function_substr_at_String_continue_label_1
	function_substr_at_String_error_label_0:
	li $v0, 4
	la $a0, data_2
	syscall
	li $v0, 10
	syscall
	function_substr_at_String_continue_label_1:
	lw $a0, -36($fp)
	lw $a1, -16($fp)
	lw $a2, -20($fp)
	jal substr
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -40($fp)
	addi $sp, $sp, 4
	lw $v0, -40($fp)
	addi $sp, $sp, 32
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_at_Int:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	li $a0, 3
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	lw $a1, 0($fp)
	sw $a1, 12($a0)
	lw $v0, -12($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_at_Bool:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -4
	li $a0, 4
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	lw $a1, 0($fp)
	sw $a1, 12($a0)
	lw $v0, -12($fp)
	addi $sp, $sp, 4
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_main_at_Main:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -168
	la $a0, data_3 + 0
	sw $a0, -24($fp)
	lw $a0, -24($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -28($fp)
	addi $sp, $sp, 4
	lw $a0, -28($fp)
	sw $a0, -20($fp)
	jal init_at_A2I
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	sw $a0, -36($fp)
	lw $a0, -36($fp)
	li $a1, 0
	jal equals
	sw $v0, -44($fp)
	lw $a0, -44($fp)
	bne $a0 $zero function_main_at_Main_error_label_0
	j function_main_at_Main_continue_label_1
	function_main_at_Main_error_label_0:
	li $v0, 4
	la $a0, data_4
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_1:
	lw $a0, -36($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -36($fp)
	lw $a1, 0($a0)
	sw $a1, -48($fp)
	lw $a0, -48($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 20
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -32($fp)
	addi $sp, $sp, 8
	lw $a0, -32($fp)
	sw $a0, -16($fp)
	li $a0, 678987
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -60($fp)
	addi $sp, $sp, 4
	lw $a0, -60($fp)
	sw $a0, -56($fp)
	jal init_at_A2I
	sw $v0, -72($fp)
	lw $a0, -72($fp)
	sw $a0, -68($fp)
	lw $a0, -68($fp)
	li $a1, 0
	jal equals
	sw $v0, -76($fp)
	lw $a0, -76($fp)
	bne $a0 $zero function_main_at_Main_error_label_2
	j function_main_at_Main_continue_label_3
	function_main_at_Main_error_label_2:
	li $v0, 4
	la $a0, data_5
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_3:
	lw $a0, -68($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -56($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -68($fp)
	lw $a1, 0($a0)
	sw $a1, -80($fp)
	lw $a0, -80($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 28
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -64($fp)
	addi $sp, $sp, 8
	lw $a0, -64($fp)
	sw $a0, -52($fp)
	lw $a0, -16($fp)
	sw $a0, -84($fp)
	lw $a0, 0($fp)
	sw $a0, -92($fp)
	lw $a0, -92($fp)
	li $a1, 0
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_main_at_Main_error_label_4
	j function_main_at_Main_continue_label_5
	function_main_at_Main_error_label_4:
	li $v0, 4
	la $a0, data_6
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_5:
	lw $a0, -92($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -84($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -92($fp)
	lw $a1, 0($a0)
	sw $a1, -100($fp)
	lw $a0, -100($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 16
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -88($fp)
	addi $sp, $sp, 8
	la $a0, data_7 + 0
	sw $a0, -108($fp)
	lw $a0, -108($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -112($fp)
	addi $sp, $sp, 4
	lw $a0, -112($fp)
	sw $a0, -104($fp)
	lw $a0, 0($fp)
	sw $a0, -120($fp)
	lw $a0, -120($fp)
	li $a1, 0
	jal equals
	sw $v0, -124($fp)
	lw $a0, -124($fp)
	bne $a0 $zero function_main_at_Main_error_label_6
	j function_main_at_Main_continue_label_7
	function_main_at_Main_error_label_6:
	li $v0, 4
	la $a0, data_8
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_7:
	lw $a0, -120($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -104($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -120($fp)
	lw $a1, 0($a0)
	sw $a1, -128($fp)
	lw $a0, -128($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -116($fp)
	addi $sp, $sp, 8
	lw $a0, -52($fp)
	sw $a0, -132($fp)
	lw $a0, 0($fp)
	sw $a0, -140($fp)
	lw $a0, -140($fp)
	li $a1, 0
	jal equals
	sw $v0, -144($fp)
	lw $a0, -144($fp)
	bne $a0 $zero function_main_at_Main_error_label_8
	j function_main_at_Main_continue_label_9
	function_main_at_Main_error_label_8:
	li $v0, 4
	la $a0, data_9
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_9:
	lw $a0, -140($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -132($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -140($fp)
	lw $a1, 0($a0)
	sw $a1, -148($fp)
	lw $a0, -148($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -136($fp)
	addi $sp, $sp, 8
	la $a0, data_1 + 0
	sw $a0, -156($fp)
	lw $a0, -156($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -160($fp)
	addi $sp, $sp, 4
	lw $a0, -160($fp)
	sw $a0, -152($fp)
	lw $a0, 0($fp)
	sw $a0, -168($fp)
	lw $a0, -168($fp)
	li $a1, 0
	jal equals
	sw $v0, -172($fp)
	lw $a0, -172($fp)
	bne $a0 $zero function_main_at_Main_error_label_10
	j function_main_at_Main_continue_label_11
	function_main_at_Main_error_label_10:
	li $v0, 4
	la $a0, data_10
	syscall
	li $v0, 10
	syscall
	function_main_at_Main_continue_label_11:
	lw $a0, -168($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -152($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -168($fp)
	lw $a1, 0($a0)
	sw $a1, -176($fp)
	lw $a0, -176($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -164($fp)
	addi $sp, $sp, 8
	lw $a0, -164($fp)
	sw $a0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 168
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_at_Main:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	li $a0, 5
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_attr_at_Main
	sw $v0, -16($fp)
	addi $sp, $sp, 4
	lw $v0, -12($fp)
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_attr_at_Main:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, 0
	addi $sp, $sp, 0
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_c2i_at_A2I:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -580
	la $a0, data_11 + 0
	sw $a0, -56($fp)
	lw $a0, -56($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -60($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -24($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -28($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -32($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -36($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_3
	lw $a0, -24($fp)
	lw $a1, -32($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_3
	lw $a0, -24($fp)
	lw $a1, -36($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_c2i_at_A2I_string_label_4
	j function_c2i_at_A2I_reference_label_5
	function_c2i_at_A2I_int_label_3:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -60($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equals
	sw $v0, -20($fp)
	j function_c2i_at_A2I_continue_label_6
	function_c2i_at_A2I_string_label_4:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -60($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equal_str
	sw $v0, -20($fp)
	j function_c2i_at_A2I_continue_label_6
	function_c2i_at_A2I_reference_label_5:
	lw $a0, 0($fp)
	lw $a1, -60($fp)
	jal equals
	sw $v0, -20($fp)
	function_c2i_at_A2I_continue_label_6:
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -52($fp)
	addi $sp, $sp, 4
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_c2i_at_A2I_then_label_0
	j function_c2i_at_A2I_else_label_1
	function_c2i_at_A2I_then_label_0:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -64($fp)
	addi $sp, $sp, 4
	lw $a0, -64($fp)
	sw $a0, -12($fp)
	j function_c2i_at_A2I_continue_label_2
	function_c2i_at_A2I_else_label_1:
	la $a0, data_12 + 0
	sw $a0, -112($fp)
	lw $a0, -112($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -116($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -80($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -84($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -88($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -92($fp)
	lw $a0, -80($fp)
	lw $a1, -84($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_10
	lw $a0, -80($fp)
	lw $a1, -88($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_10
	lw $a0, -80($fp)
	lw $a1, -92($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_c2i_at_A2I_string_label_11
	j function_c2i_at_A2I_reference_label_12
	function_c2i_at_A2I_int_label_10:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, -116($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equals
	sw $v0, -76($fp)
	j function_c2i_at_A2I_continue_label_13
	function_c2i_at_A2I_string_label_11:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, -116($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equal_str
	sw $v0, -76($fp)
	j function_c2i_at_A2I_continue_label_13
	function_c2i_at_A2I_reference_label_12:
	lw $a0, 0($fp)
	lw $a1, -116($fp)
	jal equals
	sw $v0, -76($fp)
	function_c2i_at_A2I_continue_label_13:
	lw $a0, -76($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -108($fp)
	addi $sp, $sp, 4
	lw $a0, -108($fp)
	lw $a1, 12($a0)
	sw $a1, -72($fp)
	lw $a0, -72($fp)
	bne $a0 $zero function_c2i_at_A2I_then_label_7
	j function_c2i_at_A2I_else_label_8
	function_c2i_at_A2I_then_label_7:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -120($fp)
	addi $sp, $sp, 4
	lw $a0, -120($fp)
	sw $a0, -68($fp)
	j function_c2i_at_A2I_continue_label_9
	function_c2i_at_A2I_else_label_8:
	la $a0, data_13 + 0
	sw $a0, -168($fp)
	lw $a0, -168($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -172($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -136($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -140($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -144($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -148($fp)
	lw $a0, -136($fp)
	lw $a1, -140($fp)
	jal equals
	sw $v0, -152($fp)
	lw $a0, -152($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_17
	lw $a0, -136($fp)
	lw $a1, -144($fp)
	jal equals
	sw $v0, -152($fp)
	lw $a0, -152($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_17
	lw $a0, -136($fp)
	lw $a1, -148($fp)
	jal equals
	sw $v0, -152($fp)
	lw $a0, -152($fp)
	bne $a0 $zero function_c2i_at_A2I_string_label_18
	j function_c2i_at_A2I_reference_label_19
	function_c2i_at_A2I_int_label_17:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -156($fp)
	lw $a0, -172($fp)
	lw $a1, 12($a0)
	sw $a1, -160($fp)
	lw $a0, -156($fp)
	lw $a1, -160($fp)
	jal equals
	sw $v0, -132($fp)
	j function_c2i_at_A2I_continue_label_20
	function_c2i_at_A2I_string_label_18:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -156($fp)
	lw $a0, -172($fp)
	lw $a1, 12($a0)
	sw $a1, -160($fp)
	lw $a0, -156($fp)
	lw $a1, -160($fp)
	jal equal_str
	sw $v0, -132($fp)
	j function_c2i_at_A2I_continue_label_20
	function_c2i_at_A2I_reference_label_19:
	lw $a0, 0($fp)
	lw $a1, -172($fp)
	jal equals
	sw $v0, -132($fp)
	function_c2i_at_A2I_continue_label_20:
	lw $a0, -132($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -164($fp)
	addi $sp, $sp, 4
	lw $a0, -164($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	lw $a0, -128($fp)
	bne $a0 $zero function_c2i_at_A2I_then_label_14
	j function_c2i_at_A2I_else_label_15
	function_c2i_at_A2I_then_label_14:
	li $a0, 2
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -176($fp)
	addi $sp, $sp, 4
	lw $a0, -176($fp)
	sw $a0, -124($fp)
	j function_c2i_at_A2I_continue_label_16
	function_c2i_at_A2I_else_label_15:
	la $a0, data_14 + 0
	sw $a0, -224($fp)
	lw $a0, -224($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -228($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -192($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -196($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -200($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -204($fp)
	lw $a0, -192($fp)
	lw $a1, -196($fp)
	jal equals
	sw $v0, -208($fp)
	lw $a0, -208($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_24
	lw $a0, -192($fp)
	lw $a1, -200($fp)
	jal equals
	sw $v0, -208($fp)
	lw $a0, -208($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_24
	lw $a0, -192($fp)
	lw $a1, -204($fp)
	jal equals
	sw $v0, -208($fp)
	lw $a0, -208($fp)
	bne $a0 $zero function_c2i_at_A2I_string_label_25
	j function_c2i_at_A2I_reference_label_26
	function_c2i_at_A2I_int_label_24:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -212($fp)
	lw $a0, -228($fp)
	lw $a1, 12($a0)
	sw $a1, -216($fp)
	lw $a0, -212($fp)
	lw $a1, -216($fp)
	jal equals
	sw $v0, -188($fp)
	j function_c2i_at_A2I_continue_label_27
	function_c2i_at_A2I_string_label_25:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -212($fp)
	lw $a0, -228($fp)
	lw $a1, 12($a0)
	sw $a1, -216($fp)
	lw $a0, -212($fp)
	lw $a1, -216($fp)
	jal equal_str
	sw $v0, -188($fp)
	j function_c2i_at_A2I_continue_label_27
	function_c2i_at_A2I_reference_label_26:
	lw $a0, 0($fp)
	lw $a1, -228($fp)
	jal equals
	sw $v0, -188($fp)
	function_c2i_at_A2I_continue_label_27:
	lw $a0, -188($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -220($fp)
	addi $sp, $sp, 4
	lw $a0, -220($fp)
	lw $a1, 12($a0)
	sw $a1, -184($fp)
	lw $a0, -184($fp)
	bne $a0 $zero function_c2i_at_A2I_then_label_21
	j function_c2i_at_A2I_else_label_22
	function_c2i_at_A2I_then_label_21:
	li $a0, 3
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -232($fp)
	addi $sp, $sp, 4
	lw $a0, -232($fp)
	sw $a0, -180($fp)
	j function_c2i_at_A2I_continue_label_23
	function_c2i_at_A2I_else_label_22:
	la $a0, data_15 + 0
	sw $a0, -280($fp)
	lw $a0, -280($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -284($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -248($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -252($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -256($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -260($fp)
	lw $a0, -248($fp)
	lw $a1, -252($fp)
	jal equals
	sw $v0, -264($fp)
	lw $a0, -264($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_31
	lw $a0, -248($fp)
	lw $a1, -256($fp)
	jal equals
	sw $v0, -264($fp)
	lw $a0, -264($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_31
	lw $a0, -248($fp)
	lw $a1, -260($fp)
	jal equals
	sw $v0, -264($fp)
	lw $a0, -264($fp)
	bne $a0 $zero function_c2i_at_A2I_string_label_32
	j function_c2i_at_A2I_reference_label_33
	function_c2i_at_A2I_int_label_31:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -268($fp)
	lw $a0, -284($fp)
	lw $a1, 12($a0)
	sw $a1, -272($fp)
	lw $a0, -268($fp)
	lw $a1, -272($fp)
	jal equals
	sw $v0, -244($fp)
	j function_c2i_at_A2I_continue_label_34
	function_c2i_at_A2I_string_label_32:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -268($fp)
	lw $a0, -284($fp)
	lw $a1, 12($a0)
	sw $a1, -272($fp)
	lw $a0, -268($fp)
	lw $a1, -272($fp)
	jal equal_str
	sw $v0, -244($fp)
	j function_c2i_at_A2I_continue_label_34
	function_c2i_at_A2I_reference_label_33:
	lw $a0, 0($fp)
	lw $a1, -284($fp)
	jal equals
	sw $v0, -244($fp)
	function_c2i_at_A2I_continue_label_34:
	lw $a0, -244($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -276($fp)
	addi $sp, $sp, 4
	lw $a0, -276($fp)
	lw $a1, 12($a0)
	sw $a1, -240($fp)
	lw $a0, -240($fp)
	bne $a0 $zero function_c2i_at_A2I_then_label_28
	j function_c2i_at_A2I_else_label_29
	function_c2i_at_A2I_then_label_28:
	li $a0, 4
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -288($fp)
	addi $sp, $sp, 4
	lw $a0, -288($fp)
	sw $a0, -236($fp)
	j function_c2i_at_A2I_continue_label_30
	function_c2i_at_A2I_else_label_29:
	la $a0, data_16 + 0
	sw $a0, -336($fp)
	lw $a0, -336($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -340($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -304($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -308($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -312($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -316($fp)
	lw $a0, -304($fp)
	lw $a1, -308($fp)
	jal equals
	sw $v0, -320($fp)
	lw $a0, -320($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_38
	lw $a0, -304($fp)
	lw $a1, -312($fp)
	jal equals
	sw $v0, -320($fp)
	lw $a0, -320($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_38
	lw $a0, -304($fp)
	lw $a1, -316($fp)
	jal equals
	sw $v0, -320($fp)
	lw $a0, -320($fp)
	bne $a0 $zero function_c2i_at_A2I_string_label_39
	j function_c2i_at_A2I_reference_label_40
	function_c2i_at_A2I_int_label_38:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -324($fp)
	lw $a0, -340($fp)
	lw $a1, 12($a0)
	sw $a1, -328($fp)
	lw $a0, -324($fp)
	lw $a1, -328($fp)
	jal equals
	sw $v0, -300($fp)
	j function_c2i_at_A2I_continue_label_41
	function_c2i_at_A2I_string_label_39:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -324($fp)
	lw $a0, -340($fp)
	lw $a1, 12($a0)
	sw $a1, -328($fp)
	lw $a0, -324($fp)
	lw $a1, -328($fp)
	jal equal_str
	sw $v0, -300($fp)
	j function_c2i_at_A2I_continue_label_41
	function_c2i_at_A2I_reference_label_40:
	lw $a0, 0($fp)
	lw $a1, -340($fp)
	jal equals
	sw $v0, -300($fp)
	function_c2i_at_A2I_continue_label_41:
	lw $a0, -300($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -332($fp)
	addi $sp, $sp, 4
	lw $a0, -332($fp)
	lw $a1, 12($a0)
	sw $a1, -296($fp)
	lw $a0, -296($fp)
	bne $a0 $zero function_c2i_at_A2I_then_label_35
	j function_c2i_at_A2I_else_label_36
	function_c2i_at_A2I_then_label_35:
	li $a0, 5
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -344($fp)
	addi $sp, $sp, 4
	lw $a0, -344($fp)
	sw $a0, -292($fp)
	j function_c2i_at_A2I_continue_label_37
	function_c2i_at_A2I_else_label_36:
	la $a0, data_17 + 0
	sw $a0, -392($fp)
	lw $a0, -392($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -396($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -360($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -364($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -368($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -372($fp)
	lw $a0, -360($fp)
	lw $a1, -364($fp)
	jal equals
	sw $v0, -376($fp)
	lw $a0, -376($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_45
	lw $a0, -360($fp)
	lw $a1, -368($fp)
	jal equals
	sw $v0, -376($fp)
	lw $a0, -376($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_45
	lw $a0, -360($fp)
	lw $a1, -372($fp)
	jal equals
	sw $v0, -376($fp)
	lw $a0, -376($fp)
	bne $a0 $zero function_c2i_at_A2I_string_label_46
	j function_c2i_at_A2I_reference_label_47
	function_c2i_at_A2I_int_label_45:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -380($fp)
	lw $a0, -396($fp)
	lw $a1, 12($a0)
	sw $a1, -384($fp)
	lw $a0, -380($fp)
	lw $a1, -384($fp)
	jal equals
	sw $v0, -356($fp)
	j function_c2i_at_A2I_continue_label_48
	function_c2i_at_A2I_string_label_46:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -380($fp)
	lw $a0, -396($fp)
	lw $a1, 12($a0)
	sw $a1, -384($fp)
	lw $a0, -380($fp)
	lw $a1, -384($fp)
	jal equal_str
	sw $v0, -356($fp)
	j function_c2i_at_A2I_continue_label_48
	function_c2i_at_A2I_reference_label_47:
	lw $a0, 0($fp)
	lw $a1, -396($fp)
	jal equals
	sw $v0, -356($fp)
	function_c2i_at_A2I_continue_label_48:
	lw $a0, -356($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -388($fp)
	addi $sp, $sp, 4
	lw $a0, -388($fp)
	lw $a1, 12($a0)
	sw $a1, -352($fp)
	lw $a0, -352($fp)
	bne $a0 $zero function_c2i_at_A2I_then_label_42
	j function_c2i_at_A2I_else_label_43
	function_c2i_at_A2I_then_label_42:
	li $a0, 6
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -400($fp)
	addi $sp, $sp, 4
	lw $a0, -400($fp)
	sw $a0, -348($fp)
	j function_c2i_at_A2I_continue_label_44
	function_c2i_at_A2I_else_label_43:
	la $a0, data_18 + 0
	sw $a0, -448($fp)
	lw $a0, -448($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -452($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -416($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -420($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -424($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -428($fp)
	lw $a0, -416($fp)
	lw $a1, -420($fp)
	jal equals
	sw $v0, -432($fp)
	lw $a0, -432($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_52
	lw $a0, -416($fp)
	lw $a1, -424($fp)
	jal equals
	sw $v0, -432($fp)
	lw $a0, -432($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_52
	lw $a0, -416($fp)
	lw $a1, -428($fp)
	jal equals
	sw $v0, -432($fp)
	lw $a0, -432($fp)
	bne $a0 $zero function_c2i_at_A2I_string_label_53
	j function_c2i_at_A2I_reference_label_54
	function_c2i_at_A2I_int_label_52:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -436($fp)
	lw $a0, -452($fp)
	lw $a1, 12($a0)
	sw $a1, -440($fp)
	lw $a0, -436($fp)
	lw $a1, -440($fp)
	jal equals
	sw $v0, -412($fp)
	j function_c2i_at_A2I_continue_label_55
	function_c2i_at_A2I_string_label_53:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -436($fp)
	lw $a0, -452($fp)
	lw $a1, 12($a0)
	sw $a1, -440($fp)
	lw $a0, -436($fp)
	lw $a1, -440($fp)
	jal equal_str
	sw $v0, -412($fp)
	j function_c2i_at_A2I_continue_label_55
	function_c2i_at_A2I_reference_label_54:
	lw $a0, 0($fp)
	lw $a1, -452($fp)
	jal equals
	sw $v0, -412($fp)
	function_c2i_at_A2I_continue_label_55:
	lw $a0, -412($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -444($fp)
	addi $sp, $sp, 4
	lw $a0, -444($fp)
	lw $a1, 12($a0)
	sw $a1, -408($fp)
	lw $a0, -408($fp)
	bne $a0 $zero function_c2i_at_A2I_then_label_49
	j function_c2i_at_A2I_else_label_50
	function_c2i_at_A2I_then_label_49:
	li $a0, 7
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -456($fp)
	addi $sp, $sp, 4
	lw $a0, -456($fp)
	sw $a0, -404($fp)
	j function_c2i_at_A2I_continue_label_51
	function_c2i_at_A2I_else_label_50:
	la $a0, data_19 + 0
	sw $a0, -504($fp)
	lw $a0, -504($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -508($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -472($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -476($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -480($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -484($fp)
	lw $a0, -472($fp)
	lw $a1, -476($fp)
	jal equals
	sw $v0, -488($fp)
	lw $a0, -488($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_59
	lw $a0, -472($fp)
	lw $a1, -480($fp)
	jal equals
	sw $v0, -488($fp)
	lw $a0, -488($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_59
	lw $a0, -472($fp)
	lw $a1, -484($fp)
	jal equals
	sw $v0, -488($fp)
	lw $a0, -488($fp)
	bne $a0 $zero function_c2i_at_A2I_string_label_60
	j function_c2i_at_A2I_reference_label_61
	function_c2i_at_A2I_int_label_59:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -492($fp)
	lw $a0, -508($fp)
	lw $a1, 12($a0)
	sw $a1, -496($fp)
	lw $a0, -492($fp)
	lw $a1, -496($fp)
	jal equals
	sw $v0, -468($fp)
	j function_c2i_at_A2I_continue_label_62
	function_c2i_at_A2I_string_label_60:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -492($fp)
	lw $a0, -508($fp)
	lw $a1, 12($a0)
	sw $a1, -496($fp)
	lw $a0, -492($fp)
	lw $a1, -496($fp)
	jal equal_str
	sw $v0, -468($fp)
	j function_c2i_at_A2I_continue_label_62
	function_c2i_at_A2I_reference_label_61:
	lw $a0, 0($fp)
	lw $a1, -508($fp)
	jal equals
	sw $v0, -468($fp)
	function_c2i_at_A2I_continue_label_62:
	lw $a0, -468($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -500($fp)
	addi $sp, $sp, 4
	lw $a0, -500($fp)
	lw $a1, 12($a0)
	sw $a1, -464($fp)
	lw $a0, -464($fp)
	bne $a0 $zero function_c2i_at_A2I_then_label_56
	j function_c2i_at_A2I_else_label_57
	function_c2i_at_A2I_then_label_56:
	li $a0, 8
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -512($fp)
	addi $sp, $sp, 4
	lw $a0, -512($fp)
	sw $a0, -460($fp)
	j function_c2i_at_A2I_continue_label_58
	function_c2i_at_A2I_else_label_57:
	la $a0, data_20 + 0
	sw $a0, -560($fp)
	lw $a0, -560($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -564($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -528($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -532($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -536($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -540($fp)
	lw $a0, -528($fp)
	lw $a1, -532($fp)
	jal equals
	sw $v0, -544($fp)
	lw $a0, -544($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_66
	lw $a0, -528($fp)
	lw $a1, -536($fp)
	jal equals
	sw $v0, -544($fp)
	lw $a0, -544($fp)
	bne $a0 $zero function_c2i_at_A2I_int_label_66
	lw $a0, -528($fp)
	lw $a1, -540($fp)
	jal equals
	sw $v0, -544($fp)
	lw $a0, -544($fp)
	bne $a0 $zero function_c2i_at_A2I_string_label_67
	j function_c2i_at_A2I_reference_label_68
	function_c2i_at_A2I_int_label_66:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -548($fp)
	lw $a0, -564($fp)
	lw $a1, 12($a0)
	sw $a1, -552($fp)
	lw $a0, -548($fp)
	lw $a1, -552($fp)
	jal equals
	sw $v0, -524($fp)
	j function_c2i_at_A2I_continue_label_69
	function_c2i_at_A2I_string_label_67:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -548($fp)
	lw $a0, -564($fp)
	lw $a1, 12($a0)
	sw $a1, -552($fp)
	lw $a0, -548($fp)
	lw $a1, -552($fp)
	jal equal_str
	sw $v0, -524($fp)
	j function_c2i_at_A2I_continue_label_69
	function_c2i_at_A2I_reference_label_68:
	lw $a0, 0($fp)
	lw $a1, -564($fp)
	jal equals
	sw $v0, -524($fp)
	function_c2i_at_A2I_continue_label_69:
	lw $a0, -524($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -556($fp)
	addi $sp, $sp, 4
	lw $a0, -556($fp)
	lw $a1, 12($a0)
	sw $a1, -520($fp)
	lw $a0, -520($fp)
	bne $a0 $zero function_c2i_at_A2I_then_label_63
	j function_c2i_at_A2I_else_label_64
	function_c2i_at_A2I_then_label_63:
	li $a0, 9
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -568($fp)
	addi $sp, $sp, 4
	lw $a0, -568($fp)
	sw $a0, -516($fp)
	j function_c2i_at_A2I_continue_label_65
	function_c2i_at_A2I_else_label_64:
	lw $a0, 4($fp)
	sw $a0, -576($fp)
	lw $a0, -576($fp)
	li $a1, 0
	jal equals
	sw $v0, -580($fp)
	lw $a0, -580($fp)
	bne $a0 $zero function_c2i_at_A2I_error_label_70
	j function_c2i_at_A2I_continue_label_71
	function_c2i_at_A2I_error_label_70:
	li $v0, 4
	la $a0, data_21
	syscall
	li $v0, 10
	syscall
	function_c2i_at_A2I_continue_label_71:
	lw $a0, -576($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -576($fp)
	lw $a1, 0($a0)
	sw $a1, -584($fp)
	lw $a0, -584($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 0
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -572($fp)
	addi $sp, $sp, 4
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -588($fp)
	addi $sp, $sp, 4
	lw $a0, -588($fp)
	sw $a0, -516($fp)
	function_c2i_at_A2I_continue_label_65:
	lw $a0, -516($fp)
	sw $a0, -460($fp)
	function_c2i_at_A2I_continue_label_58:
	lw $a0, -460($fp)
	sw $a0, -404($fp)
	function_c2i_at_A2I_continue_label_51:
	lw $a0, -404($fp)
	sw $a0, -348($fp)
	function_c2i_at_A2I_continue_label_44:
	lw $a0, -348($fp)
	sw $a0, -292($fp)
	function_c2i_at_A2I_continue_label_37:
	lw $a0, -292($fp)
	sw $a0, -236($fp)
	function_c2i_at_A2I_continue_label_30:
	lw $a0, -236($fp)
	sw $a0, -180($fp)
	function_c2i_at_A2I_continue_label_23:
	lw $a0, -180($fp)
	sw $a0, -124($fp)
	function_c2i_at_A2I_continue_label_16:
	lw $a0, -124($fp)
	sw $a0, -68($fp)
	function_c2i_at_A2I_continue_label_9:
	lw $a0, -68($fp)
	sw $a0, -12($fp)
	function_c2i_at_A2I_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 580
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_i2c_at_A2I:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -584
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -24($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -28($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -32($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -36($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_3
	lw $a0, -24($fp)
	lw $a1, -32($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_3
	lw $a0, -24($fp)
	lw $a1, -36($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_i2c_at_A2I_string_label_4
	j function_i2c_at_A2I_reference_label_5
	function_i2c_at_A2I_int_label_3:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equals
	sw $v0, -20($fp)
	j function_i2c_at_A2I_continue_label_6
	function_i2c_at_A2I_string_label_4:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equal_str
	sw $v0, -20($fp)
	j function_i2c_at_A2I_continue_label_6
	function_i2c_at_A2I_reference_label_5:
	lw $a0, 0($fp)
	lw $a1, -56($fp)
	jal equals
	sw $v0, -20($fp)
	function_i2c_at_A2I_continue_label_6:
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -52($fp)
	addi $sp, $sp, 4
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_i2c_at_A2I_then_label_0
	j function_i2c_at_A2I_else_label_1
	function_i2c_at_A2I_then_label_0:
	la $a0, data_11 + 0
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -64($fp)
	addi $sp, $sp, 4
	lw $a0, -64($fp)
	sw $a0, -12($fp)
	j function_i2c_at_A2I_continue_label_2
	function_i2c_at_A2I_else_label_1:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -112($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -80($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -84($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -88($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -92($fp)
	lw $a0, -80($fp)
	lw $a1, -84($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_10
	lw $a0, -80($fp)
	lw $a1, -88($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_10
	lw $a0, -80($fp)
	lw $a1, -92($fp)
	jal equals
	sw $v0, -96($fp)
	lw $a0, -96($fp)
	bne $a0 $zero function_i2c_at_A2I_string_label_11
	j function_i2c_at_A2I_reference_label_12
	function_i2c_at_A2I_int_label_10:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, -112($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equals
	sw $v0, -76($fp)
	j function_i2c_at_A2I_continue_label_13
	function_i2c_at_A2I_string_label_11:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, -112($fp)
	lw $a1, 12($a0)
	sw $a1, -104($fp)
	lw $a0, -100($fp)
	lw $a1, -104($fp)
	jal equal_str
	sw $v0, -76($fp)
	j function_i2c_at_A2I_continue_label_13
	function_i2c_at_A2I_reference_label_12:
	lw $a0, 0($fp)
	lw $a1, -112($fp)
	jal equals
	sw $v0, -76($fp)
	function_i2c_at_A2I_continue_label_13:
	lw $a0, -76($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -108($fp)
	addi $sp, $sp, 4
	lw $a0, -108($fp)
	lw $a1, 12($a0)
	sw $a1, -72($fp)
	lw $a0, -72($fp)
	bne $a0 $zero function_i2c_at_A2I_then_label_7
	j function_i2c_at_A2I_else_label_8
	function_i2c_at_A2I_then_label_7:
	la $a0, data_12 + 0
	sw $a0, -116($fp)
	lw $a0, -116($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -120($fp)
	addi $sp, $sp, 4
	lw $a0, -120($fp)
	sw $a0, -68($fp)
	j function_i2c_at_A2I_continue_label_9
	function_i2c_at_A2I_else_label_8:
	li $a0, 2
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -168($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -136($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -140($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -144($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -148($fp)
	lw $a0, -136($fp)
	lw $a1, -140($fp)
	jal equals
	sw $v0, -152($fp)
	lw $a0, -152($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_17
	lw $a0, -136($fp)
	lw $a1, -144($fp)
	jal equals
	sw $v0, -152($fp)
	lw $a0, -152($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_17
	lw $a0, -136($fp)
	lw $a1, -148($fp)
	jal equals
	sw $v0, -152($fp)
	lw $a0, -152($fp)
	bne $a0 $zero function_i2c_at_A2I_string_label_18
	j function_i2c_at_A2I_reference_label_19
	function_i2c_at_A2I_int_label_17:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -156($fp)
	lw $a0, -168($fp)
	lw $a1, 12($a0)
	sw $a1, -160($fp)
	lw $a0, -156($fp)
	lw $a1, -160($fp)
	jal equals
	sw $v0, -132($fp)
	j function_i2c_at_A2I_continue_label_20
	function_i2c_at_A2I_string_label_18:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -156($fp)
	lw $a0, -168($fp)
	lw $a1, 12($a0)
	sw $a1, -160($fp)
	lw $a0, -156($fp)
	lw $a1, -160($fp)
	jal equal_str
	sw $v0, -132($fp)
	j function_i2c_at_A2I_continue_label_20
	function_i2c_at_A2I_reference_label_19:
	lw $a0, 0($fp)
	lw $a1, -168($fp)
	jal equals
	sw $v0, -132($fp)
	function_i2c_at_A2I_continue_label_20:
	lw $a0, -132($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -164($fp)
	addi $sp, $sp, 4
	lw $a0, -164($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	lw $a0, -128($fp)
	bne $a0 $zero function_i2c_at_A2I_then_label_14
	j function_i2c_at_A2I_else_label_15
	function_i2c_at_A2I_then_label_14:
	la $a0, data_13 + 0
	sw $a0, -172($fp)
	lw $a0, -172($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -176($fp)
	addi $sp, $sp, 4
	lw $a0, -176($fp)
	sw $a0, -124($fp)
	j function_i2c_at_A2I_continue_label_16
	function_i2c_at_A2I_else_label_15:
	li $a0, 3
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -224($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -192($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -196($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -200($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -204($fp)
	lw $a0, -192($fp)
	lw $a1, -196($fp)
	jal equals
	sw $v0, -208($fp)
	lw $a0, -208($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_24
	lw $a0, -192($fp)
	lw $a1, -200($fp)
	jal equals
	sw $v0, -208($fp)
	lw $a0, -208($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_24
	lw $a0, -192($fp)
	lw $a1, -204($fp)
	jal equals
	sw $v0, -208($fp)
	lw $a0, -208($fp)
	bne $a0 $zero function_i2c_at_A2I_string_label_25
	j function_i2c_at_A2I_reference_label_26
	function_i2c_at_A2I_int_label_24:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -212($fp)
	lw $a0, -224($fp)
	lw $a1, 12($a0)
	sw $a1, -216($fp)
	lw $a0, -212($fp)
	lw $a1, -216($fp)
	jal equals
	sw $v0, -188($fp)
	j function_i2c_at_A2I_continue_label_27
	function_i2c_at_A2I_string_label_25:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -212($fp)
	lw $a0, -224($fp)
	lw $a1, 12($a0)
	sw $a1, -216($fp)
	lw $a0, -212($fp)
	lw $a1, -216($fp)
	jal equal_str
	sw $v0, -188($fp)
	j function_i2c_at_A2I_continue_label_27
	function_i2c_at_A2I_reference_label_26:
	lw $a0, 0($fp)
	lw $a1, -224($fp)
	jal equals
	sw $v0, -188($fp)
	function_i2c_at_A2I_continue_label_27:
	lw $a0, -188($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -220($fp)
	addi $sp, $sp, 4
	lw $a0, -220($fp)
	lw $a1, 12($a0)
	sw $a1, -184($fp)
	lw $a0, -184($fp)
	bne $a0 $zero function_i2c_at_A2I_then_label_21
	j function_i2c_at_A2I_else_label_22
	function_i2c_at_A2I_then_label_21:
	la $a0, data_14 + 0
	sw $a0, -228($fp)
	lw $a0, -228($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -232($fp)
	addi $sp, $sp, 4
	lw $a0, -232($fp)
	sw $a0, -180($fp)
	j function_i2c_at_A2I_continue_label_23
	function_i2c_at_A2I_else_label_22:
	li $a0, 4
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -280($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -248($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -252($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -256($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -260($fp)
	lw $a0, -248($fp)
	lw $a1, -252($fp)
	jal equals
	sw $v0, -264($fp)
	lw $a0, -264($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_31
	lw $a0, -248($fp)
	lw $a1, -256($fp)
	jal equals
	sw $v0, -264($fp)
	lw $a0, -264($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_31
	lw $a0, -248($fp)
	lw $a1, -260($fp)
	jal equals
	sw $v0, -264($fp)
	lw $a0, -264($fp)
	bne $a0 $zero function_i2c_at_A2I_string_label_32
	j function_i2c_at_A2I_reference_label_33
	function_i2c_at_A2I_int_label_31:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -268($fp)
	lw $a0, -280($fp)
	lw $a1, 12($a0)
	sw $a1, -272($fp)
	lw $a0, -268($fp)
	lw $a1, -272($fp)
	jal equals
	sw $v0, -244($fp)
	j function_i2c_at_A2I_continue_label_34
	function_i2c_at_A2I_string_label_32:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -268($fp)
	lw $a0, -280($fp)
	lw $a1, 12($a0)
	sw $a1, -272($fp)
	lw $a0, -268($fp)
	lw $a1, -272($fp)
	jal equal_str
	sw $v0, -244($fp)
	j function_i2c_at_A2I_continue_label_34
	function_i2c_at_A2I_reference_label_33:
	lw $a0, 0($fp)
	lw $a1, -280($fp)
	jal equals
	sw $v0, -244($fp)
	function_i2c_at_A2I_continue_label_34:
	lw $a0, -244($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -276($fp)
	addi $sp, $sp, 4
	lw $a0, -276($fp)
	lw $a1, 12($a0)
	sw $a1, -240($fp)
	lw $a0, -240($fp)
	bne $a0 $zero function_i2c_at_A2I_then_label_28
	j function_i2c_at_A2I_else_label_29
	function_i2c_at_A2I_then_label_28:
	la $a0, data_15 + 0
	sw $a0, -284($fp)
	lw $a0, -284($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -288($fp)
	addi $sp, $sp, 4
	lw $a0, -288($fp)
	sw $a0, -236($fp)
	j function_i2c_at_A2I_continue_label_30
	function_i2c_at_A2I_else_label_29:
	li $a0, 5
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -336($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -304($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -308($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -312($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -316($fp)
	lw $a0, -304($fp)
	lw $a1, -308($fp)
	jal equals
	sw $v0, -320($fp)
	lw $a0, -320($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_38
	lw $a0, -304($fp)
	lw $a1, -312($fp)
	jal equals
	sw $v0, -320($fp)
	lw $a0, -320($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_38
	lw $a0, -304($fp)
	lw $a1, -316($fp)
	jal equals
	sw $v0, -320($fp)
	lw $a0, -320($fp)
	bne $a0 $zero function_i2c_at_A2I_string_label_39
	j function_i2c_at_A2I_reference_label_40
	function_i2c_at_A2I_int_label_38:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -324($fp)
	lw $a0, -336($fp)
	lw $a1, 12($a0)
	sw $a1, -328($fp)
	lw $a0, -324($fp)
	lw $a1, -328($fp)
	jal equals
	sw $v0, -300($fp)
	j function_i2c_at_A2I_continue_label_41
	function_i2c_at_A2I_string_label_39:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -324($fp)
	lw $a0, -336($fp)
	lw $a1, 12($a0)
	sw $a1, -328($fp)
	lw $a0, -324($fp)
	lw $a1, -328($fp)
	jal equal_str
	sw $v0, -300($fp)
	j function_i2c_at_A2I_continue_label_41
	function_i2c_at_A2I_reference_label_40:
	lw $a0, 0($fp)
	lw $a1, -336($fp)
	jal equals
	sw $v0, -300($fp)
	function_i2c_at_A2I_continue_label_41:
	lw $a0, -300($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -332($fp)
	addi $sp, $sp, 4
	lw $a0, -332($fp)
	lw $a1, 12($a0)
	sw $a1, -296($fp)
	lw $a0, -296($fp)
	bne $a0 $zero function_i2c_at_A2I_then_label_35
	j function_i2c_at_A2I_else_label_36
	function_i2c_at_A2I_then_label_35:
	la $a0, data_16 + 0
	sw $a0, -340($fp)
	lw $a0, -340($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -344($fp)
	addi $sp, $sp, 4
	lw $a0, -344($fp)
	sw $a0, -292($fp)
	j function_i2c_at_A2I_continue_label_37
	function_i2c_at_A2I_else_label_36:
	li $a0, 6
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -392($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -360($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -364($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -368($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -372($fp)
	lw $a0, -360($fp)
	lw $a1, -364($fp)
	jal equals
	sw $v0, -376($fp)
	lw $a0, -376($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_45
	lw $a0, -360($fp)
	lw $a1, -368($fp)
	jal equals
	sw $v0, -376($fp)
	lw $a0, -376($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_45
	lw $a0, -360($fp)
	lw $a1, -372($fp)
	jal equals
	sw $v0, -376($fp)
	lw $a0, -376($fp)
	bne $a0 $zero function_i2c_at_A2I_string_label_46
	j function_i2c_at_A2I_reference_label_47
	function_i2c_at_A2I_int_label_45:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -380($fp)
	lw $a0, -392($fp)
	lw $a1, 12($a0)
	sw $a1, -384($fp)
	lw $a0, -380($fp)
	lw $a1, -384($fp)
	jal equals
	sw $v0, -356($fp)
	j function_i2c_at_A2I_continue_label_48
	function_i2c_at_A2I_string_label_46:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -380($fp)
	lw $a0, -392($fp)
	lw $a1, 12($a0)
	sw $a1, -384($fp)
	lw $a0, -380($fp)
	lw $a1, -384($fp)
	jal equal_str
	sw $v0, -356($fp)
	j function_i2c_at_A2I_continue_label_48
	function_i2c_at_A2I_reference_label_47:
	lw $a0, 0($fp)
	lw $a1, -392($fp)
	jal equals
	sw $v0, -356($fp)
	function_i2c_at_A2I_continue_label_48:
	lw $a0, -356($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -388($fp)
	addi $sp, $sp, 4
	lw $a0, -388($fp)
	lw $a1, 12($a0)
	sw $a1, -352($fp)
	lw $a0, -352($fp)
	bne $a0 $zero function_i2c_at_A2I_then_label_42
	j function_i2c_at_A2I_else_label_43
	function_i2c_at_A2I_then_label_42:
	la $a0, data_17 + 0
	sw $a0, -396($fp)
	lw $a0, -396($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -400($fp)
	addi $sp, $sp, 4
	lw $a0, -400($fp)
	sw $a0, -348($fp)
	j function_i2c_at_A2I_continue_label_44
	function_i2c_at_A2I_else_label_43:
	li $a0, 7
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -448($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -416($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -420($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -424($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -428($fp)
	lw $a0, -416($fp)
	lw $a1, -420($fp)
	jal equals
	sw $v0, -432($fp)
	lw $a0, -432($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_52
	lw $a0, -416($fp)
	lw $a1, -424($fp)
	jal equals
	sw $v0, -432($fp)
	lw $a0, -432($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_52
	lw $a0, -416($fp)
	lw $a1, -428($fp)
	jal equals
	sw $v0, -432($fp)
	lw $a0, -432($fp)
	bne $a0 $zero function_i2c_at_A2I_string_label_53
	j function_i2c_at_A2I_reference_label_54
	function_i2c_at_A2I_int_label_52:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -436($fp)
	lw $a0, -448($fp)
	lw $a1, 12($a0)
	sw $a1, -440($fp)
	lw $a0, -436($fp)
	lw $a1, -440($fp)
	jal equals
	sw $v0, -412($fp)
	j function_i2c_at_A2I_continue_label_55
	function_i2c_at_A2I_string_label_53:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -436($fp)
	lw $a0, -448($fp)
	lw $a1, 12($a0)
	sw $a1, -440($fp)
	lw $a0, -436($fp)
	lw $a1, -440($fp)
	jal equal_str
	sw $v0, -412($fp)
	j function_i2c_at_A2I_continue_label_55
	function_i2c_at_A2I_reference_label_54:
	lw $a0, 0($fp)
	lw $a1, -448($fp)
	jal equals
	sw $v0, -412($fp)
	function_i2c_at_A2I_continue_label_55:
	lw $a0, -412($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -444($fp)
	addi $sp, $sp, 4
	lw $a0, -444($fp)
	lw $a1, 12($a0)
	sw $a1, -408($fp)
	lw $a0, -408($fp)
	bne $a0 $zero function_i2c_at_A2I_then_label_49
	j function_i2c_at_A2I_else_label_50
	function_i2c_at_A2I_then_label_49:
	la $a0, data_18 + 0
	sw $a0, -452($fp)
	lw $a0, -452($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -456($fp)
	addi $sp, $sp, 4
	lw $a0, -456($fp)
	sw $a0, -404($fp)
	j function_i2c_at_A2I_continue_label_51
	function_i2c_at_A2I_else_label_50:
	li $a0, 8
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -504($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -472($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -476($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -480($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -484($fp)
	lw $a0, -472($fp)
	lw $a1, -476($fp)
	jal equals
	sw $v0, -488($fp)
	lw $a0, -488($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_59
	lw $a0, -472($fp)
	lw $a1, -480($fp)
	jal equals
	sw $v0, -488($fp)
	lw $a0, -488($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_59
	lw $a0, -472($fp)
	lw $a1, -484($fp)
	jal equals
	sw $v0, -488($fp)
	lw $a0, -488($fp)
	bne $a0 $zero function_i2c_at_A2I_string_label_60
	j function_i2c_at_A2I_reference_label_61
	function_i2c_at_A2I_int_label_59:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -492($fp)
	lw $a0, -504($fp)
	lw $a1, 12($a0)
	sw $a1, -496($fp)
	lw $a0, -492($fp)
	lw $a1, -496($fp)
	jal equals
	sw $v0, -468($fp)
	j function_i2c_at_A2I_continue_label_62
	function_i2c_at_A2I_string_label_60:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -492($fp)
	lw $a0, -504($fp)
	lw $a1, 12($a0)
	sw $a1, -496($fp)
	lw $a0, -492($fp)
	lw $a1, -496($fp)
	jal equal_str
	sw $v0, -468($fp)
	j function_i2c_at_A2I_continue_label_62
	function_i2c_at_A2I_reference_label_61:
	lw $a0, 0($fp)
	lw $a1, -504($fp)
	jal equals
	sw $v0, -468($fp)
	function_i2c_at_A2I_continue_label_62:
	lw $a0, -468($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -500($fp)
	addi $sp, $sp, 4
	lw $a0, -500($fp)
	lw $a1, 12($a0)
	sw $a1, -464($fp)
	lw $a0, -464($fp)
	bne $a0 $zero function_i2c_at_A2I_then_label_56
	j function_i2c_at_A2I_else_label_57
	function_i2c_at_A2I_then_label_56:
	la $a0, data_19 + 0
	sw $a0, -508($fp)
	lw $a0, -508($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -512($fp)
	addi $sp, $sp, 4
	lw $a0, -512($fp)
	sw $a0, -460($fp)
	j function_i2c_at_A2I_continue_label_58
	function_i2c_at_A2I_else_label_57:
	li $a0, 9
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -560($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -528($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -532($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -536($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -540($fp)
	lw $a0, -528($fp)
	lw $a1, -532($fp)
	jal equals
	sw $v0, -544($fp)
	lw $a0, -544($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_66
	lw $a0, -528($fp)
	lw $a1, -536($fp)
	jal equals
	sw $v0, -544($fp)
	lw $a0, -544($fp)
	bne $a0 $zero function_i2c_at_A2I_int_label_66
	lw $a0, -528($fp)
	lw $a1, -540($fp)
	jal equals
	sw $v0, -544($fp)
	lw $a0, -544($fp)
	bne $a0 $zero function_i2c_at_A2I_string_label_67
	j function_i2c_at_A2I_reference_label_68
	function_i2c_at_A2I_int_label_66:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -548($fp)
	lw $a0, -560($fp)
	lw $a1, 12($a0)
	sw $a1, -552($fp)
	lw $a0, -548($fp)
	lw $a1, -552($fp)
	jal equals
	sw $v0, -524($fp)
	j function_i2c_at_A2I_continue_label_69
	function_i2c_at_A2I_string_label_67:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -548($fp)
	lw $a0, -560($fp)
	lw $a1, 12($a0)
	sw $a1, -552($fp)
	lw $a0, -548($fp)
	lw $a1, -552($fp)
	jal equal_str
	sw $v0, -524($fp)
	j function_i2c_at_A2I_continue_label_69
	function_i2c_at_A2I_reference_label_68:
	lw $a0, 0($fp)
	lw $a1, -560($fp)
	jal equals
	sw $v0, -524($fp)
	function_i2c_at_A2I_continue_label_69:
	lw $a0, -524($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -556($fp)
	addi $sp, $sp, 4
	lw $a0, -556($fp)
	lw $a1, 12($a0)
	sw $a1, -520($fp)
	lw $a0, -520($fp)
	bne $a0 $zero function_i2c_at_A2I_then_label_63
	j function_i2c_at_A2I_else_label_64
	function_i2c_at_A2I_then_label_63:
	la $a0, data_20 + 0
	sw $a0, -564($fp)
	lw $a0, -564($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -568($fp)
	addi $sp, $sp, 4
	lw $a0, -568($fp)
	sw $a0, -516($fp)
	j function_i2c_at_A2I_continue_label_65
	function_i2c_at_A2I_else_label_64:
	lw $a0, 4($fp)
	sw $a0, -576($fp)
	lw $a0, -576($fp)
	li $a1, 0
	jal equals
	sw $v0, -580($fp)
	lw $a0, -580($fp)
	bne $a0 $zero function_i2c_at_A2I_error_label_70
	j function_i2c_at_A2I_continue_label_71
	function_i2c_at_A2I_error_label_70:
	li $v0, 4
	la $a0, data_22
	syscall
	li $v0, 10
	syscall
	function_i2c_at_A2I_continue_label_71:
	lw $a0, -576($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -576($fp)
	lw $a1, 0($a0)
	sw $a1, -584($fp)
	lw $a0, -584($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 0
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -572($fp)
	addi $sp, $sp, 4
	la $a0, data_23 + 0
	sw $a0, -588($fp)
	lw $a0, -588($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -592($fp)
	addi $sp, $sp, 4
	lw $a0, -592($fp)
	sw $a0, -516($fp)
	function_i2c_at_A2I_continue_label_65:
	lw $a0, -516($fp)
	sw $a0, -460($fp)
	function_i2c_at_A2I_continue_label_58:
	lw $a0, -460($fp)
	sw $a0, -404($fp)
	function_i2c_at_A2I_continue_label_51:
	lw $a0, -404($fp)
	sw $a0, -348($fp)
	function_i2c_at_A2I_continue_label_44:
	lw $a0, -348($fp)
	sw $a0, -292($fp)
	function_i2c_at_A2I_continue_label_37:
	lw $a0, -292($fp)
	sw $a0, -236($fp)
	function_i2c_at_A2I_continue_label_30:
	lw $a0, -236($fp)
	sw $a0, -180($fp)
	function_i2c_at_A2I_continue_label_23:
	lw $a0, -180($fp)
	sw $a0, -124($fp)
	function_i2c_at_A2I_continue_label_16:
	lw $a0, -124($fp)
	sw $a0, -68($fp)
	function_i2c_at_A2I_continue_label_9:
	lw $a0, -68($fp)
	sw $a0, -12($fp)
	function_i2c_at_A2I_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 584
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_a2i_at_A2I:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -436
	lw $a0, 0($fp)
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	li $a1, 0
	jal equals
	sw $v0, -64($fp)
	lw $a0, -64($fp)
	bne $a0 $zero function_a2i_at_A2I_error_label_3
	j function_a2i_at_A2I_continue_label_4
	function_a2i_at_A2I_error_label_3:
	li $v0, 4
	la $a0, data_24
	syscall
	li $v0, 10
	syscall
	function_a2i_at_A2I_continue_label_4:
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -60($fp)
	lw $a1, 0($a0)
	sw $a1, -68($fp)
	lw $a0, -68($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -72($fp)
	addi $sp, $sp, 4
	lw $t0, -56($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -24($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -28($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -32($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -36($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_a2i_at_A2I_int_label_5
	lw $a0, -24($fp)
	lw $a1, -32($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_a2i_at_A2I_int_label_5
	lw $a0, -24($fp)
	lw $a1, -36($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_a2i_at_A2I_string_label_6
	j function_a2i_at_A2I_reference_label_7
	function_a2i_at_A2I_int_label_5:
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -72($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equals
	sw $v0, -20($fp)
	j function_a2i_at_A2I_continue_label_8
	function_a2i_at_A2I_string_label_6:
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -72($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equal_str
	sw $v0, -20($fp)
	j function_a2i_at_A2I_continue_label_8
	function_a2i_at_A2I_reference_label_7:
	lw $a0, -56($fp)
	lw $a1, -72($fp)
	jal equals
	sw $v0, -20($fp)
	function_a2i_at_A2I_continue_label_8:
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -52($fp)
	addi $sp, $sp, 4
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_a2i_at_A2I_then_label_0
	j function_a2i_at_A2I_else_label_1
	function_a2i_at_A2I_then_label_0:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -76($fp)
	addi $sp, $sp, 4
	lw $a0, -76($fp)
	sw $a0, -12($fp)
	j function_a2i_at_A2I_continue_label_2
	function_a2i_at_A2I_else_label_1:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -128($fp)
	addi $sp, $sp, 4
	lw $a0, -128($fp)
	sw $a0, -124($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -136($fp)
	addi $sp, $sp, 4
	lw $a0, -136($fp)
	sw $a0, -132($fp)
	lw $a0, 0($fp)
	sw $a0, -144($fp)
	lw $a0, -144($fp)
	li $a1, 0
	jal equals
	sw $v0, -148($fp)
	lw $a0, -148($fp)
	bne $a0 $zero function_a2i_at_A2I_error_label_12
	j function_a2i_at_A2I_continue_label_13
	function_a2i_at_A2I_error_label_12:
	li $v0, 4
	la $a0, data_25
	syscall
	li $v0, 10
	syscall
	function_a2i_at_A2I_continue_label_13:
	lw $a0, -144($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -124($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -132($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -144($fp)
	lw $a1, 0($a0)
	sw $a1, -152($fp)
	lw $a0, -152($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 20
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -140($fp)
	addi $sp, $sp, 12
	la $a0, data_26 + 0
	sw $a0, -156($fp)
	lw $a0, -156($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -160($fp)
	addi $sp, $sp, 4
	lw $t0, -140($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -92($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -96($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -100($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -104($fp)
	lw $a0, -92($fp)
	lw $a1, -96($fp)
	jal equals
	sw $v0, -108($fp)
	lw $a0, -108($fp)
	bne $a0 $zero function_a2i_at_A2I_int_label_14
	lw $a0, -92($fp)
	lw $a1, -100($fp)
	jal equals
	sw $v0, -108($fp)
	lw $a0, -108($fp)
	bne $a0 $zero function_a2i_at_A2I_int_label_14
	lw $a0, -92($fp)
	lw $a1, -104($fp)
	jal equals
	sw $v0, -108($fp)
	lw $a0, -108($fp)
	bne $a0 $zero function_a2i_at_A2I_string_label_15
	j function_a2i_at_A2I_reference_label_16
	function_a2i_at_A2I_int_label_14:
	lw $a0, -140($fp)
	lw $a1, 12($a0)
	sw $a1, -112($fp)
	lw $a0, -160($fp)
	lw $a1, 12($a0)
	sw $a1, -116($fp)
	lw $a0, -112($fp)
	lw $a1, -116($fp)
	jal equals
	sw $v0, -88($fp)
	j function_a2i_at_A2I_continue_label_17
	function_a2i_at_A2I_string_label_15:
	lw $a0, -140($fp)
	lw $a1, 12($a0)
	sw $a1, -112($fp)
	lw $a0, -160($fp)
	lw $a1, 12($a0)
	sw $a1, -116($fp)
	lw $a0, -112($fp)
	lw $a1, -116($fp)
	jal equal_str
	sw $v0, -88($fp)
	j function_a2i_at_A2I_continue_label_17
	function_a2i_at_A2I_reference_label_16:
	lw $a0, -140($fp)
	lw $a1, -160($fp)
	jal equals
	sw $v0, -88($fp)
	function_a2i_at_A2I_continue_label_17:
	lw $a0, -88($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -120($fp)
	addi $sp, $sp, 4
	lw $a0, -120($fp)
	lw $a1, 12($a0)
	sw $a1, -84($fp)
	lw $a0, -84($fp)
	bne $a0 $zero function_a2i_at_A2I_then_label_9
	j function_a2i_at_A2I_else_label_10
	function_a2i_at_A2I_then_label_9:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -184($fp)
	addi $sp, $sp, 4
	lw $a0, -184($fp)
	sw $a0, -180($fp)
	lw $a0, 0($fp)
	sw $a0, -208($fp)
	lw $a0, -208($fp)
	li $a1, 0
	jal equals
	sw $v0, -212($fp)
	lw $a0, -212($fp)
	bne $a0 $zero function_a2i_at_A2I_error_label_18
	j function_a2i_at_A2I_continue_label_19
	function_a2i_at_A2I_error_label_18:
	li $v0, 4
	la $a0, data_27
	syscall
	li $v0, 10
	syscall
	function_a2i_at_A2I_continue_label_19:
	lw $a0, -208($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -208($fp)
	lw $a1, 0($a0)
	sw $a1, -216($fp)
	lw $a0, -216($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -204($fp)
	addi $sp, $sp, 4
	lw $a0, -204($fp)
	lw $a1, 12($a0)
	sw $a1, -196($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -220($fp)
	addi $sp, $sp, 4
	lw $a0, -220($fp)
	lw $a1, 12($a0)
	sw $a1, -200($fp)
	lw $a0, -196($fp)
	lw $a1, -200($fp)
	sub $a0 $a0 $a1
	sw $a0, -192($fp)
	lw $a0, -192($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -224($fp)
	addi $sp, $sp, 4
	lw $a0, -224($fp)
	sw $a0, -188($fp)
	lw $a0, 0($fp)
	sw $a0, -232($fp)
	lw $a0, -232($fp)
	li $a1, 0
	jal equals
	sw $v0, -236($fp)
	lw $a0, -236($fp)
	bne $a0 $zero function_a2i_at_A2I_error_label_20
	j function_a2i_at_A2I_continue_label_21
	function_a2i_at_A2I_error_label_20:
	li $v0, 4
	la $a0, data_28
	syscall
	li $v0, 10
	syscall
	function_a2i_at_A2I_continue_label_21:
	lw $a0, -232($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -180($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -188($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -232($fp)
	lw $a1, 0($a0)
	sw $a1, -240($fp)
	lw $a0, -240($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 20
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -228($fp)
	addi $sp, $sp, 12
	lw $a0, -228($fp)
	sw $a0, -176($fp)
	lw $a0, 4($fp)
	sw $a0, -248($fp)
	lw $a0, -248($fp)
	li $a1, 0
	jal equals
	sw $v0, -252($fp)
	lw $a0, -252($fp)
	bne $a0 $zero function_a2i_at_A2I_error_label_22
	j function_a2i_at_A2I_continue_label_23
	function_a2i_at_A2I_error_label_22:
	li $v0, 4
	la $a0, data_29
	syscall
	li $v0, 10
	syscall
	function_a2i_at_A2I_continue_label_23:
	lw $a0, -248($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -176($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -248($fp)
	lw $a1, 0($a0)
	sw $a1, -256($fp)
	lw $a0, -256($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 24
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -244($fp)
	addi $sp, $sp, 8
	lw $a0, -244($fp)
	lw $a1, 12($a0)
	sw $a1, -168($fp)
	lw $a0, -168($fp)
	not $a1 $a0
	addi $a1, $a1, 1
	sw $a1, -164($fp)
	lw $a0, -164($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -172($fp)
	addi $sp, $sp, 4
	lw $a0, -172($fp)
	sw $a0, -80($fp)
	j function_a2i_at_A2I_continue_label_11
	function_a2i_at_A2I_else_label_10:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -308($fp)
	addi $sp, $sp, 4
	lw $a0, -308($fp)
	sw $a0, -304($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -316($fp)
	addi $sp, $sp, 4
	lw $a0, -316($fp)
	sw $a0, -312($fp)
	lw $a0, 0($fp)
	sw $a0, -324($fp)
	lw $a0, -324($fp)
	li $a1, 0
	jal equals
	sw $v0, -328($fp)
	lw $a0, -328($fp)
	bne $a0 $zero function_a2i_at_A2I_error_label_27
	j function_a2i_at_A2I_continue_label_28
	function_a2i_at_A2I_error_label_27:
	li $v0, 4
	la $a0, data_30
	syscall
	li $v0, 10
	syscall
	function_a2i_at_A2I_continue_label_28:
	lw $a0, -324($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -304($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -312($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -324($fp)
	lw $a1, 0($a0)
	sw $a1, -332($fp)
	lw $a0, -332($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 20
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -320($fp)
	addi $sp, $sp, 12
	la $a0, data_31 + 0
	sw $a0, -336($fp)
	lw $a0, -336($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -340($fp)
	addi $sp, $sp, 4
	lw $t0, -320($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -272($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -276($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -280($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -284($fp)
	lw $a0, -272($fp)
	lw $a1, -276($fp)
	jal equals
	sw $v0, -288($fp)
	lw $a0, -288($fp)
	bne $a0 $zero function_a2i_at_A2I_int_label_29
	lw $a0, -272($fp)
	lw $a1, -280($fp)
	jal equals
	sw $v0, -288($fp)
	lw $a0, -288($fp)
	bne $a0 $zero function_a2i_at_A2I_int_label_29
	lw $a0, -272($fp)
	lw $a1, -284($fp)
	jal equals
	sw $v0, -288($fp)
	lw $a0, -288($fp)
	bne $a0 $zero function_a2i_at_A2I_string_label_30
	j function_a2i_at_A2I_reference_label_31
	function_a2i_at_A2I_int_label_29:
	lw $a0, -320($fp)
	lw $a1, 12($a0)
	sw $a1, -292($fp)
	lw $a0, -340($fp)
	lw $a1, 12($a0)
	sw $a1, -296($fp)
	lw $a0, -292($fp)
	lw $a1, -296($fp)
	jal equals
	sw $v0, -268($fp)
	j function_a2i_at_A2I_continue_label_32
	function_a2i_at_A2I_string_label_30:
	lw $a0, -320($fp)
	lw $a1, 12($a0)
	sw $a1, -292($fp)
	lw $a0, -340($fp)
	lw $a1, 12($a0)
	sw $a1, -296($fp)
	lw $a0, -292($fp)
	lw $a1, -296($fp)
	jal equal_str
	sw $v0, -268($fp)
	j function_a2i_at_A2I_continue_label_32
	function_a2i_at_A2I_reference_label_31:
	lw $a0, -320($fp)
	lw $a1, -340($fp)
	jal equals
	sw $v0, -268($fp)
	function_a2i_at_A2I_continue_label_32:
	lw $a0, -268($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -300($fp)
	addi $sp, $sp, 4
	lw $a0, -300($fp)
	lw $a1, 12($a0)
	sw $a1, -264($fp)
	lw $a0, -264($fp)
	bne $a0 $zero function_a2i_at_A2I_then_label_24
	j function_a2i_at_A2I_else_label_25
	function_a2i_at_A2I_then_label_24:
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -352($fp)
	addi $sp, $sp, 4
	lw $a0, -352($fp)
	sw $a0, -348($fp)
	lw $a0, 0($fp)
	sw $a0, -376($fp)
	lw $a0, -376($fp)
	li $a1, 0
	jal equals
	sw $v0, -380($fp)
	lw $a0, -380($fp)
	bne $a0 $zero function_a2i_at_A2I_error_label_33
	j function_a2i_at_A2I_continue_label_34
	function_a2i_at_A2I_error_label_33:
	li $v0, 4
	la $a0, data_32
	syscall
	li $v0, 10
	syscall
	function_a2i_at_A2I_continue_label_34:
	lw $a0, -376($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -376($fp)
	lw $a1, 0($a0)
	sw $a1, -384($fp)
	lw $a0, -384($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -372($fp)
	addi $sp, $sp, 4
	lw $a0, -372($fp)
	lw $a1, 12($a0)
	sw $a1, -364($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -388($fp)
	addi $sp, $sp, 4
	lw $a0, -388($fp)
	lw $a1, 12($a0)
	sw $a1, -368($fp)
	lw $a0, -364($fp)
	lw $a1, -368($fp)
	sub $a0 $a0 $a1
	sw $a0, -360($fp)
	lw $a0, -360($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -392($fp)
	addi $sp, $sp, 4
	lw $a0, -392($fp)
	sw $a0, -356($fp)
	lw $a0, 0($fp)
	sw $a0, -400($fp)
	lw $a0, -400($fp)
	li $a1, 0
	jal equals
	sw $v0, -404($fp)
	lw $a0, -404($fp)
	bne $a0 $zero function_a2i_at_A2I_error_label_35
	j function_a2i_at_A2I_continue_label_36
	function_a2i_at_A2I_error_label_35:
	li $v0, 4
	la $a0, data_33
	syscall
	li $v0, 10
	syscall
	function_a2i_at_A2I_continue_label_36:
	lw $a0, -400($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -348($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -356($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -400($fp)
	lw $a1, 0($a0)
	sw $a1, -408($fp)
	lw $a0, -408($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 20
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -396($fp)
	addi $sp, $sp, 12
	lw $a0, -396($fp)
	sw $a0, -344($fp)
	lw $a0, 4($fp)
	sw $a0, -416($fp)
	lw $a0, -416($fp)
	li $a1, 0
	jal equals
	sw $v0, -420($fp)
	lw $a0, -420($fp)
	bne $a0 $zero function_a2i_at_A2I_error_label_37
	j function_a2i_at_A2I_continue_label_38
	function_a2i_at_A2I_error_label_37:
	li $v0, 4
	la $a0, data_34
	syscall
	li $v0, 10
	syscall
	function_a2i_at_A2I_continue_label_38:
	lw $a0, -416($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -344($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -416($fp)
	lw $a1, 0($a0)
	sw $a1, -424($fp)
	lw $a0, -424($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 24
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -412($fp)
	addi $sp, $sp, 8
	lw $a0, -412($fp)
	sw $a0, -260($fp)
	j function_a2i_at_A2I_continue_label_26
	function_a2i_at_A2I_else_label_25:
	lw $a0, 0($fp)
	sw $a0, -428($fp)
	lw $a0, 4($fp)
	sw $a0, -436($fp)
	lw $a0, -436($fp)
	li $a1, 0
	jal equals
	sw $v0, -440($fp)
	lw $a0, -440($fp)
	bne $a0 $zero function_a2i_at_A2I_error_label_39
	j function_a2i_at_A2I_continue_label_40
	function_a2i_at_A2I_error_label_39:
	li $v0, 4
	la $a0, data_35
	syscall
	li $v0, 10
	syscall
	function_a2i_at_A2I_continue_label_40:
	lw $a0, -436($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -428($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -436($fp)
	lw $a1, 0($a0)
	sw $a1, -444($fp)
	lw $a0, -444($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 24
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -432($fp)
	addi $sp, $sp, 8
	lw $a0, -432($fp)
	sw $a0, -260($fp)
	function_a2i_at_A2I_continue_label_26:
	lw $a0, -260($fp)
	sw $a0, -80($fp)
	function_a2i_at_A2I_continue_label_11:
	lw $a0, -80($fp)
	sw $a0, -12($fp)
	function_a2i_at_A2I_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 436
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_a2i_aux_at_A2I:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -172
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -20($fp)
	addi $sp, $sp, 4
	lw $a0, -20($fp)
	sw $a0, -16($fp)
	lw $a0, 0($fp)
	sw $a0, -36($fp)
	lw $a0, -36($fp)
	li $a1, 0
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_a2i_aux_at_A2I_error_label_0
	j function_a2i_aux_at_A2I_continue_label_1
	function_a2i_aux_at_A2I_error_label_0:
	li $v0, 4
	la $a0, data_36
	syscall
	li $v0, 10
	syscall
	function_a2i_aux_at_A2I_continue_label_1:
	lw $a0, -36($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -36($fp)
	lw $a1, 0($a0)
	sw $a1, -44($fp)
	lw $a0, -44($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -32($fp)
	addi $sp, $sp, 4
	lw $a0, -32($fp)
	sw $a0, -28($fp)
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $a0, -56($fp)
	sw $a0, -52($fp)
	function_a2i_aux_at_A2I_while_label_2:
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -68($fp)
	lw $a0, -28($fp)
	lw $a1, 12($a0)
	sw $a1, -72($fp)
	lw $a0, -68($fp)
	lw $a1, -72($fp)
	jal less
	sw $v0, -64($fp)
	lw $a0, -64($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -76($fp)
	addi $sp, $sp, 4
	lw $a0, -76($fp)
	lw $a1, 12($a0)
	sw $a1, -60($fp)
	lw $a0, -60($fp)
	bne $a0 $zero function_a2i_aux_at_A2I_loop_label_3
	j function_a2i_aux_at_A2I_pool_label_4
	function_a2i_aux_at_A2I_loop_label_3:
	lw $a0, -16($fp)
	lw $a1, 12($a0)
	sw $a1, -96($fp)
	li $a0, 10
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -104($fp)
	addi $sp, $sp, 4
	lw $a0, -104($fp)
	lw $a1, 12($a0)
	sw $a1, -100($fp)
	lw $a0, -96($fp)
	lw $a1, -100($fp)
	mul $a0 $a0 $a1
	sw $a0, -92($fp)
	lw $a0, -92($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -108($fp)
	addi $sp, $sp, 4
	lw $a0, -108($fp)
	lw $a1, 12($a0)
	sw $a1, -84($fp)
	lw $a0, -52($fp)
	sw $a0, -116($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -124($fp)
	addi $sp, $sp, 4
	lw $a0, -124($fp)
	sw $a0, -120($fp)
	lw $a0, 0($fp)
	sw $a0, -132($fp)
	lw $a0, -132($fp)
	li $a1, 0
	jal equals
	sw $v0, -136($fp)
	lw $a0, -136($fp)
	bne $a0 $zero function_a2i_aux_at_A2I_error_label_5
	j function_a2i_aux_at_A2I_continue_label_6
	function_a2i_aux_at_A2I_error_label_5:
	li $v0, 4
	la $a0, data_37
	syscall
	li $v0, 10
	syscall
	function_a2i_aux_at_A2I_continue_label_6:
	lw $a0, -132($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -116($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -120($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -132($fp)
	lw $a1, 0($a0)
	sw $a1, -140($fp)
	lw $a0, -140($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 20
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -128($fp)
	addi $sp, $sp, 12
	lw $a0, -128($fp)
	sw $a0, -112($fp)
	lw $a0, 4($fp)
	sw $a0, -148($fp)
	lw $a0, -148($fp)
	li $a1, 0
	jal equals
	sw $v0, -152($fp)
	lw $a0, -152($fp)
	bne $a0 $zero function_a2i_aux_at_A2I_error_label_7
	j function_a2i_aux_at_A2I_continue_label_8
	function_a2i_aux_at_A2I_error_label_7:
	li $v0, 4
	la $a0, data_38
	syscall
	li $v0, 10
	syscall
	function_a2i_aux_at_A2I_continue_label_8:
	lw $a0, -148($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -112($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -148($fp)
	lw $a1, 0($a0)
	sw $a1, -156($fp)
	lw $a0, -156($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 12
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -144($fp)
	addi $sp, $sp, 8
	lw $a0, -144($fp)
	lw $a1, 12($a0)
	sw $a1, -88($fp)
	lw $a0, -84($fp)
	lw $a1, -88($fp)
	add $a0 $a0 $a1
	sw $a0, -80($fp)
	lw $a0, -80($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -160($fp)
	addi $sp, $sp, 4
	lw $a0, -160($fp)
	sw $a0, -16($fp)
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -168($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -176($fp)
	addi $sp, $sp, 4
	lw $a0, -176($fp)
	lw $a1, 12($a0)
	sw $a1, -172($fp)
	lw $a0, -168($fp)
	lw $a1, -172($fp)
	add $a0 $a0 $a1
	sw $a0, -164($fp)
	lw $a0, -164($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -180($fp)
	addi $sp, $sp, 4
	lw $a0, -180($fp)
	sw $a0, -52($fp)
	j function_a2i_aux_at_A2I_while_label_2
	function_a2i_aux_at_A2I_pool_label_4:
	sw $zero, -48($fp)
	lw $a0, -48($fp)
	sw $a0, -24($fp)
	lw $a0, -16($fp)
	sw $a0, -12($fp)
	lw $v0, -12($fp)
	addi $sp, $sp, 172
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_i2a_at_A2I:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -184
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -24($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -28($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -32($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -36($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_i2a_at_A2I_int_label_3
	lw $a0, -24($fp)
	lw $a1, -32($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_i2a_at_A2I_int_label_3
	lw $a0, -24($fp)
	lw $a1, -36($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_i2a_at_A2I_string_label_4
	j function_i2a_at_A2I_reference_label_5
	function_i2a_at_A2I_int_label_3:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equals
	sw $v0, -20($fp)
	j function_i2a_at_A2I_continue_label_6
	function_i2a_at_A2I_string_label_4:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equal_str
	sw $v0, -20($fp)
	j function_i2a_at_A2I_continue_label_6
	function_i2a_at_A2I_reference_label_5:
	lw $a0, 0($fp)
	lw $a1, -56($fp)
	jal equals
	sw $v0, -20($fp)
	function_i2a_at_A2I_continue_label_6:
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -52($fp)
	addi $sp, $sp, 4
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_i2a_at_A2I_then_label_0
	j function_i2a_at_A2I_else_label_1
	function_i2a_at_A2I_then_label_0:
	la $a0, data_11 + 0
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -64($fp)
	addi $sp, $sp, 4
	lw $a0, -64($fp)
	sw $a0, -12($fp)
	j function_i2a_at_A2I_continue_label_2
	function_i2a_at_A2I_else_label_1:
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -92($fp)
	addi $sp, $sp, 4
	lw $a0, -92($fp)
	lw $a1, 12($a0)
	sw $a1, -80($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -84($fp)
	lw $a0, -80($fp)
	lw $a1, -84($fp)
	jal less
	sw $v0, -76($fp)
	lw $a0, -76($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -88($fp)
	addi $sp, $sp, 4
	lw $a0, -88($fp)
	lw $a1, 12($a0)
	sw $a1, -72($fp)
	lw $a0, -72($fp)
	bne $a0 $zero function_i2a_at_A2I_then_label_7
	j function_i2a_at_A2I_else_label_8
	function_i2a_at_A2I_then_label_7:
	lw $a0, 0($fp)
	sw $a0, -96($fp)
	lw $a0, 4($fp)
	sw $a0, -104($fp)
	lw $a0, -104($fp)
	li $a1, 0
	jal equals
	sw $v0, -108($fp)
	lw $a0, -108($fp)
	bne $a0 $zero function_i2a_at_A2I_error_label_10
	j function_i2a_at_A2I_continue_label_11
	function_i2a_at_A2I_error_label_10:
	li $v0, 4
	la $a0, data_39
	syscall
	li $v0, 10
	syscall
	function_i2a_at_A2I_continue_label_11:
	lw $a0, -104($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -96($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -104($fp)
	lw $a1, 0($a0)
	sw $a1, -112($fp)
	lw $a0, -112($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 32
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -100($fp)
	addi $sp, $sp, 8
	lw $a0, -100($fp)
	sw $a0, -68($fp)
	j function_i2a_at_A2I_continue_label_9
	function_i2a_at_A2I_else_label_8:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	li $a0, 1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -148($fp)
	addi $sp, $sp, 4
	lw $a0, -148($fp)
	lw $a1, 12($a0)
	sw $a1, -140($fp)
	lw $a0, -140($fp)
	not $a1 $a0
	addi $a1, $a1, 1
	sw $a1, -136($fp)
	lw $a0, -136($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -144($fp)
	addi $sp, $sp, 4
	lw $a0, -144($fp)
	lw $a1, 12($a0)
	sw $a1, -132($fp)
	lw $a0, -128($fp)
	lw $a1, -132($fp)
	mul $a0 $a0 $a1
	sw $a0, -124($fp)
	lw $a0, -124($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -152($fp)
	addi $sp, $sp, 4
	lw $a0, -152($fp)
	sw $a0, -120($fp)
	lw $a0, 4($fp)
	sw $a0, -160($fp)
	lw $a0, -160($fp)
	li $a1, 0
	jal equals
	sw $v0, -164($fp)
	lw $a0, -164($fp)
	bne $a0 $zero function_i2a_at_A2I_error_label_12
	j function_i2a_at_A2I_continue_label_13
	function_i2a_at_A2I_error_label_12:
	li $v0, 4
	la $a0, data_40
	syscall
	li $v0, 10
	syscall
	function_i2a_at_A2I_continue_label_13:
	lw $a0, -160($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -120($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -160($fp)
	lw $a1, 0($a0)
	sw $a1, -168($fp)
	lw $a0, -168($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 32
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -156($fp)
	addi $sp, $sp, 8
	lw $a0, -156($fp)
	sw $a0, -116($fp)
	la $a0, data_26 + 0
	sw $a0, -180($fp)
	lw $a0, -180($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -184($fp)
	addi $sp, $sp, 4
	lw $a0, -184($fp)
	sw $a0, -176($fp)
	lw $a0, -176($fp)
	li $a1, 0
	jal equals
	sw $v0, -188($fp)
	lw $a0, -188($fp)
	bne $a0 $zero function_i2a_at_A2I_error_label_14
	j function_i2a_at_A2I_continue_label_15
	function_i2a_at_A2I_error_label_14:
	li $v0, 4
	la $a0, data_41
	syscall
	li $v0, 10
	syscall
	function_i2a_at_A2I_continue_label_15:
	lw $a0, -176($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -116($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -176($fp)
	lw $a1, 0($a0)
	sw $a1, -192($fp)
	lw $a0, -192($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 16
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -172($fp)
	addi $sp, $sp, 8
	lw $a0, -172($fp)
	sw $a0, -68($fp)
	function_i2a_at_A2I_continue_label_9:
	lw $a0, -68($fp)
	sw $a0, -12($fp)
	function_i2a_at_A2I_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 184
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
function_i2a_aux_at_A2I:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -184
	li $a0, 0
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -56($fp)
	addi $sp, $sp, 4
	lw $t0, 0($fp)
	lw $a0, 0($t0)
	sll $a0 $a0 2
	la $a1, type_name_table
	addu $a0 $a0 $a1
	lw $a0, 0($a0)
	sw $a0, -24($fp)
	la $a0, type_name_table
	addiu $a0 $a0 12
	lw $a0, 0($a0)
	sw $a0, -28($fp)
	la $a0, type_name_table
	addiu $a0 $a0 16
	lw $a0, 0($a0)
	sw $a0, -32($fp)
	la $a0, type_name_table
	addiu $a0 $a0 8
	lw $a0, 0($a0)
	sw $a0, -36($fp)
	lw $a0, -24($fp)
	lw $a1, -28($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_i2a_aux_at_A2I_int_label_3
	lw $a0, -24($fp)
	lw $a1, -32($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_i2a_aux_at_A2I_int_label_3
	lw $a0, -24($fp)
	lw $a1, -36($fp)
	jal equals
	sw $v0, -40($fp)
	lw $a0, -40($fp)
	bne $a0 $zero function_i2a_aux_at_A2I_string_label_4
	j function_i2a_aux_at_A2I_reference_label_5
	function_i2a_aux_at_A2I_int_label_3:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equals
	sw $v0, -20($fp)
	j function_i2a_aux_at_A2I_continue_label_6
	function_i2a_aux_at_A2I_string_label_4:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -44($fp)
	lw $a0, -56($fp)
	lw $a1, 12($a0)
	sw $a1, -48($fp)
	lw $a0, -44($fp)
	lw $a1, -48($fp)
	jal equal_str
	sw $v0, -20($fp)
	j function_i2a_aux_at_A2I_continue_label_6
	function_i2a_aux_at_A2I_reference_label_5:
	lw $a0, 0($fp)
	lw $a1, -56($fp)
	jal equals
	sw $v0, -20($fp)
	function_i2a_aux_at_A2I_continue_label_6:
	lw $a0, -20($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Bool
	sw $v0, -52($fp)
	addi $sp, $sp, 4
	lw $a0, -52($fp)
	lw $a1, 12($a0)
	sw $a1, -16($fp)
	lw $a0, -16($fp)
	bne $a0 $zero function_i2a_aux_at_A2I_then_label_0
	j function_i2a_aux_at_A2I_else_label_1
	function_i2a_aux_at_A2I_then_label_0:
	la $a0, data_23 + 0
	sw $a0, -60($fp)
	lw $a0, -60($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_String
	sw $v0, -64($fp)
	addi $sp, $sp, 4
	lw $a0, -64($fp)
	sw $a0, -12($fp)
	j function_i2a_aux_at_A2I_continue_label_2
	function_i2a_aux_at_A2I_else_label_1:
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -80($fp)
	li $a0, 10
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -88($fp)
	addi $sp, $sp, 4
	lw $a0, -88($fp)
	lw $a1, 12($a0)
	sw $a1, -84($fp)
	lw $a0, -84($fp)
	li $a1, 0
	jal equals
	sw $v0, -92($fp)
	lw $a0, -80($fp)
	lw $a1, -84($fp)
	div $a0 $a1
	mflo $a0
	sw $a0, -76($fp)
	lw $a0, -76($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -96($fp)
	addi $sp, $sp, 4
	lw $a0, -96($fp)
	sw $a0, -72($fp)
	lw $a0, 0($fp)
	lw $a1, 12($a0)
	sw $a1, -112($fp)
	lw $a0, -72($fp)
	lw $a1, 12($a0)
	sw $a1, -124($fp)
	li $a0, 10
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -132($fp)
	addi $sp, $sp, 4
	lw $a0, -132($fp)
	lw $a1, 12($a0)
	sw $a1, -128($fp)
	lw $a0, -124($fp)
	lw $a1, -128($fp)
	mul $a0 $a0 $a1
	sw $a0, -120($fp)
	lw $a0, -120($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -136($fp)
	addi $sp, $sp, 4
	lw $a0, -136($fp)
	lw $a1, 12($a0)
	sw $a1, -116($fp)
	lw $a0, -112($fp)
	lw $a1, -116($fp)
	sub $a0 $a0 $a1
	sw $a0, -108($fp)
	lw $a0, -108($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_at_Int
	sw $v0, -140($fp)
	addi $sp, $sp, 4
	lw $a0, -140($fp)
	sw $a0, -104($fp)
	lw $a0, 4($fp)
	sw $a0, -148($fp)
	lw $a0, -148($fp)
	li $a1, 0
	jal equals
	sw $v0, -152($fp)
	lw $a0, -152($fp)
	bne $a0 $zero function_i2a_aux_at_A2I_error_label_7
	j function_i2a_aux_at_A2I_continue_label_8
	function_i2a_aux_at_A2I_error_label_7:
	li $v0, 4
	la $a0, data_42
	syscall
	li $v0, 10
	syscall
	function_i2a_aux_at_A2I_continue_label_8:
	lw $a0, -148($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -104($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -148($fp)
	lw $a1, 0($a0)
	sw $a1, -156($fp)
	lw $a0, -156($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 16
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -144($fp)
	addi $sp, $sp, 8
	lw $a0, -144($fp)
	sw $a0, -100($fp)
	lw $a0, -72($fp)
	sw $a0, -168($fp)
	lw $a0, 4($fp)
	sw $a0, -176($fp)
	lw $a0, -176($fp)
	li $a1, 0
	jal equals
	sw $v0, -180($fp)
	lw $a0, -180($fp)
	bne $a0 $zero function_i2a_aux_at_A2I_error_label_9
	j function_i2a_aux_at_A2I_continue_label_10
	function_i2a_aux_at_A2I_error_label_9:
	li $v0, 4
	la $a0, data_43
	syscall
	li $v0, 10
	syscall
	function_i2a_aux_at_A2I_continue_label_10:
	lw $a0, -176($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -168($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -176($fp)
	lw $a1, 0($a0)
	sw $a1, -184($fp)
	lw $a0, -184($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 32
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -172($fp)
	addi $sp, $sp, 8
	lw $a0, -172($fp)
	sw $a0, -164($fp)
	lw $a0, -164($fp)
	li $a1, 0
	jal equals
	sw $v0, -188($fp)
	lw $a0, -188($fp)
	bne $a0 $zero function_i2a_aux_at_A2I_error_label_11
	j function_i2a_aux_at_A2I_continue_label_12
	function_i2a_aux_at_A2I_error_label_11:
	li $v0, 4
	la $a0, data_44
	syscall
	li $v0, 10
	syscall
	function_i2a_aux_at_A2I_continue_label_12:
	lw $a0, -164($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -100($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	lw $a0, -164($fp)
	lw $a1, 0($a0)
	sw $a1, -192($fp)
	lw $a0, -192($fp)
	la $a1, shells_table
	sll $a2 $a0 2
	addu $a1 $a1 $a2
	lw $a1, 0($a1)
	lw $a1, 8($a1)
	addiu $a1 $a1 16
	lw $a1, 0($a1)
	jalr $a1
	sw $v0, -160($fp)
	addi $sp, $sp, 8
	lw $a0, -160($fp)
	sw $a0, -68($fp)
	lw $a0, -68($fp)
	sw $a0, -12($fp)
	function_i2a_aux_at_A2I_continue_label_2:
	lw $v0, -12($fp)
	addi $sp, $sp, 184
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_at_A2I:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, -8
	li $a0, 6
	sll $a0 $a0 2
	la $a1, shells_table
	addu $a1 $a1 $a0
	lw $a1, 0($a1)
	lw $a0, 4($a1)
	sll $a0 $a0 2
	jal malloc
	move $a2 $a0
	move $a0 $a1
	move $a1 $v0
	jal copy
	sw $v0, -12($fp)
	lw $a0, -12($fp)
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	jal init_attr_at_A2I
	sw $v0, -16($fp)
	addi $sp, $sp, 4
	lw $v0, -12($fp)
	addi $sp, $sp, 8
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
init_attr_at_A2I:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	addi $fp, $sp, 8
	addi $sp, $sp, 0
	addi $sp, $sp, 0
	addi $fp, $sp, -8
	lw $fp, 0($sp)
	addi $sp, $sp, 4
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra

header_size = 12 #in bytes
header_size_slot = 0
header_next_slot = 4
header_reachable_slot = 8
alloc_size       = 2048
total_alloc_size =  2060 #alloc_size + header_size
neg_header_size = -12 #-header_size
free_list = 0
used_list = header_size
state_size = 4
stack_base = -4
init_alloc_size = 28 #(header_size*2) +  state_size
object_mark = -1
meta_data_object_size = 4   #in words
object_expanded = -2
reachable = 1
new_line = 10
str_size_treshold = 1024
int_type = 0
string_type = 0
type_number = 0

free_block:
    addiu $sp $sp -28
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)
    sw $a0 12($sp)
    sw $ra 16($sp)
    sw $t3 20($sp)
    sw $t4 24($sp)

    move $t0 $a0
    
    addiu $t1 $gp free_list        

    addiu $t3 $gp used_list         

free_block_loop_used_list:         
    beq $t4 $t0 free_block_loop_free_list
    move $t3 $t4
    j free_block_loop_used_list


free_block_loop_free_list:         
    lw $t2 header_next_slot($t1)
    beq $t2 $zero free_block_founded_prev
    bge $t2 $t0 free_block_founded_prev
    move $t1 $t2
    j free_block_loop_free_list

free_block_founded_prev:        
    # Remove the block from the used-list
    lw $t4 header_next_slot($t0)
    sw $t4 header_next_slot($t3)
    
    # Add the block to the free-list
    sw $t2 header_next_slot($t0)
    sw $t0 header_next_slot($t1)

free_block_end:
   
    move $a0 $t0
    jal expand_block
    move $a0 $t1
    jal expand_block

    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    lw $a0 12($sp)
    lw $ra 16($sp)
    lw $t3 20($sp)
    lw $t4 24($sp)
    addiu $sp $sp 28

    jr $ra


expand_block:
    addiu $sp $sp -16
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)
    sw $t3 12($sp)

    
    addiu $t0 $gp free_list    

    beq $t0 $a0 expand_block_end  
    move $t0 $a0

   
    lw $t1 header_next_slot($t0)
    lw $t2 header_size_slot($t0)
    move $t3 $t2
    addiu $t2 $t2 header_size
    addu $t2 $t2 $t0
    beq $t2 $t1 expand_block_expand
    j expand_block_end

expand_block_expand:    
    lw $t2 header_size_slot($t1)
    addi $t2 $t2 header_size
    add $t2 $t2 $t3
    sw $t2 header_size_slot($t0)
    lw $t1 header_next_slot($t1)
    sw $t1 header_next_slot($t0)
    
expand_block_end:
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    lw $t3 12($sp)
    addiu $sp $sp 16

    jr $ra


extend_heap:
    addiu $sp $sp -12
    sw $a0 0($sp)
    sw $a1 4($sp)
    sw $t0 8($sp)

    
    li $v0 9
    addiu $a0 $a1 header_size
    syscall
    
    
    move $t0 $a1 
    sw $t0 header_size_slot($v0)
    sw $zero header_next_slot($v0)
    sw $zero header_reachable_slot($v0)

    
    lw $t0, 0($sp)
    sw $v0 header_next_slot($t0)

    move $a0 $t0
    lw $a1 4($sp)
    lw $t0 8($sp)
    addiu $sp $sp 12

    jr $ra


  
split_block:
    addiu $sp $sp -16
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $a0 8($sp)
    sw $a1 12($sp)

   
    lw $t0 header_size_slot($a0)
    bgt $a1 $t0 split_block_error_small
    
    
    sub $t0 $t0 $a1
    li $t1 header_size
    ble $t0 $t1 split_block_same_size

    
    addu $t0 $a0 $a1
    addiu $t0 $t0 header_size     

    #Update headers of the two blocks
    lw $t1 header_next_slot($a0)    
    sw $t1 header_next_slot($t0)
    sw $t0 header_next_slot($a0)

    lw $t1 header_size_slot($a0)    
    sub $t1 $t1 $a1

    addi $t1 $t1 neg_header_size
    sw $t1 header_size_slot($t0)
    sw $a1 header_size_slot($a0)
    move $v0 $a0
    j split_block_end

split_block_same_size:
    move $v0 $a0
    j split_block_end

split_block_error_small:
    j split_block_end

split_block_end:
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $a0 8($sp)
    lw $a1 12($sp)
    addiu $sp $sp 16

    jr $ra

malloc:
    move $v0 $zero
    addiu $sp $sp -28
    sw $t1 0($sp)
    sw $t0 4($sp)
    sw $a0 8($sp)
    sw $a1 12($sp)
    sw $ra 16($sp)
    sw $t2 20($sp)
    sw $t3 24($sp)
    
    addiu $t0 $gp free_list
    j malloc_loop

malloc_end:

    move $a0 $v0
    lw $a1 8($sp)                  
    jal split_block

    lw $t1 header_next_slot($v0)
    sw $t1 header_next_slot($t3)

    addiu $t1 $gp used_list
    lw $a0 header_next_slot($t1)

    sw $a0 header_next_slot($v0)
    sw $v0 header_next_slot($t1)
    
    addiu $v0 $v0 header_size

    lw $t3 24($sp)
    lw $t2 20($sp)
    lw $ra 16($sp)
    lw $a1 12($sp)
    lw $a0 8($sp)
    lw $t0 4($sp)
    lw $t1 0($sp)
    addiu $sp $sp 28

    jr $ra

malloc_loop:
    move $t2 $t0                        
    lw $t0 header_next_slot($t0)        
    beq $t0 $zero malloc_search_end     
    j malloc_check_valid_block

malloc_search_end:
    beq $v0 $zero malloc_alloc_new_block  
    j malloc_end

malloc_alloc_new_block:
    li $t1 alloc_size               
    move $t3 $t2
    move $a1 $a0                    
    move $a0 $t2                    
    bge $a1 $t1 malloc_big_block   
    li $a1 alloc_size         
    jal extend_heap
    
    j malloc_end

malloc_big_block:
    #addiu $a1 $a1 header_size              
    jal extend_heap
    j malloc_end



malloc_check_valid_block:
    lw $t1 header_size_slot($t0)      
    bge $t1 $a0 malloc_valid_block    
    j malloc_loop

malloc_valid_block:
    beq $v0 $zero malloc_first_valid_block  
    bge $t1 $v1 malloc_loop                 
    move $v0 $t0                        
    move $v1 $t1                        
    move $t3 $t2
    j malloc_loop


malloc_first_valid_block:
    move $v0 $t0                        
    move $v1 $t1                        
    move $t3 $t2 
    j malloc_loop


copy:
    addiu $sp $sp -16
    sw $a0 0($sp)
    sw $a1 4($sp)
    sw $a2 8($sp)
    sw $t0 12($sp)

copy_loop:
    beq $a2 $zero copy_end
    lw $t0 0($a0)
    sw $t0 0($a1)
    addiu $a0 $a0 4
    addiu $a1 $a1 4
    addi $a2 $a2 -4
    j copy_loop 

copy_end:
    lw $a0 0($sp)
    lw $a1 4($sp)
    lw $a2 8($sp)
    lw $t0 12($sp)
    addiu $sp $sp 16

    jr $ra


use_block:
    addiu $sp $sp -12
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)

    addiu $t0 $gp free_list

use_block_loop:
    move $t1 $t0
    lw $t0 header_next_slot($t0)
    beq $t0 $zero use_block_end
    beq $t0 $a0 use_block_founded
    j use_block_loop

use_block_founded:
    lw $t2 header_next_slot($t0)
    sw $t2 header_next_slot($t1)

    addiu $t1 $gp used_list
    lw $t2 header_next_slot($t1)
    sw $t0 header_next_slot($t1)
    sw $t2 header_next_slot($t0)

use_block_end:
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    addiu $sp $sp 12

    jr $ra
equals:
    beq $a0 $a1 equals_equal
    li $v0 0
    j equals_end
    
equals_equal:
    li $v0 1

equals_end:
    jr $ra



less_equal:
    ble $a0 $a1 less_equal_true
    li $v0 0
    j less_equal_end

less_equal_true:
    li $v0 1

less_equal_end:
    jr $ra


less:
    blt $a0 $a1 less_true
    li $v0 0
    j less_end

less_true:
    li $v0 1

less_end:
    jr $ra
len:
    addiu $sp $sp -8
    sw $t0 0($sp)
    sw $t1 4($sp)

    move $t0 $a0
    move $v0 $zero

len_loop:
    lb $t1 0($t0)
    beq $t1 $zero len_end
    addi $v0 $v0 1
    addiu $t0 $t0 1
    j len_loop

len_end:
    lw $t0 0($sp)
    lw $t1 4($sp)
    addiu $sp $sp 8

    jr $ra

concat:
    addiu $sp $sp -24
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)
    sw $a0 12($sp)
    sw $a1 16($sp)
    sw $ra 20($sp)

    move $t0 $a0
    move $t1 $a1


    addiu $a0 $a2 1
    li $t2 4
    div $a0 $t2
    mfhi $a0
    bne $a0 $zero concat_allign_size
    addiu $a0 $a2 1

concat_size_alligned:
    jal malloc
    move $t2 $v0
    j concat_copy_first_loop

concat_allign_size:
    sub $t2 $t2 $a0
    add $a0 $a2 $t2
    addiu $a0 $a0 1
    j concat_size_alligned

concat_copy_first_loop:
    lb $a0 0($t0)
    beq $a0 $zero concat_copy_second_loop
    sb $a0 0($t2)
    addiu $t0 $t0 1
    addiu $t2 $t2 1
    j concat_copy_first_loop

concat_copy_second_loop:
    lb $a0 0($t1)
    beq $a0 $zero concat_end
    sb $a0 0($t2)
    addiu $t1 $t1 1
    addiu $t2 $t2 1
    j concat_copy_second_loop

concat_end:
    sb $zero 0($t2)
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    lw $a0 12($sp)
    lw $a1 16($sp)
    lw $ra 20($sp)
    addiu $sp $sp 24

    jr $ra


substr:
    addiu $sp $sp -24
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)
    sw $t3 12($sp)
    sw $a0 16($sp)
    sw $ra 20($sp)

    move $t0 $a0
    li $t1 4
    addiu $t3 $a2 1
    div $t3 $t1
 
    mfhi $t2
    bne $t2 $zero substr_allign_size
    move $t1 $t3
    j substr_new_block

substr_allign_size:
    sub $t1 $t1 $t2
    add $t1 $t1 $t3

substr_new_block:
    move $a0 $t1
    jal malloc
    move $t3 $v0
    move $t1 $zero
    addu $t0 $t0 $a1

substr_copy_loop:
    beq $t1 $a2 substr_end
    lb $t2 0($t0)
    sb $t2 0($t3)
    addiu $t0 $t0 1
    addiu $t3 $t3 1
    addiu $t1 $t1 1
    j substr_copy_loop

substr_end:
    sb $zero 0($t3)
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    lw $t3 12($sp)
    lw $a0 16($sp)
    lw $ra 20($sp)
    addiu $sp $sp 24

    jr $ra


equal_str:
    addiu $sp $sp -16
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)
    sw $t3 12($sp)

    move $t0 $a0
    move $t1 $a1

equal_str_loop:
    lb $t2 0($t0)
    lb $t3 0($t1)
    bne $t2 $t3 equal_str_not_equal
    beq $t2 $zero equal_str_equal

    addiu $t0 $t0 1
    addiu $t1 $t1 1
    j equal_str_loop

equal_str_not_equal:
    move $v0 $zero
    j equal_str_end

equal_str_equal:
    li $v0 1

equal_str_end:
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    lw $t3 12($sp)
    addiu $sp $sp 16

    jr $ra
    
read_str:
    addiu $sp $sp -36
    sw $t0 0($sp)
    sw $t1 4($sp)
    sw $t2 8($sp)
    sw $t3 12($sp)
	sw $t4 16($sp)
	sw $t5 20($sp)
    sw $a0 24($sp)
    sw $a1 28($sp)
    sw $ra 32($sp)
	
    addiu $t0 $gp free_list
    move $t1 $zero
    move $t2 $t0

read_str_larger_block_loop:
    lw $t0 header_next_slot($t0)
    beq $t0 $zero read_str_reading
    lw $t3 header_size_slot($t0)
    bge $t1 $t3 read_str_larger_block_loop
    move $t1 $t3
    move $t2 $t0
    j read_str_larger_block_loop

read_str_reading:
    beq $t1 $zero read_str_new_block
    move $a1 $t1
    li $v0 8
    addiu $a0 $t2 header_size
    syscall
    move $t0 $a0
    move $t1 $zero

read_str_look_nl:
    lb $t2 0($t0)
    beq $t2 new_line read_str_nl_founded
    beq $t2 $zero read_str_zero_founded#read_str_no_nl
    addi $t1 $t1 1
    addi $t0 $t0 1
    j read_str_look_nl

read_str_zero_founded:
    blt $t1 $t3 read_str_nl_founded
    j read_str_no_nl

read_str_nl_founded:
    sb $zero 0($t0)
    addi $t1 $t1 1
	li $t2 4
	div $t1 $t2
	mfhi $t3
	beq $t3 $zero read_str_nl_founded_alligned
	sub $t2 $t2 $t3
	add $t1 $t1 $t2
read_str_nl_founded_alligned:
    move $a1 $t1
    addiu $a0 $a0 neg_header_size
    jal split_block
    jal use_block

    addiu $v0 $a0 header_size
	j read_str_end


read_str_no_nl:
	addi $t1 $t1 1
    blt $t1 str_size_treshold read_str_dup
	addi $t1 $t1 alloc_size
	j read_str_extend_heap
read_str_dup:
	sll $t1 $t1 1
read_str_extend_heap:
	move $a1 $t1
	move $t0 $a0
	addiu $a0 $gp free_list

read_str_last_block_loop:
	lw $t1 header_next_slot($a0)
	beq $t1 $zero read_str_last_block_founded
	lw $a0 header_next_slot($a0)
	j read_str_last_block_loop

read_str_last_block_founded:
	jal extend_heap
	jal expand_block
	lw $t1 header_next_slot($a0)
	bne $t1 $zero read_str_copy_prev
	move $t1 $a0

read_str_copy_prev:
	lw $t3 header_size_slot($t1)
	move $t2 $zero
	move $t5 $t1
	addiu $t1 $t1 header_size

read_str_copy_loop:
	lb $t4 0($t0)
	beq $t4 $zero read_str_copy_end
	sb $t4 0($t1)
	addi $t2 $t2 1
	addi $t0 $t0 1
	addi $t1 $t1 1
	j read_str_copy_loop

read_str_copy_end:
	sub $t3 $t3 $t2
	move $a0 $t1
	move $a1 $t3
	li $v0 8
	syscall
	move $t0 $a0
	move $t1 $t2
	addiu $a0 $t5 header_size
	j read_str_look_nl

	
read_str_end:
    lw $t0 0($sp)
    lw $t1 4($sp)
    lw $t2 8($sp)
    lw $t3 12($sp)
	lw $t4 16($sp)
	lw $t5 20($sp)
    lw $a0 24($sp)
    lw $a1 28($sp)
    lw $ra 32($sp)
    addiu $sp $sp 36

    jr $ra


read_str_new_block:
    addiu $t0 $gp free_list

read_str_new_block_search_last:
    lw $t1 header_next_slot($t0)
    beq $t1 $zero read_str_new_block_create
    move $t0 $t1
    j read_str_new_block_search_last

read_str_new_block_create:
    move $a0 $t0
    li $a1 alloc_size
    jal extend_heap
    jal expand_block
    lw $t2 header_next_slot($a0)
    beq $t2 $zero read_str_new_block_expanded
    lw $t1 header_size_slot($t2)
    j read_str_reading

read_str_new_block_expanded:
    move $t2 $a0
    lw $t1 header_size_slot($a0)
    j read_str_reading