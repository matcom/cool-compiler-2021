.types

  type Object {
    method Object_abort;
    method Object_type_name;
    method Object_copy;
  }
  type Int {
    method Object_abort;
    method Int_type_name;
    method Int_copy;
  }
  type Bool {
    method Object_abort;
    method Bool_type_name;
    method Bool_copy;
  }
  type String {
    method Object_abort;
    method String_type_name;
    method String_copy;
    method String_length;
    method String_concat;
    method String_substr;
  }
  type IO {
    method Object_abort;
    method IO_type_name;
    method IO_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
  }
  type List {
    method Object_abort;
    method List_type_name;
    method List_copy;
    method List_isNil;
    method List_head;
    method List_tail;
    method List_cons;
  }
  type Cons {
    attribute car;
    attribute cdr;
    method Object_abort;
    method Cons_type_name;
    method Cons_copy;
    method Cons_isNil;
    method Cons_head;
    method Cons_tail;
    method List_cons;
    method Cons_init;
  }
  type Main {
    attribute mylist;
    method Object_abort;
    method Main_type_name;
    method Main_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
    method Main_print_list;
    method Main_main;
  }

.data

  data_0_abort_msg = "Program Halted!";
  data_1_type_name_Object = "Object";
  data_2_type_name_Int = "Int";
  data_3_type_name_Bool = "Bool";
  data_4_type_name_String = "String";
  data_5_type_name_IO = "IO";
  data_6_type_name_List = "List";
  data_7_type_name_Cons = "Cons";
  data_8_type_name_Main = "Main";
  data_9_sep_cat = " ++ ";
  data_10_eol = "\n";
  data_11_under = "_";
  data_12_meth = "abort";
  data_13_meth = "init";
  data_14_meth = "isNil";
  data_15_meth = "out_string";
  data_16_meth = "head";
  data_17_meth = "out_int";
  data_18_string = " ";
  data_19_meth = "tail";
  data_20_meth = "print_list";
  data_21_meth = "cons";

.code

  function Void___init {

    LOCAL local_self;

    local_self = ALLOCATE Void;
    RETURN local_self;
  }

  function main {

    LOCAL local_0;
    LOCAL local_1;

    local_0 = CALL Main___init;
    ARG local_0;
    local_1 = CALL Main_main;
  }

  function Object_abort {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_0_abort_msg;
    ARG local_0;
    local_1 = CALL String___init;
    print(str, local_1)
  }

  function Object_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_1_type_name_Object;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Object_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Object;
    RETURN local_copy;
  }

  function Int_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_2_type_name_Int;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Int_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Int;
    RETURN local_copy;
  }

  function Bool_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_3_type_name_Bool;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Bool_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Bool;
    RETURN local_copy;
  }

  function String_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_4_type_name_String;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function String_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE String;
    RETURN local_copy;
  }

  function IO_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_5_type_name_IO;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function IO_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE IO;
    RETURN local_copy;
  }

  function List_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_6_type_name_List;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function List_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE List;
    RETURN local_copy;
  }

  function Cons_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_7_type_name_Cons;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Cons_copy {
    PARAM param_self;

    LOCAL local_copy;
    LOCAL local_attr_copy;
    LOCAL local_attr_copy;

    local_copy = ALLOCATE Cons;
    local_attr_copy = GETATTR param_self 0;
    SETATTR local_copy 0 local_attr_copy;
    local_attr_copy = GETATTR param_self 1;
    SETATTR local_copy 1 local_attr_copy;
    RETURN local_copy;
  }

  function Main_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_8_type_name_Main;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Main_copy {
    PARAM param_self;

    LOCAL local_copy;
    LOCAL local_attr_copy;

    local_copy = ALLOCATE Main;
    local_attr_copy = GETATTR param_self 0;
    SETATTR local_copy 0 local_attr_copy;
    RETURN local_copy;
  }

  function IO_out_string {
    PARAM param_self;
    PARAM param_str;


    print(str, param_str)
    RETURN param_self;
  }

  function IO_out_int {
    PARAM param_int;
    PARAM param_self;


    print(int, param_int)
    RETURN param_self;
  }

  function IO_in_string {
    PARAM param_self;

    LOCAL local_str;

    local_str = read(str)
    RETURN local_str;
  }

  function IO_in_int {
    PARAM param_self;

    LOCAL local_int;

    local_int = read(int)
    RETURN local_int;
  }

  function String_length {
    PARAM param_self;

    LOCAL local_str_attr;
    LOCAL local_length;
    LOCAL local_2;

    local_str_attr = GETATTR param_self 0;
    local_str_attr = length(local_length)
    ARG local_length;
    local_2 = CALL Int___init;
    RETURN local_2;
  }

  function String_concat {
    PARAM param_self;
    PARAM param_other;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_self_str_attr;
    LOCAL local_other_str_attr;
    LOCAL local_concat;
    LOCAL local_self_len;
    LOCAL local_other_len;
    LOCAL local_concat_len;
    LOCAL local_8;

    local_0 = LOAD data_9_sep_cat;
    ARG local_0;
    local_1 = CALL String___init;
    print(str, param_self)
    print(str, local_1)
    print(str, param_other)
    local_self_str_attr = GETATTR param_self 0;
    local_other_str_attr = GETATTR param_other 0;
    local_self_len = length(local_self_str_attr)
    local_other_len = length(local_self_str_attr)
    local_concat_len = local_self_len + local_other_len
    local_concat = concat(param_self, param_other, local_concat_len)
    ARG local_concat;
    local_8 = CALL String___init;
    RETURN local_8;
  }

  function String_substr {
    PARAM param_self;
    PARAM param_i;
    PARAM param_l;

    LOCAL local_self_str_local;
    LOCAL local_substr;
    LOCAL local_2;

    local_self_str_local = GETATTR param_self 0;
    local_substr = substr(local_self_str_local, param_i, param_l)
    ARG local_substr;
    local_2 = CALL String___init;
    RETURN local_2;
  }

  function Object___init {

    LOCAL local_self;

    local_self = ALLOCATE Object;
    RETURN local_self;
  }

  function Int___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE Int;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function Bool___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE Bool;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function String___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE String;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function List___init {

    LOCAL local_self;

    local_self = ALLOCATE List;
    RETURN local_self;
  }

  function List_isNil {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD 1;
    ARG local_0;
    local_1 = CALL Bool___init;
    RETURN local_1;
  }

  function List_head {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_tname_local;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;

    local_1 = TYPEOF param_self;
    local_3 = LOAD data_10_eol;
    ARG local_3;
    local_4 = CALL String___init;
    local_5 = LOAD data_11_under;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_12_meth;
    ARG local_7;
    local_8 = CALL String___init;
    local_tname_local = VCALL local_1 1;
    print(str, local_tname_local)
    print(str, local_6)
    print(str, local_8)
    print(str, local_4)
    ARG param_self;
    local_0 = VCALL local_1 0;
    local_9 = LOAD 0;
    ARG local_9;
    local_10 = CALL Int___init;
    RETURN local_10;
  }

  function List_tail {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_tname_local;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;

    local_1 = TYPEOF param_self;
    local_3 = LOAD data_10_eol;
    ARG local_3;
    local_4 = CALL String___init;
    local_5 = LOAD data_11_under;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = LOAD data_12_meth;
    ARG local_7;
    local_8 = CALL String___init;
    local_tname_local = VCALL local_1 1;
    print(str, local_tname_local)
    print(str, local_6)
    print(str, local_8)
    print(str, local_4)
    ARG param_self;
    local_0 = VCALL local_1 0;
    RETURN param_self;
  }

  function List_cons {
    PARAM param_self;
    PARAM param_i;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_tname_local;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;

    local_1 = CALL Cons___init;
    local_2 = TYPEOF local_1;
    local_4 = LOAD data_10_eol;
    ARG local_4;
    local_5 = CALL String___init;
    local_6 = LOAD data_11_under;
    ARG local_6;
    local_7 = CALL String___init;
    local_8 = LOAD data_13_meth;
    ARG local_8;
    local_9 = CALL String___init;
    local_tname_local = VCALL local_2 1;
    print(str, local_tname_local)
    print(str, local_7)
    print(str, local_9)
    print(str, local_5)
    ARG local_1;
    ARG param_i;
    ARG param_self;
    local_0 = VCALL local_2 7;
    RETURN local_0;
  }

  function Cons___init {

    LOCAL local_self;
    LOCAL local_car;
    LOCAL local_cdr;

    local_self = ALLOCATE Cons;
    ARG local_self;
    local_car = CALL Cons_car___init;
    SETATTR local_self 0 local_car;
    ARG local_self;
    local_cdr = CALL Cons_cdr___init;
    SETATTR local_self 1 local_cdr;
    RETURN local_self;
  }

  function Cons_car___init {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD 0;
    ARG local_0;
    local_1 = CALL Int___init;
    RETURN local_1;
  }

  function Cons_cdr___init {
    PARAM param_self;

    LOCAL local_0;

    local_0 = CALL Void___init;
    RETURN local_0;
  }

  function Cons_isNil {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD 0;
    ARG local_0;
    local_1 = CALL Bool___init;
    RETURN local_1;
  }

  function Cons_head {
    PARAM param_self;

    LOCAL local_car;

    local_car = GETATTR param_self 0;
    RETURN local_car;
  }

  function Cons_tail {
    PARAM param_self;

    LOCAL local_cdr;

    local_cdr = GETATTR param_self 1;
    RETURN local_cdr;
  }

  function Cons_init {
    PARAM param_self;
    PARAM param_i;
    PARAM param_rest;


    SETATTR param_self 0 param_i;
    SETATTR param_self 1 param_rest;
    RETURN param_self;
  }

  function Main___init {

    LOCAL local_self;
    LOCAL local_mylist;

    local_self = ALLOCATE Main;
    ARG local_self;
    local_mylist = CALL Main_mylist___init;
    SETATTR local_self 0 local_mylist;
    RETURN local_self;
  }

  function Main_mylist___init {
    PARAM param_self;

    LOCAL local_0;

    local_0 = CALL Void___init;
    RETURN local_0;
  }

  function Main_print_list {
    PARAM param_self;
    PARAM param_l;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_tname_local;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_11;
    LOCAL local_12;
    LOCAL local_13;
    LOCAL local_tname_local;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_18;
    LOCAL local_19;
    LOCAL local_20;
    LOCAL local_21;
    LOCAL local_22;
    LOCAL local_23;
    LOCAL local_tname_local;
    LOCAL local_25;
    LOCAL local_26;
    LOCAL local_27;
    LOCAL local_28;
    LOCAL local_29;
    LOCAL local_30;
    LOCAL local_31;
    LOCAL local_tname_local;
    LOCAL local_33;
    LOCAL local_34;
    LOCAL local_35;
    LOCAL local_36;
    LOCAL local_37;
    LOCAL local_38;
    LOCAL local_39;
    LOCAL local_40;
    LOCAL local_41;
    LOCAL local_42;
    LOCAL local_tname_local;
    LOCAL local_44;
    LOCAL local_45;
    LOCAL local_46;
    LOCAL local_47;
    LOCAL local_48;
    LOCAL local_49;
    LOCAL local_50;
    LOCAL local_51;
    LOCAL local_52;
    LOCAL local_tname_local;
    LOCAL local_54;
    LOCAL local_55;
    LOCAL local_56;
    LOCAL local_57;
    LOCAL local_58;
    LOCAL local_59;
    LOCAL local_60;
    LOCAL local_tname_local;
    LOCAL local_62;
    LOCAL local_63;
    LOCAL local_64;
    LOCAL local_65;
    LOCAL local_66;
    LOCAL local_67;

    local_2 = TYPEOF param_l;
    local_4 = LOAD data_10_eol;
    ARG local_4;
    local_5 = CALL String___init;
    local_6 = LOAD data_11_under;
    ARG local_6;
    local_7 = CALL String___init;
    local_8 = LOAD data_14_meth;
    ARG local_8;
    local_9 = CALL String___init;
    local_tname_local = VCALL local_2 1;
    print(str, local_tname_local)
    print(str, local_7)
    print(str, local_9)
    print(str, local_5)
    ARG param_l;
    local_1 = VCALL local_2 3;
    IF local_1 GOTO label_then_0;
    GOTO label_else_0;
    LABEL label_then_0;
    local_11 = LOAD data_10_eol;
    ARG local_11;
    local_12 = CALL String___init;
    local_13 = TYPEOF param_self;
    local_15 = LOAD data_10_eol;
    ARG local_15;
    local_16 = CALL String___init;
    local_17 = LOAD data_11_under;
    ARG local_17;
    local_18 = CALL String___init;
    local_19 = LOAD data_15_meth;
    ARG local_19;
    local_20 = CALL String___init;
    local_tname_local = VCALL local_13 1;
    print(str, local_tname_local)
    print(str, local_18)
    print(str, local_20)
    print(str, local_16)
    ARG param_self;
    ARG local_12;
    local_10 = VCALL local_13 3;
    GOTO label_continue_0;
    LABEL label_else_0;
    local_23 = TYPEOF param_l;
    local_25 = LOAD data_10_eol;
    ARG local_25;
    local_26 = CALL String___init;
    local_27 = LOAD data_11_under;
    ARG local_27;
    local_28 = CALL String___init;
    local_29 = LOAD data_16_meth;
    ARG local_29;
    local_30 = CALL String___init;
    local_tname_local = VCALL local_23 1;
    print(str, local_tname_local)
    print(str, local_28)
    print(str, local_30)
    print(str, local_26)
    ARG param_l;
    local_22 = VCALL local_23 4;
    local_31 = TYPEOF param_self;
    local_33 = LOAD data_10_eol;
    ARG local_33;
    local_34 = CALL String___init;
    local_35 = LOAD data_11_under;
    ARG local_35;
    local_36 = CALL String___init;
    local_37 = LOAD data_17_meth;
    ARG local_37;
    local_38 = CALL String___init;
    local_tname_local = VCALL local_31 1;
    print(str, local_tname_local)
    print(str, local_36)
    print(str, local_38)
    print(str, local_34)
    ARG param_self;
    ARG local_22;
    local_21 = VCALL local_31 4;
    local_40 = LOAD data_18_string;
    ARG local_40;
    local_41 = CALL String___init;
    local_42 = TYPEOF param_self;
    local_44 = LOAD data_10_eol;
    ARG local_44;
    local_45 = CALL String___init;
    local_46 = LOAD data_11_under;
    ARG local_46;
    local_47 = CALL String___init;
    local_48 = LOAD data_15_meth;
    ARG local_48;
    local_49 = CALL String___init;
    local_tname_local = VCALL local_42 1;
    print(str, local_tname_local)
    print(str, local_47)
    print(str, local_49)
    print(str, local_45)
    ARG param_self;
    ARG local_41;
    local_39 = VCALL local_42 3;
    local_52 = TYPEOF param_l;
    local_54 = LOAD data_10_eol;
    ARG local_54;
    local_55 = CALL String___init;
    local_56 = LOAD data_11_under;
    ARG local_56;
    local_57 = CALL String___init;
    local_58 = LOAD data_19_meth;
    ARG local_58;
    local_59 = CALL String___init;
    local_tname_local = VCALL local_52 1;
    print(str, local_tname_local)
    print(str, local_57)
    print(str, local_59)
    print(str, local_55)
    ARG param_l;
    local_51 = VCALL local_52 5;
    local_60 = TYPEOF param_self;
    local_62 = LOAD data_10_eol;
    ARG local_62;
    local_63 = CALL String___init;
    local_64 = LOAD data_11_under;
    ARG local_64;
    local_65 = CALL String___init;
    local_66 = LOAD data_20_meth;
    ARG local_66;
    local_67 = CALL String___init;
    local_tname_local = VCALL local_60 1;
    print(str, local_tname_local)
    print(str, local_65)
    print(str, local_67)
    print(str, local_63)
    ARG param_self;
    ARG local_51;
    local_50 = VCALL local_60 7;
    LABEL label_continue_0;
    RETURN local_0;
  }

  function Main_main {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_tname_local;
    LOCAL local_10;
    LOCAL local_11;
    LOCAL local_12;
    LOCAL local_13;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_18;
    LOCAL local_tname_local;
    LOCAL local_20;
    LOCAL local_21;
    LOCAL local_22;
    LOCAL local_23;
    LOCAL local_24;
    LOCAL local_25;
    LOCAL local_26;
    LOCAL local_27;
    LOCAL local_28;
    LOCAL local_tname_local;
    LOCAL local_30;
    LOCAL local_31;
    LOCAL local_32;
    LOCAL local_33;
    LOCAL local_34;
    LOCAL local_35;
    LOCAL local_36;
    LOCAL local_37;
    LOCAL local_38;
    LOCAL local_tname_local;
    LOCAL local_40;
    LOCAL local_41;
    LOCAL local_42;
    LOCAL local_43;
    LOCAL local_44;
    LOCAL local_45;
    LOCAL local_46;
    LOCAL local_47;
    LOCAL local_48;
    LOCAL local_tname_local;
    LOCAL local_50;
    LOCAL local_51;
    LOCAL local_52;
    LOCAL local_53;
    LOCAL local_54;
    LOCAL local_55;
    LOCAL local_56;
    LOCAL local_57;
    LOCAL local_mylist;
    LOCAL local_59;
    LOCAL local_tname_local;
    LOCAL local_61;
    LOCAL local_62;
    LOCAL local_63;
    LOCAL local_64;
    LOCAL local_65;
    LOCAL local_66;
    LOCAL local_67;
    LOCAL local_68;
    LOCAL local_69;
    LOCAL local_70;
    LOCAL local_tname_local;
    LOCAL local_72;
    LOCAL local_73;
    LOCAL local_74;
    LOCAL local_75;
    LOCAL local_76;
    LOCAL local_77;
    LOCAL local_78;
    LOCAL local_79;
    LOCAL local_tname_local;
    LOCAL local_81;
    LOCAL local_82;
    LOCAL local_83;
    LOCAL local_84;
    LOCAL local_85;
    LOCAL local_86;
    LOCAL local_87;

    local_5 = CALL List___init;
    local_6 = LOAD 1;
    ARG local_6;
    local_7 = CALL Int___init;
    local_8 = TYPEOF local_5;
    local_10 = LOAD data_10_eol;
    ARG local_10;
    local_11 = CALL String___init;
    local_12 = LOAD data_11_under;
    ARG local_12;
    local_13 = CALL String___init;
    local_14 = LOAD data_21_meth;
    ARG local_14;
    local_15 = CALL String___init;
    local_tname_local = VCALL local_8 1;
    print(str, local_tname_local)
    print(str, local_13)
    print(str, local_15)
    print(str, local_11)
    ARG local_5;
    ARG local_7;
    local_4 = VCALL local_8 6;
    local_16 = LOAD 2;
    ARG local_16;
    local_17 = CALL Int___init;
    local_18 = TYPEOF local_4;
    local_20 = LOAD data_10_eol;
    ARG local_20;
    local_21 = CALL String___init;
    local_22 = LOAD data_11_under;
    ARG local_22;
    local_23 = CALL String___init;
    local_24 = LOAD data_21_meth;
    ARG local_24;
    local_25 = CALL String___init;
    local_tname_local = VCALL local_18 1;
    print(str, local_tname_local)
    print(str, local_23)
    print(str, local_25)
    print(str, local_21)
    ARG local_4;
    ARG local_17;
    local_3 = VCALL local_18 6;
    local_26 = LOAD 3;
    ARG local_26;
    local_27 = CALL Int___init;
    local_28 = TYPEOF local_3;
    local_30 = LOAD data_10_eol;
    ARG local_30;
    local_31 = CALL String___init;
    local_32 = LOAD data_11_under;
    ARG local_32;
    local_33 = CALL String___init;
    local_34 = LOAD data_21_meth;
    ARG local_34;
    local_35 = CALL String___init;
    local_tname_local = VCALL local_28 1;
    print(str, local_tname_local)
    print(str, local_33)
    print(str, local_35)
    print(str, local_31)
    ARG local_3;
    ARG local_27;
    local_2 = VCALL local_28 6;
    local_36 = LOAD 4;
    ARG local_36;
    local_37 = CALL Int___init;
    local_38 = TYPEOF local_2;
    local_40 = LOAD data_10_eol;
    ARG local_40;
    local_41 = CALL String___init;
    local_42 = LOAD data_11_under;
    ARG local_42;
    local_43 = CALL String___init;
    local_44 = LOAD data_21_meth;
    ARG local_44;
    local_45 = CALL String___init;
    local_tname_local = VCALL local_38 1;
    print(str, local_tname_local)
    print(str, local_43)
    print(str, local_45)
    print(str, local_41)
    ARG local_2;
    ARG local_37;
    local_1 = VCALL local_38 6;
    local_46 = LOAD 5;
    ARG local_46;
    local_47 = CALL Int___init;
    local_48 = TYPEOF local_1;
    local_50 = LOAD data_10_eol;
    ARG local_50;
    local_51 = CALL String___init;
    local_52 = LOAD data_11_under;
    ARG local_52;
    local_53 = CALL String___init;
    local_54 = LOAD data_21_meth;
    ARG local_54;
    local_55 = CALL String___init;
    local_tname_local = VCALL local_48 1;
    print(str, local_tname_local)
    print(str, local_53)
    print(str, local_55)
    print(str, local_51)
    ARG local_1;
    ARG local_47;
    local_0 = VCALL local_48 6;
    SETATTR param_self 0 local_0;
    LABEL label_while_label_0;
    local_mylist = GETATTR param_self 0;
    local_59 = TYPEOF local_mylist;
    local_61 = LOAD data_10_eol;
    ARG local_61;
    local_62 = CALL String___init;
    local_63 = LOAD data_11_under;
    ARG local_63;
    local_64 = CALL String___init;
    local_65 = LOAD data_14_meth;
    ARG local_65;
    local_66 = CALL String___init;
    local_tname_local = VCALL local_59 1;
    print(str, local_tname_local)
    print(str, local_64)
    print(str, local_66)
    print(str, local_62)
    ARG local_mylist;
    local_57 = VCALL local_59 3;
    local_67 = LOAD 1;
    local_56 = local_67 - local_57
    ARG local_56;
    local_68 = CALL Bool___init;
    IF local_68 GOTO label_loop_label_0;
    GOTO label_pool_label_0;
    LABEL label_loop_label_0;
    local_70 = TYPEOF param_self;
    local_72 = LOAD data_10_eol;
    ARG local_72;
    local_73 = CALL String___init;
    local_74 = LOAD data_11_under;
    ARG local_74;
    local_75 = CALL String___init;
    local_76 = LOAD data_20_meth;
    ARG local_76;
    local_77 = CALL String___init;
    local_tname_local = VCALL local_70 1;
    print(str, local_tname_local)
    print(str, local_75)
    print(str, local_77)
    print(str, local_73)
    ARG param_self;
    ARG local_mylist;
    local_69 = VCALL local_70 7;
    local_79 = TYPEOF local_mylist;
    local_81 = LOAD data_10_eol;
    ARG local_81;
    local_82 = CALL String___init;
    local_83 = LOAD data_11_under;
    ARG local_83;
    local_84 = CALL String___init;
    local_85 = LOAD data_19_meth;
    ARG local_85;
    local_86 = CALL String___init;
    local_tname_local = VCALL local_79 1;
    print(str, local_tname_local)
    print(str, local_84)
    print(str, local_86)
    print(str, local_82)
    ARG local_mylist;
    local_78 = VCALL local_79 5;
    GOTO label_while_label_0;
    LABEL label_pool_label_0;
    local_87 = CALL Void___init;
    RETURN local_87;
  }

