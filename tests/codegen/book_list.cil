.types

  type Object {
    method Object_abort;
    method Object_type_name;
    method Object_copy;
  }
  type Int {
    method Object_abort;
    method Int_type_name;
    method Object_copy;
  }
  type Bool {
    method Object_abort;
    method Bool_type_name;
    method Object_copy;
  }
  type String {
    method Object_abort;
    method String_type_name;
    method Object_copy;
    method String_length;
    method String_concat;
    method String_substr;
  }
  type IO {
    method Object_abort;
    method IO_type_name;
    method Object_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
  }
  type Book {
    attribute title;
    attribute author;
    method Object_abort;
    method Book_type_name;
    method Object_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
    method Book_initBook;
    method Book_print;
  }
  type Article {
    attribute title;
    attribute author;
    attribute per_title;
    method Object_abort;
    method Article_type_name;
    method Object_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
    method Book_initBook;
    method Article_print;
    method Article_initArticle;
  }
  type BookList {
    method Object_abort;
    method BookList_type_name;
    method Object_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
    method BookList_isNil;
    method BookList_cons;
    method BookList_car;
    method BookList_cdr;
    method BookList_print_list;
  }
  type Cons {
    attribute xcar;
    attribute xcdr;
    method Object_abort;
    method Cons_type_name;
    method Object_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
    method Cons_isNil;
    method BookList_cons;
    method Cons_car;
    method Cons_cdr;
    method Cons_print_list;
    method Cons_init;
  }
  type Nil {
    method Object_abort;
    method Nil_type_name;
    method Object_copy;
    method IO_out_string;
    method IO_out_int;
    method IO_in_string;
    method IO_in_int;
    method Nil_isNil;
    method BookList_cons;
    method BookList_car;
    method BookList_cdr;
    method Nil_print_list;
  }
  type Main {
    attribute books;
    method Object_abort;
    method Main_type_name;
    method Object_copy;
    method Main_main;
  }

.data

  data_0_abort_msg = "Program Halted!";
  data_1_type_name_Object = "Object";
  data_2_type_name_Int = "Int";
  data_3_type_name_Bool = "Bool";
  data_4_type_name_String = "String";
  data_5_type_name_IO = "IO";
  data_6_type_name_Book = "Book";
  data_7_type_name_Article = "Article";
  data_8_type_name_BookList = "BookList";
  data_9_type_name_Cons = "Cons";
  data_10_type_name_Nil = "Nil";
  data_11_type_name_Main = "Main";
  data_12_string = "title:      ";
  data_13_string = "\n";
  data_14_string = "author:     ";
  data_15_string = "\n";
  data_16_string = "periodical:  ";
  data_17_string = "\n";
  data_18_case_err = "Case of did not match any branch!";
  data_19_string = "- dynamic type was Article -\n";
  data_20_string = "- dynamic type was Book -\n";
  data_21_string = "Compilers, Principles, Techniques, and Tools";
  data_22_string = "Aho, Sethi, and Ullman";
  data_23_string = "The Top 100 CD_ROMs";
  data_24_string = "Ulanoff";
  data_25_string = "PC Magazine";

.code

  function Void___init {

    LOCAL local_self;

    local_self = ALLOCATE Void;
    RETURN local_self;
  }

  function main {

    LOCAL local_0;
    LOCAL local_1;

    local_0 = CALL Main___init;
    ARG local_0;
    local_1 = CALL Main_main;
  }

  function Object_abort {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_0_abort_msg;
    ARG local_0;
    local_1 = CALL String___init;
    print(str, local_1
  }

  function Object_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_1_type_name_Object;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Object_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Object;
    RETURN local_copy;
  }

  function Int_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_2_type_name_Int;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Int_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Int;
    RETURN local_copy;
  }

  function Bool_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_3_type_name_Bool;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Bool_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Bool;
    RETURN local_copy;
  }

  function String_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_4_type_name_String;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function String_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE String;
    RETURN local_copy;
  }

  function IO_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_5_type_name_IO;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function IO_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE IO;
    RETURN local_copy;
  }

  function Book_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_6_type_name_Book;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Book_copy {
    PARAM param_self;

    LOCAL local_copy;
    LOCAL local_attr_copy;
    LOCAL local_attr_copy;

    local_copy = ALLOCATE Book;
    local_attr_copy = GETATTR param_self 0;
    SETATTR local_copy 0 local_attr_copy;
    local_attr_copy = GETATTR param_self 1;
    SETATTR local_copy 1 local_attr_copy;
    RETURN local_copy;
  }

  function Article_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_7_type_name_Article;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Article_copy {
    PARAM param_self;

    LOCAL local_copy;
    LOCAL local_attr_copy;
    LOCAL local_attr_copy;
    LOCAL local_attr_copy;

    local_copy = ALLOCATE Article;
    local_attr_copy = GETATTR param_self 0;
    SETATTR local_copy 0 local_attr_copy;
    local_attr_copy = GETATTR param_self 1;
    SETATTR local_copy 1 local_attr_copy;
    local_attr_copy = GETATTR param_self 2;
    SETATTR local_copy 2 local_attr_copy;
    RETURN local_copy;
  }

  function BookList_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_8_type_name_BookList;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function BookList_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE BookList;
    RETURN local_copy;
  }

  function Cons_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_9_type_name_Cons;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Cons_copy {
    PARAM param_self;

    LOCAL local_copy;
    LOCAL local_attr_copy;
    LOCAL local_attr_copy;

    local_copy = ALLOCATE Cons;
    local_attr_copy = GETATTR param_self 0;
    SETATTR local_copy 0 local_attr_copy;
    local_attr_copy = GETATTR param_self 1;
    SETATTR local_copy 1 local_attr_copy;
    RETURN local_copy;
  }

  function Nil_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_10_type_name_Nil;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Nil_copy {
    PARAM param_self;

    LOCAL local_copy;

    local_copy = ALLOCATE Nil;
    RETURN local_copy;
  }

  function Main_type_name {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD data_11_type_name_Main;
    ARG local_0;
    local_1 = CALL String___init;
    RETURN local_1;
  }

  function Main_copy {
    PARAM param_self;

    LOCAL local_copy;
    LOCAL local_attr_copy;

    local_copy = ALLOCATE Main;
    local_attr_copy = GETATTR param_self 0;
    SETATTR local_copy 0 local_attr_copy;
    RETURN local_copy;
  }

  function IO_out_string {
    PARAM param_str;
    PARAM param_self;


    print(str, param_str
    RETURN param_self;
  }

  function IO_out_int {
    PARAM param_int;
    PARAM param_self;


    print(int, param_int
    RETURN param_self;
  }

  function IO_in_string {
    PARAM param_self;

    LOCAL local_str;

    local_str = read(str)
    RETURN local_str;
  }

  function IO_in_int {
    PARAM param_self;

    LOCAL local_int;

    local_int = read(int)
    RETURN local_int;
  }

  function String_length {
    PARAM param_self;

    LOCAL local_length;
    LOCAL local_1;

    param_self = length(local_length)
    ARG local_length;
    local_1 = CALL Int___init;
    RETURN local_1;
  }

  function String_concat {
    PARAM param_self;
    PARAM param_other;

    LOCAL local_concat;
    LOCAL local_self_len;
    LOCAL local_other_len;
    LOCAL local_concat_len;
    LOCAL local_4;

    local_self_len = length(param_self)
    local_other_len = length(param_other)
    local_concat_len = local_self_len + local_other_len
    local_concat = concat(param_self, param_other, local_concat_len)
    ARG local_concat;
    local_4 = CALL String___init;
    RETURN local_4;
  }

  function String_substr {
    PARAM param_self;
    PARAM param_i;
    PARAM param_l;

    LOCAL local_substr;

    local_substr = substr(param_self, param_i, param_l)
    RETURN local_substr;
  }

  function Object___init {

    LOCAL local_self;

    local_self = ALLOCATE Object;
    RETURN local_self;
  }

  function Int___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE Int;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function Bool___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE Bool;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function String___init {
    PARAM param_value;

    LOCAL local_self;

    local_self = ALLOCATE String;
    SETATTR local_self 0 param_value;
    RETURN local_self;
  }

  function Book___init {

    LOCAL local_self;
    LOCAL local_title;
    LOCAL local_author;

    local_self = ALLOCATE Book;
    ARG local_self;
    local_title = CALL Book_title___init;
    SETATTR local_self 0 local_title;
    ARG local_self;
    local_author = CALL Book_author___init;
    SETATTR local_self 1 local_author;
    RETURN local_self;
  }

  function Book_title___init {
    PARAM param_self;

    LOCAL local_0;

    local_0 = CALL Void___init;
    RETURN local_0;
  }

  function Book_author___init {
    PARAM param_self;

    LOCAL local_0;

    local_0 = CALL Void___init;
    RETURN local_0;
  }

  function Book_initBook {
    PARAM param_self;
    PARAM param_title_p;
    PARAM param_author_p;

    LOCAL local_title;
    LOCAL local_author;

    SETATTR param_self 0 local_title;
    SETATTR param_self 1 local_author;
    RETURN param_self;
  }

  function Book_print {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_title;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_11;
    LOCAL local_12;
    LOCAL local_13;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_author;
    LOCAL local_18;
    LOCAL local_19;
    LOCAL local_20;
    LOCAL local_21;

    local_3 = LOAD data_12_string;
    ARG local_3;
    local_4 = CALL String___init;
    local_5 = TYPEOF param_self;
    ARG param_self;
    ARG local_4;
    local_2 = VCALL local_5 3;
    local_title = GETATTR param_self 0;
    local_7 = TYPEOF local_2;
    ARG local_2;
    ARG local_title;
    local_1 = VCALL local_7 3;
    local_8 = LOAD data_13_string;
    ARG local_8;
    local_9 = CALL String___init;
    local_10 = TYPEOF local_1;
    ARG local_1;
    ARG local_9;
    local_0 = VCALL local_10 3;
    local_14 = LOAD data_14_string;
    ARG local_14;
    local_15 = CALL String___init;
    local_16 = TYPEOF param_self;
    ARG param_self;
    ARG local_15;
    local_13 = VCALL local_16 3;
    local_author = GETATTR param_self 1;
    local_18 = TYPEOF local_13;
    ARG local_13;
    ARG local_author;
    local_12 = VCALL local_18 3;
    local_19 = LOAD data_15_string;
    ARG local_19;
    local_20 = CALL String___init;
    local_21 = TYPEOF local_12;
    ARG local_12;
    ARG local_20;
    local_11 = VCALL local_21 3;
    RETURN param_self;
  }

  function Article___init {

    LOCAL local_self;
    LOCAL local_title;
    LOCAL local_author;
    LOCAL local_per_title;

    local_self = ALLOCATE Article;
    ARG local_self;
    local_title = CALL Book_title___init;
    SETATTR local_self 0 local_title;
    ARG local_self;
    local_author = CALL Book_author___init;
    SETATTR local_self 1 local_author;
    ARG local_self;
    local_per_title = CALL Article_per_title___init;
    SETATTR local_self 2 local_per_title;
    RETURN local_self;
  }

  function Article_per_title___init {
    PARAM param_self;

    LOCAL local_0;

    local_0 = CALL Void___init;
    RETURN local_0;
  }

  function Article_initArticle {
    PARAM param_self;
    PARAM param_title_p;
    PARAM param_author_p;
    PARAM param_per_title_p;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_per_title;

    local_1 = TYPEOF param_self;
    ARG param_self;
    ARG param_title_p;
    ARG param_author_p;
    local_0 = VCALL local_1 7;
    SETATTR param_self 2 local_per_title;
    RETURN param_self;
  }

  function Article_print {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_per_title;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_11;

    ARG param_self;
    local_0 = CALL type Book : IO {
	[attrib] title : String;
	[attrib] author : String;
	[method] initBook(title_p:String, author_p:String): Book;
	[method] print(): Book;
}
_print;
    local_4 = LOAD data_16_string;
    ARG local_4;
    local_5 = CALL String___init;
    local_6 = TYPEOF param_self;
    ARG param_self;
    ARG local_5;
    local_3 = VCALL local_6 3;
    local_per_title = GETATTR param_self 2;
    local_8 = TYPEOF local_3;
    ARG local_3;
    ARG local_per_title;
    local_2 = VCALL local_8 3;
    local_9 = LOAD data_17_string;
    ARG local_9;
    local_10 = CALL String___init;
    local_11 = TYPEOF local_2;
    ARG local_2;
    ARG local_10;
    local_1 = VCALL local_11 3;
    RETURN param_self;
  }

  function BookList___init {

    LOCAL local_self;

    local_self = ALLOCATE BookList;
    RETURN local_self;
  }

  function BookList_isNil {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;

    local_1 = TYPEOF param_self;
    ARG param_self;
    local_0 = VCALL local_1 0;
    local_2 = LOAD 1;
    ARG local_2;
    local_3 = CALL Bool___init;
    RETURN local_3;
  }

  function BookList_cons {
    PARAM param_self;
    PARAM param_hd;

    LOCAL local_new_cell;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;

    local_1 = CALL Cons___init;
    local_3 = TYPEOF local_new_cell;
    ARG local_new_cell;
    ARG param_hd;
    ARG param_self;
    local_2 = VCALL local_3 12;
    RETURN local_2;
  }

  function BookList_car {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_2;

    local_1 = TYPEOF param_self;
    ARG param_self;
    local_0 = VCALL local_1 0;
    local_2 = CALL Book___init;
    RETURN local_2;
  }

  function BookList_cdr {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;
    LOCAL local_2;

    local_1 = TYPEOF param_self;
    ARG param_self;
    local_0 = VCALL local_1 0;
    local_2 = CALL BookList___init;
    RETURN local_2;
  }

  function BookList_print_list {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_1 = TYPEOF param_self;
    ARG param_self;
    local_0 = VCALL local_1 0;
    RETURN local_0;
  }

  function Cons___init {

    LOCAL local_self;
    LOCAL local_xcar;
    LOCAL local_xcdr;

    local_self = ALLOCATE Cons;
    ARG local_self;
    local_xcar = CALL Cons_xcar___init;
    SETATTR local_self 0 local_xcar;
    ARG local_self;
    local_xcdr = CALL Cons_xcdr___init;
    SETATTR local_self 1 local_xcdr;
    RETURN local_self;
  }

  function Cons_xcar___init {
    PARAM param_self;

    LOCAL local_0;

    local_0 = CALL Void___init;
    RETURN local_0;
  }

  function Cons_xcdr___init {
    PARAM param_self;

    LOCAL local_0;

    local_0 = CALL Void___init;
    RETURN local_0;
  }

  function Cons_isNil {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD 0;
    ARG local_0;
    local_1 = CALL Bool___init;
    RETURN local_1;
  }

  function Cons_init {
    PARAM param_self;
    PARAM param_hd;
    PARAM param_tl;

    LOCAL local_xcar;
    LOCAL local_xcdr;

    SETATTR param_self 0 local_xcar;
    SETATTR param_self 1 local_xcdr;
    RETURN param_self;
  }

  function Cons_car {
    PARAM param_self;

    LOCAL local_xcar;

    local_xcar = GETATTR param_self 0;
    RETURN local_xcar;
  }

  function Cons_cdr {
    PARAM param_self;

    LOCAL local_xcdr;

    local_xcdr = GETATTR param_self 1;
    RETURN local_xcdr;
  }

  function Cons_print_list {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_xcar;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_8;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_11;
    LOCAL local_dummy;
    LOCAL local_13;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_dummy;
    LOCAL local_18;
    LOCAL local_19;
    LOCAL local_20;
    LOCAL local_21;
    LOCAL local_22;
    LOCAL local_xcdr;
    LOCAL local_24;

    local_xcar = GETATTR param_self 0;
    local_2 = TYPEOF local_xcar;
    ARG local_xcar;
    local_0 = VCALL local_2 8;
    local_3 = TYPEOF local_0;
    local_4 = LOAD Article;
    local_5 = local_3 - local_4
    IF local_5 GOTO label_case_branch_0;
    local_6 = TYPEOF local_0;
    local_7 = LOAD Book;
    local_8 = local_6 - local_7
    IF local_8 GOTO label_case_branch_1;
    local_9 = LOAD data_18_case_err;
    ARG local_9;
    local_10 = CALL String___init;
    print(str, local_10
    LABEL label_case_branch_0;
    local_14 = LOAD data_19_string;
    ARG local_14;
    local_15 = CALL String___init;
    local_16 = TYPEOF param_self;
    ARG param_self;
    ARG local_15;
    local_13 = VCALL local_16 3;
    GOTO label_end_case_0;
    LABEL label_case_branch_1;
    local_19 = LOAD data_20_string;
    ARG local_19;
    local_20 = CALL String___init;
    local_21 = TYPEOF param_self;
    ARG param_self;
    ARG local_20;
    local_18 = VCALL local_21 3;
    GOTO label_end_case_0;
    LABEL label_end_case_0;
    local_xcdr = GETATTR param_self 1;
    local_24 = TYPEOF local_xcdr;
    ARG local_xcdr;
    local_22 = VCALL local_24 11;
    RETURN local_22;
  }

  function Nil___init {

    LOCAL local_self;

    local_self = ALLOCATE Nil;
    RETURN local_self;
  }

  function Nil_isNil {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD 1;
    ARG local_0;
    local_1 = CALL Bool___init;
    RETURN local_1;
  }

  function Nil_print_list {
    PARAM param_self;

    LOCAL local_0;
    LOCAL local_1;

    local_0 = LOAD 1;
    ARG local_0;
    local_1 = CALL Bool___init;
    RETURN local_1;
  }

  function Main___init {

    LOCAL local_self;
    LOCAL local_books;

    local_self = ALLOCATE Main;
    ARG local_self;
    local_books = CALL Main_books___init;
    SETATTR local_self 0 local_books;
    RETURN local_self;
  }

  function Main_books___init {
    PARAM param_self;

    LOCAL local_0;

    local_0 = CALL Void___init;
    RETURN local_0;
  }

  function Main_main {
    PARAM param_self;

    LOCAL local_a_book;
    LOCAL local_1;
    LOCAL local_2;
    LOCAL local_3;
    LOCAL local_4;
    LOCAL local_5;
    LOCAL local_6;
    LOCAL local_7;
    LOCAL local_an_article;
    LOCAL local_9;
    LOCAL local_10;
    LOCAL local_11;
    LOCAL local_12;
    LOCAL local_13;
    LOCAL local_14;
    LOCAL local_15;
    LOCAL local_16;
    LOCAL local_17;
    LOCAL local_18;
    LOCAL local_19;
    LOCAL local_20;
    LOCAL local_21;
    LOCAL local_22;
    LOCAL local_books;
    LOCAL local_24;
    LOCAL local_25;

    local_2 = CALL Book___init;
    local_3 = LOAD data_21_string;
    ARG local_3;
    local_4 = CALL String___init;
    local_5 = LOAD data_22_string;
    ARG local_5;
    local_6 = CALL String___init;
    local_7 = TYPEOF local_2;
    ARG local_2;
    ARG local_4;
    ARG local_6;
    local_1 = VCALL local_7 7;
    local_10 = CALL Article___init;
    local_11 = LOAD data_23_string;
    ARG local_11;
    local_12 = CALL String___init;
    local_13 = LOAD data_24_string;
    ARG local_13;
    local_14 = CALL String___init;
    local_15 = LOAD data_25_string;
    ARG local_15;
    local_16 = CALL String___init;
    local_17 = TYPEOF local_10;
    ARG local_10;
    ARG local_12;
    ARG local_14;
    ARG local_16;
    local_9 = VCALL local_17 9;
    local_20 = CALL Nil___init;
    local_21 = TYPEOF local_20;
    ARG local_20;
    ARG local_a_book;
    local_19 = VCALL local_21 8;
    local_22 = TYPEOF local_19;
    ARG local_19;
    ARG local_an_article;
    local_18 = VCALL local_22 8;
    SETATTR param_self 0 local_books;
    local_25 = TYPEOF local_books;
    ARG local_books;
    local_24 = VCALL local_25 11;
    RETURN local_24;
  }

